package Libraries.Development.Environment.Studio
use Libraries.Interface.Controls.MenuBar
use Libraries.Interface.Controls.Menu
use Libraries.Game.Graphics.Color
use Libraries.Development.Environment.Studio.Actions.ExitAction
use Libraries.Game.Game
use Libraries.Development.Environment.Projects.ProjectManager
use Libraries.Development.Environment.Studio.Updates.Updater
use Libraries.System.File

class QuorumStudio is Game
    MenuBar menuBar
    Menu fileMenu
    Menu editMenu
    Menu viewMenu
    Menu runMenu
    Menu windowsMenu
    Menu helpMenu
    Color background
    ProjectManager manager
    Updater updater

    action Start
        StartGame()
    end

    action GetProjectManager returns ProjectManager
        return manager
    end

    action CreateGame
        CreateMenuBar()
        MenuBar value = GetMenuBar()
        Add(value)
    end
    
    action GetMenuBar returns MenuBar
        return menuBar
    end

    action CreateMenuBar
        
        menuBar:Initialize(800, 20, "Menu Bar")
        menuBar:SetBackgroundColor(background:White())
        menuBar:SetAlpha(0.5)
        menuBar:ShowName()
        menuBar:GetLabel():SetPosition(10, 5)
        menuBar:SetPosition(0, 600)
        menuBar:EnableBorder()
        menuBar:SetX(0)
        menuBar:SetY(550)

        InitializeMenu(fileMenu)
        fileMenu:SetText("File")

        InitializeMenu(editMenu)
        editMenu:SetText("Edit")

        InitializeMenu(viewMenu)
        viewMenu:SetText("View")

        InitializeMenu(runMenu)
        runMenu:SetText("Run")

        InitializeMenu(windowsMenu)
        windowsMenu:SetText("Windows")

        InitializeMenu(helpMenu)
        helpMenu:SetText("Help")

        menuBar:AddMenu(fileMenu)
        menuBar:AddMenu(editMenu)
        menuBar:AddMenu(viewMenu)
        menuBar:AddMenu(runMenu)
        menuBar:AddMenu(windowsMenu)
        menuBar:AddMenu(helpMenu)
        SetupFileMenu()
        SetupEditMenu()
        SetupViewMenu()
        SetupRunMenu()
        SetupWindowsMenu()
        SetupHelpMenu()
    end

    private action InitializeMenu(Menu menu)
        menu:Initialize(100, 20, "Menu 1")
        menu:SetBackgroundColor(background:White())
        menu:ShowName()
        menu:EnableBorder()
        menu:GetLabel():SetPosition(5, 5)
    end

    private action SetupFileMenu
        Menu newProject
        InitializeMenu(newProject)
        newProject:SetText("New Project")

        Menu openProject
        InitializeMenu(openProject)
        openProject:SetText("Open Project")

        Menu closeProject
        InitializeMenu(closeProject)
        closeProject:SetText("Close Project")

        Menu newFile
        InitializeMenu(newFile)
        newFile:SetText("New File")

        Menu openFile
        InitializeMenu(openFile)
        openFile:SetText("Open File")

        Menu save
        InitializeMenu(save)
        save:SetText("Save")

        Menu saveAs
        InitializeMenu(saveAs)
        saveAs:SetText("Save As...")

        Menu saveAll
        InitializeMenu(saveAll)
        saveAll:SetText("Save All")

        Menu exit
        InitializeMenu(exit)
        exit:SetText("Exit")
        ExitAction exitAction
        exitAction:SetMainApplication(me)
        exit:AddMouseListener(exitAction)

        fileMenu:AddMenu(newProject)
        fileMenu:AddMenu(openProject)
        fileMenu:AddMenu(closeProject)
        fileMenu:AddMenu(newFile)
        fileMenu:AddMenu(openFile)
        fileMenu:AddMenu(save)
        fileMenu:AddMenu(saveAs)
        fileMenu:AddMenu(saveAll)
        fileMenu:AddMenu(exit)
    end

    private action SetupEditMenu
        Menu undo
        InitializeMenu(undo)
        undo:SetText("Undo")

        Menu redo
        InitializeMenu(redo)
        redo:SetText("Redo")

        Menu cut
        InitializeMenu(cut)
        cut:SetText("Cut")

        Menu copy
        InitializeMenu(copy)
        copy:SetText("Copy")

        Menu paste
        InitializeMenu(paste)
        paste:SetText("Paste")

        Menu delete
        InitializeMenu(delete)
        delete:SetText("Delete")

        Menu selectAll
        InitializeMenu(selectAll)
        selectAll:SetText("Select All")

        Menu gotoLine
        InitializeMenu(gotoLine)
        gotoLine:SetText("Go to Line")

        Menu findSelection
        InitializeMenu(findSelection)
        findSelection:SetText("Find Selection")

        Menu findNext
        InitializeMenu(findNext)
        findNext:SetText("Find Next")

        Menu findPrevious
        InitializeMenu(findPrevious)
        findPrevious:SetText("Find Previous")

        Menu Find
        InitializeMenu(Find)
        Find:SetText("Find")

        Menu replace
        InitializeMenu(replace)
        replace:SetText("Replace")

        Menu projectProperties
        InitializeMenu(projectProperties)
        projectProperties:SetText("Edit Project Properties")


        editMenu:AddMenu(undo)
        editMenu:AddMenu(redo)
        editMenu:AddMenu(cut)
        editMenu:AddMenu(copy)
        editMenu:AddMenu(paste)
        editMenu:AddMenu(delete)
        editMenu:AddMenu(selectAll)
        editMenu:AddMenu(gotoLine)
        editMenu:AddMenu(findSelection)
        editMenu:AddMenu(findNext)
        editMenu:AddMenu(findPrevious)
        editMenu:AddMenu(Find)
        editMenu:AddMenu(replace)
        editMenu:AddMenu(projectProperties)
    end

    private action SetupViewMenu
        Menu quorumStudioErrorLog
        InitializeMenu(quorumStudioErrorLog)
        quorumStudioErrorLog:SetText("Quorum Studio Error Log")

        Menu lineNumbers
        InitializeMenu(lineNumbers)
        lineNumbers:SetText("Line Numbers")

        Menu blocksMode
        InitializeMenu(blocksMode)
        blocksMode:SetText("BlocksMode")

        Menu splitMode
        InitializeMenu(splitMode)
        splitMode:SetText("Split Mode")

        viewMenu:AddMenu(quorumStudioErrorLog)
        viewMenu:AddMenu(lineNumbers)
        viewMenu:AddMenu(blocksMode)
        viewMenu:AddMenu(splitMode)
    end

    private action SetupRunMenu
        Menu build
        InitializeMenu(build)
        build:SetText("Build")

        Menu cleanAndBuild
        InitializeMenu(cleanAndBuild)
        cleanAndBuild:SetText("Clean and Build")

        Menu run
        InitializeMenu(run)
        run:SetText("Run")

        Menu debug
        InitializeMenu(debug)
        debug:SetText("Debug")

        Menu stopDebugging
        InitializeMenu(stopDebugging)
        stopDebugging:SetText("Stop Debugging")

        Menu stepOver
        InitializeMenu(stepOver)
        stepOver:SetText("Step Over")

        Menu stepInto
        InitializeMenu(stepInto)
        stepInto:SetText("Step Into")

        Menu stepOut
        InitializeMenu(stepOut)
        stepOut:SetText("Step Out")

        Menu runToCursor
        InitializeMenu(runToCursor)
        runToCursor:SetText("Run to Cursor")


        runMenu:AddMenu(build)
        runMenu:AddMenu(cleanAndBuild)
        runMenu:AddMenu(run)
        runMenu:AddMenu(debug)
        runMenu:AddMenu(stopDebugging)
        runMenu:AddMenu(stepOver)
        runMenu:AddMenu(stepInto)
        runMenu:AddMenu(stepOut)
        runMenu:AddMenu(runToCursor)
    end

    private action SetupWindowsMenu
        Menu projectWindow
        InitializeMenu(projectWindow)
        projectWindow:SetText("Project Window")

        Menu editorWindow
        InitializeMenu(editorWindow)
        editorWindow:SetText("Editor Window")

        Menu errorWindow
        InitializeMenu(errorWindow)
        errorWindow:SetText("Error Window")

        Menu consoleWindow
        InitializeMenu(consoleWindow)
        consoleWindow:SetText("Console Window")

        Menu variablesWindow
        InitializeMenu(variablesWindow)
        variablesWindow:SetText("Variables Window")

        Menu breakpointsWindow
        InitializeMenu(breakpointsWindow)
        breakpointsWindow:SetText("Breakpoints Window")

        Menu optionsWindow
        InitializeMenu(optionsWindow)
        optionsWindow:SetText("Options Window")


        windowsMenu:AddMenu(projectWindow)
        windowsMenu:AddMenu(editorWindow)
        windowsMenu:AddMenu(errorWindow)
        windowsMenu:AddMenu(consoleWindow)
        windowsMenu:AddMenu(variablesWindow)
        windowsMenu:AddMenu(breakpointsWindow)
        windowsMenu:AddMenu(optionsWindow)
    end

    private action SetupHelpMenu
        Menu about
        InitializeMenu(about)
        about:SetText("About")

        Menu findHelpOnline
        InitializeMenu(findHelpOnline)
        findHelpOnline:SetText("Find Help Online")

        Menu checkForUpdates
        InitializeMenu(checkForUpdates)
        checkForUpdates:SetText("Check for Updates")


        helpMenu:AddMenu(about)
        helpMenu:AddMenu(findHelpOnline)
        helpMenu:AddMenu(checkForUpdates)
    end

    action LoadUpdates
        File defaultUpdateFile
        defaultUpdateFile:SetPath("Configuration/Updates.json")
        updater:Load(defaultUpdateFile)

        Downloader download
        download:SetPath("https://quorumlanguage.com/studio/live/Updates.json")
        boolean value = download:Exists()

        File downloadHere
        downloadHere:SetPath("Updates/Updates.json")
        download:SetFile(downloadHere)
        download:Download()
        
        Updater newUpdate
        newUpdate:Load(downloadHere)
        updater:CheckForNewerVersion(newUpdate)
        if updater:HasUpdates()
            updater:DownloadModules()
        end
    end

    action CheckForUpdates
        //first ping the server and see if the files are there.
        
        //get the file --- for now let's get one from testing
        File new
        new:SetPath("Tests/UpdatesTests/UpdateNewVersion.json")

        Updater up
        up:Load(new)

        updater:CheckForNewerVersion(up)
    end
end