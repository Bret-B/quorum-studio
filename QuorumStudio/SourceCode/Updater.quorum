package Libraries.Development.Environment.Studio.Updates
use Libraries.System.File
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Data.Formats.JavaScriptObjectNotationObject
use Libraries.System.Logger
use Libraries.Containers.HashTable
use Libraries.Containers.Iterator
use Libraries.Containers.Array

class Updater
    constant text MAJOR_VERSION = "Major Version"
    constant text MINOR_VERSION = "Minor Version"
    HashTable<text, Module> modules
    Logger logger

    action Load(File file)
        JavaScriptObjectNotation notation
        text value = file:Read()
        JavaScriptObjectNotationObject json = notation:ReadToObject(value)
        //get all the properties from JSON
        i = 0
        repeat while i < json:GetSize()
            JavaScriptObjectNotationObject obj = json:Get(i)
            //output obj:GetKey()
            ProcessKey(obj)
            i = i + 1
        end

        Iterator<Module> mods = modules:GetValueIterator()
        repeat while mods:HasNext()
            Module m = mods:Next()
            output m:GetName() + " " + m:GetVersion()
        end
    end

    private action ProcessKey(JavaScriptObjectNotationObject object)
        text key = object:GetKey()
        Module module
        module:SetName(key)
        if object:IsEmpty()
            logger:Log("A module named " + key + " was specified, but it contained no information about it.")
            return now
        end

        JavaScriptObjectNotationObject subobject = object:Get(0)
        i = 0
        repeat while i < subobject:GetSize()
            JavaScriptObjectNotationObject value = subobject:Get(i)
            text subkey = value:GetKey()
            check
                if subkey = MAJOR_VERSION
                    module:SetMajorVersion(value:GetInteger())
                elseif subkey = MINOR_VERSION
                    module:SetMinorVersion(value:GetInteger())
                end
                i = i + 1
            detect e
                logger:Log("An error was thrown when processing the Updates.json file. A major or minor version number was incorrect in the module " + key + ".")
            end
        end

        modules:Add(module:GetName(), module)
    end

    private action GetSortedModuleList returns Array<Module>
        Array<Module> mods
        Iterator<Module> it = modules:GetValueIterator()
        repeat while it:HasNext()
            Module module = it:Next()
            mods:Add(module)
        end

        mods:Sort()
        return mods
    end

    action CheckForNewerVersion(Updater updater)
        Array<Module> mine = GetSortedModuleList()
        Array<Module> theirs = updater:GetSortedModuleList()
    end
end