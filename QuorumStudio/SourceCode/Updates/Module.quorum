package Libraries.Development.Environment.Studio.Updates
use Libraries.Language.Support.CompareResult
use Libraries.Containers.Array
use Libraries.Containers.Iterator

class Module 
    text name = ""
    integer majorVersion = 1
    integer minorVersion = 1
    Array<text> filesInModule

    action AddFile(text file)
        filesInModule:Add(file)
    end

    action GetFile(integer index) returns text
        return filesInModule:Get(index)
    end

    action GetFiles returns Iterator<text>
        return filesInModule:GetIterator()
    end

    action GetFileArraySize returns integer
        return filesInModule:GetSize()
    end

    action GetName returns text
        return name
    end

    action GetMajorVersion returns integer
        return majorVersion
    end

    action GetMinorVersion returns integer
        return minorVersion
    end

    action GetVersion returns text
        return "" + majorVersion + "." + minorVersion
    end

    action SetName(text value)
        name = value
    end

    action SetMajorVersion(integer value)
        majorVersion = value
    end

    action SetMinorVersion(integer value)
        minorVersion = value
    end

    action Compare(Object o) returns integer
        Module m = cast(Module, o)
        if name = m:GetName()
            return 0
        elseif name > m:GetName()
            return 1
        else
            return -1
        end
    end
end