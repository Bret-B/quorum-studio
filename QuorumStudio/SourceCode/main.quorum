use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.System.File
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Data.Formats.JavaScriptObjectNotationObject
use Libraries.System.DateTime
use Libraries.Development.Environment.Studio.QuorumStudio
//use Libraries.Interface.Controls.MenuBar
use Libraries.Development.Environment.Projects.ProjectManager
use Libraries.Containers.Iterator
use Libraries.Concurrency.ThreadRunner
//use Libraries.Development.Environment.Studio.Actions.BuildAction
use Libraries.Game.DesktopConfiguration

class Main
    QuorumStudio studio
    ProjectManager manager = studio:GetProjectManager()
    action Main
        DesktopConfiguration config = studio:GetDesktopConfiguration()
//        config:autoResizeTextures = false
        config:resizable = true
        studio:Start()
        //ProjectTesting()
        //NewProjectTest()
        //TestThreadRunner()
        //OpenBuildProject()
        //UpdaterTest()
    end

    action UpdaterTest
        studio:LoadUpdates()
    end

    action OpenBuildProject
        File game
        game:SetPath("Templates/New/Game")
        QuorumProject gameProject = manager:Open(game)
        //BuildAction build = gameProject:GetBuildAction()
        //build:Do()
    end

    action TestThreadRunner
        ThreadRunner runner
        
        i = 1
        repeat 100 times
            OutputAction act
            act:SetI(i)
            runner:Add(act)
            i = i + 1
        end
        runner:ShutDown()
    end

    action NewProjectTest
        File new
        new:SetWorkingDirectory("/Users/stefika/Desktop/Tests")
        new:SetPath("MyProject1")
        manager:New(new)

        File lego
        lego:SetPath("Templates/New/LEGO")

        File newFromLegoTemplate
        newFromLegoTemplate:SetWorkingDirectory("/Users/stefika/Desktop/Tests")
        newFromLegoTemplate:SetPath("MyLegoProject")
        manager:New(newFromLegoTemplate, lego)
    end

    action ProjectTesting
        File blank
        blank:SetPath("Templates/New/Blank")
        QuorumProject blankProject = manager:Open(blank)


        File game
        game:SetPath("Templates/New/Game")
        QuorumProject gameProject = manager:Open(game)

        File lego
        lego:SetPath("Templates/New/LEGO")
        QuorumProject legoProject = manager:Open(lego)

        Iterator<QuorumProject> iterator = manager:GetIterator()
        repeat while iterator:HasNext()
            QuorumProject project = iterator:Next()
            output project:GetProjectName() + ": " + project:GetExecutableName()
        end
        a = 5
    end

    action Test2
        JavaScriptObjectNotation note
        File file
        file:SetPath("Tests/ProjectFiles/ImageSheetsProject.json")
        text read = file:Read()
        JavaScriptObjectNotationObject object = note:ReadToObject(read)
        text value = object:ToText()
        output value
    end

    action Test
        DateTime time
        number start = time:GetEpochTime()
        QuorumProject project
        File load
        load:SetPath("Tests/ProjectFiles/All.json")
        project:LoadProperties(load)
        load:Close()

        File save
        save:SetPath("Tests/temp")
        save:CreateDirectories()
        save:SetPath("Tests/temp/All.json")
        project:SaveProperties(save)
        save:Close()

        number finish = time:GetEpochTime()
        output "Opened project in " + (finish - start) / 1000.0 + " seconds."
    end
end