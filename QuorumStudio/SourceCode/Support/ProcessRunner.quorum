package Libraries.Concurrency
use Libraries.Containers.Array
use Libraries.System.File
use Libraries.Development.Environment.Studio.Interface.OutputTab

class ProcessRunner 
    Array<ProcessListener> listeners
    text name = ""
    Array<text> flags
    OutputTab out = undefined

    action AddListener(ProcessListener listener)
        listeners:Add(listener)
    end

    action Remove(ProcessListener listener)
        listeners:Remove(listener)
    end

    action SetOutputTab(OutputTab tab)
        out = tab
    end

    action GetOutputTab returns OutputTab
        return out
    end

    action FireProcessStartedEvent
        i = 0
        repeat while i < listeners:GetSize()
            ProcessListener listener = listeners:Get(i)
            ProcessStartedEvent event
            event:SetName(name)
            event:SetParameters(flags)
            event:SetProcess(me)
            listener:Run(event)
            i = i + 1
        end
    end

    action FireProcessStoppedEvent
        i = 0
        repeat while i < listeners:GetSize()
            ProcessListener listener = listeners:Get(i)
            ProcessStoppedEvent event
            event:SetName(name)
            event:SetParameters(flags)
            event:SetProcess(me)
            listener:Run(event)
            i = i + 1
        end
    end

    action FireProcessErrorEvent(text value)
        i = 0
        repeat while i < listeners:GetSize()
            ProcessListener listener = listeners:Get(i)
            ProcessErrorEvent event
            event:SetName(name)
            event:SetParameters(flags)
            event:SetProcess(me)
            event:SetOutput(value)
            listener:Run(event)
            i = i + 1
        end
    end

    action FireProcessOutputEvent(text value)
        i = 0
        repeat while i < listeners:GetSize()
            ProcessListener listener = listeners:Get(i)
            ProcessOutputEvent event
            event:SetName(name)
            event:SetParameters(flags)
            event:SetProcess(me)
            event:SetOutput(value)
            listener:Run(event)
            i = i + 1
        end
    end

    action GetProcessName returns text
        return me:name
    end

    action SetProcessName(text name)
        me:name = name
    end

    action GetParameters returns Array<text>
        return me:flags
    end

    action SetParameters(Array<text> flags)
        me:flags = flags
    end
    
    action Run
        Run(name, flags)
    end

    private system action Run(text name, Array<text> flags)

    system action SendInput(text value)
    system action GetDirectory returns File
    system action SetDirectory(File folder)
    system action Cancel

    action ToText returns text
        return name
    end
end