package Libraries.Language.Debug
use Libraries.System.File

class Breakpoint 
    integer count = -1
    integer line = 0
    text dotName = ""
    text fullyQualifiedName = ""
    File file = undefined

    action GetFile returns File
        return file
    end

    action SetFile(File file)
        me:file = file
    end

    /**
     * This method returns the line number the breakpoint is on.
     * 
     * @return 
     */
    action GetLine returns integer
        return line
    end
    
    action SetLine(integer line)
        me:line = line
    end

    /**
     * This method returns a fully qualified class name. For example, a class
     * in the package foo, named bar, would return foo/bar.
     * GetFullyQualifiedName
     * 
     * @return 
     */
    action GetFullyQualifiedName returns text
        return fullyQualifiedName
    end

    private action GetJVMClassName(text key) returns text
        text value = key:Replace(".", "/")
        if value:StartsWith("/")
            return "quorum" + value
        end
        return "quorum/" + value
    end

    /**
     * This method returns the dot version of a file name. For example, 
     * a class in the package foo, named bar, would return foo.bar.
     * GetDotName
     * @return 
     */
    action GetDotName returns text
        return dotName
    end

    action SetDotName(text key)
        fullyQualifiedName = GetJVMClassName(key)
        me:dotName = key
    end

    /**
     * This method returns a key generated from information in the breakpoint
     * that can be used to identify unique breakpoints. By default, implementors
     * follow the format line:className.
     * @return 
     */
    action GetStaticKey returns text
        return line + "" + dotName
    end
    
    /**
     * This returns the number of times the breakpoint should be hit. This is
     * useful for creating one-off breakpoints, that fire only a single time, 
     * for example in a run forward to line call.
     * 
     * @return 
     */
    action GetCountFilter returns integer
        return count
    end
    
    /**
     * This method returns whether or not the breakpoint should be hit 
     * only a certain number of times.
     * 
     * @return 
     */
    action HasCountFilter returns boolean
        return count not= -1
    end
end