package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Projects.ProjectManager
use Libraries.Development.Environment.Projects.Project
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Controls.TextBox
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Studio.Interface.OutputTab
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Development.Environment.Projects.ProjectTree
use Libraries.Interface.Selections.TreeSelection
use Libraries.Containers.Array
use Libraries.Interface.Controls.TreeItem
use Libraries.Development.Environment.Projects.ProjectTreeItem
use Libraries.Development.Environment.Studio.Build.BuildInformation
use Libraries.Development.Environment.Studio.Interface.ErrorTab
use Libraries.Interface.Controls.Spreadsheet
use Libraries.Interface.Selections.SpreadsheetSelection
use Libraries.Interface.Controls.Cell
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.System.File
use Libraries.Development.Environment.Studio.Interface.EditorTab

class JumpToErrorBehavior is QuorumStudioBehavior

    action Run(BehaviorEvent event)
        if not(event:GetItem() is Cell)
            return now
        end
       
        Cell cell = cast(Cell, event:GetItem())
        Spreadsheet sheet = cell:GetSpreadsheet()
        SpreadsheetSelection selection = sheet:GetSelection()
        integer x = selection:GetX()
        integer y = selection:GetY()
        Cell lineCell = sheet:GetCell(1, y)
        Cell fileCell = sheet:GetCell(2, y)
        
        integer line = cast(integer, lineCell:GetText())
        text fileText = fileCell:GetText()

        QuorumStudio studio = GetMainApplication()
        CodeEditorTabPane editors = studio:GetTabPane()
        File file
        file:SetAbsolutePath(fileText)
        EditorTab tab = editors:OpenNewTab(file)
        TextBox box = tab:GetTextBox()
        if line > 0
            box:SetCaretPosition(line - 1, 0)
        end
    end
end