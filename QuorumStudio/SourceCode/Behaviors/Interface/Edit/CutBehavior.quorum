package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Development.Environment.Studio.Behaviors.QuorumStudioBehavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.Interface.FindDialog
use Libraries.Interface.Controls.Dialog
use Libraries.Development.Environment.Studio.Interface.ReplaceDialog
use Libraries.Interface.Controls.Checkbox
use Libraries.Interface.Item
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TextBoxSelection
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Interface.Behaviors.Controls.TextBoxCopyToClipboardBehavior
use Libraries.Interface.Controls.MenuItem
use Libraries.Interface.Controls.MenuRoot
use Libraries.Game.FocusManager
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Interface.Controls.Blocks.Block
use Libraries.Interface.Controls.Blocks.CodeEditor
use Libraries.Interface.Behaviors.Blocks.CodeEditorCutToClipboardBehavior

class CutBehavior is EditorBehavior
    TextBoxCopyToClipboardBehavior behave
    CodeEditorCutToClipboardBehavior blockBehave

    action Run(Item item)
        if item is CodeTextBox
            BehaviorEvent newEvent
            newEvent:SetItem(item)
            behave:Run(newEvent)
            TextBox box = cast(TextBox, item)
            box:DeleteSelection()
        elseif item is CodeEditor
            BehaviorEvent newEvent
            newEvent:SetItem(item)
            blockBehave:Run(newEvent)
        elseif item is Block
            BehaviorEvent newEvent
            Block block = cast(Block, item)
            CodeEditor editor = block:GetEditor()
            newEvent:SetItem(editor)
            blockBehave:Run(newEvent)
        end
    end
end