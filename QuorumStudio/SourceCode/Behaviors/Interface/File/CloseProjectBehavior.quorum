package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.MouseListener
use Libraries.Interface.Events.MouseEvent
use Libraries.System.SystemHelper
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Controls.FileChooser
use Libraries.System.File
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Projects.ProjectManager
use Libraries.Development.Environment.Projects.ProjectTree
use Libraries.Interface.Selections.TreeSelection
use Libraries.Containers.Iterator
use Libraries.Interface.Behaviors.Behavior
use Libraries.Containers.Array
use Libraries.Interface.Controls.TreeItem
use Libraries.Development.Environment.Projects.ProjectTreeItem

class CloseProjectBehavior is QuorumStudioBehavior
    QuorumStudio studio = undefined
    ProjectManager manager = undefined

    action SetMainApplication(QuorumStudio studio)
        me:studio = studio
        manager = studio:GetProjectManager()
    end

    action GetMainApplication returns QuorumStudio
        return studio
    end

    action Run(BehaviorEvent event)
        ProjectTree tree = studio:GetProjectTree()
        TreeSelection selection = tree:GetSelection()
        if not selection:IsEmpty()
            Array<TreeItem> items = selection:GetPath()
            ProjectTreeItem value = cast(ProjectTreeItem, items:Get(0))
            QuorumProject project = value:GetProject()
            manager:Close(project)
        end

        studio:Save()
    end
end