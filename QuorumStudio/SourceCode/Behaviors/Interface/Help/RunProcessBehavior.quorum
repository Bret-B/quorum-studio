package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Configuration.Options
use Libraries.System.File
use Libraries.Concurrency.ProcessRunner
use Libraries.Concurrency.ProcessListener
use Libraries.Concurrency.ProcessStartedEvent
use Libraries.Concurrency.ProcessStoppedEvent
use Libraries.Concurrency.ProcessErrorEvent
use Libraries.Concurrency.ProcessOutputEvent

class RunProcessBehavior is QuorumStudioBehavior, ProcessListener
    QuorumStudio studio = undefined
    Options options = undefined
    File file = undefined

    action SetMainApplication(QuorumStudio studio)
        me:studio = studio
        options = studio:GetOptions()
    end

    action GetMainApplication returns QuorumStudio
        return studio
    end

    action Run(BehaviorEvent event)
        if GetFile() = undefined
            return now
        end
        File folder = file:GetParentDirectory()
        
        ProcessRunner runner
        runner:AddListener(me)
        runner:SetDirectory(folder)
        runner:SetProcessName(file:GetAbsolutePath())
        runner:Run()
    end

    action GetFile returns File
        return file
    end

    action SetFile(File file)
        me:file = file
    end

    action Run(ProcessStartedEvent event)
    end

    action Run(ProcessStoppedEvent event)
    end

    action Run(ProcessErrorEvent event)
    end

    action Run(ProcessOutputEvent event)
    end
end