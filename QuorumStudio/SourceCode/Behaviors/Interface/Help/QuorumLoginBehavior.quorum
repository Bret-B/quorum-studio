package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Network.NetworkConnection
use Libraries.Network.NetworkRequest
use Libraries.Network.NetworkResponseEvent
use Libraries.Network.NetworkRequestListener
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Development.Environment.Projects.ProjectManager
use Libraries.Development.Environment.Studio.Interface.CheckForUpdatesDialog
use Libraries.Development.Environment.Configuration.Options
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Development.Environment.Projects.Credentials
use Libraries.Containers.HashTable
use Libraries.Containers.Array

class QuorumLoginBehavior is QuorumStudioBehavior, NetworkRequestListener
    QuorumStudio studio = undefined
    ProjectManager manager = undefined
    Options options = undefined
    text loginSuccess = "success"
    Behavior successfulLoginBehavior = undefined
    Behavior failedLoginBehavior = undefined

    action SetMainApplication(QuorumStudio studio)
        me:studio = studio
        manager = studio:GetProjectManager()
        options = studio:GetOptions()
    end

    action GetMainApplication returns QuorumStudio
        return studio
    end

    action Run(BehaviorEvent event)
        NetworkRequest request
        request:SetRequestTypeToPost()

        // In order to successfully access our website, the user agent header must be provided.
        // What is provided is seemingly arbitrary, but this is pulled from the headers generated by Firefox to access this page.
        request:AddHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:96.0) Gecko/20100101 Firefox/96.0")

        if options = undefined
            GameStateManager gsm
            studio = cast(QuorumStudio, gsm:GetGame())
            options = studio:GetOptions()
        end

        request:SetWebAddress("https://quorumlanguage.com/login.php")
        Credentials credentials = options:GetPassword(options:QUORUM_WEBSITE_PASSWORD_KEY)
        text user = "defaultLogin"
        text pass = "noPassword"

        if credentials not= undefined 
            and credentials:GetUsername() not= undefined
            and credentials:GetPassword() not= undefined
            and credentials:GetUsername():IsEmpty() = false
            and credentials:GetPassword():IsEmpty() = false
        
            user = credentials:GetUsername()
            pass = credentials:GetPassword()
        end
        request:SetBody("username="+user + "&password=" + pass)
        NetworkConnection http
        http:AddListener(me)

        check
            http:SendRequest(request)
        detect e
            output "An error occurred while logging in."
            e:OutputStackTrace()
        end
    end

    action ResponseReceived(NetworkResponseEvent response)
        text value = response:GetResponseText():Trim()

        // We currently ignore the results of the login. Just getting a response back from the server is sufficient.
        text cookieID = "N/A"

        options:SetLoginCookie(cookieID)
        Behavior behave = GetSuccessfulLoginBehavior()
        if behave not= undefined
            behave:Run(undefined)
        end
    end

    action GetSuccessfulLoginBehavior returns Behavior
        return successfulLoginBehavior
    end

    action SetSuccessfulLoginBehavior(Behavior successfulLoginBehavior)
        me:successfulLoginBehavior = successfulLoginBehavior
    end
    action GetFailedLoginBehavior returns Behavior
        return failedLoginBehavior
    end

    action SetFailedLoginBehavior(Behavior failedLoginBehavior)
        me:failedLoginBehavior = failedLoginBehavior
    end
end