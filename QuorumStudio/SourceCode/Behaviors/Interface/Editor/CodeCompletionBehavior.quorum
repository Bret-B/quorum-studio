package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Interface.Controls.Tab
use Libraries.Development.Environment.Studio.Interface.EditorTab
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Interface.Controls.TextBox
use Libraries.Development.Environment.Studio.Interface.BreakpointsTab
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Interface.Item
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Language.Compile.CodeCompletionRequest
use Libraries.Language.Compile.CodeCompletionResult
use Libraries.Containers.Iterator
use Libraries.Language.Compile.CodeCompletionItem

class CodeCompletionBehavior is QuorumStudioBehavior
    BuildManager builder = undefined

    action GetBuildManager returns BuildManager
        return builder
    end

    action SetBuildManager(BuildManager builder)
        me:builder = builder
    end

    action Run(BehaviorEvent event)
        QuorumStudio studio = GetMainApplication()
        Item item = event:GetItem()
        if item is TextBox
            TextBox box = cast(TextBox, item)
            DoCodeCompletion(box)
        end
    end

    private action DoCodeCompletion(TextBox box)
        if builder = undefined
            return now
        end

        CodeCompletionResult result = builder:RequestCodeCompletion()
        Iterator<CodeCompletionItem> iterator = result:GetIterator()
        if not iterator:HasNext()
            output "No completion items available"
        end

        repeat while iterator:HasNext()
            CodeCompletionItem item = iterator:Next()
            output item:displayText
        end
    end
end