package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Interface.Controls.Tab
use Libraries.Development.Environment.Studio.Interface.EditorTab
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Interface.Controls.TextBox
use Libraries.Development.Environment.Studio.Interface.BreakpointsTab
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Interface.Item
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Language.Compile.CodeCompletionRequest
use Libraries.Language.Compile.CodeCompletionResult
use Libraries.Containers.Iterator
use Libraries.Language.Compile.CodeCompletionItem
use Libraries.Interface.Controls.PopupMenu
use Libraries.Interface.Controls.MenuItem
use Libraries.Game.Graphics.Color
use Libraries.Containers.Array

class CodeCompletionBehavior is QuorumStudioBehavior
    BuildManager builder = undefined

    action GetBuildManager returns BuildManager
        return builder
    end

    action SetBuildManager(BuildManager builder)
        me:builder = builder
    end

    action Run(BehaviorEvent event)
        QuorumStudio studio = GetMainApplication()
        Item item = event:GetItem()
        if item is TextBox
            TextBox box = cast(TextBox, item)
            DoCodeCompletion(box)
        end
    end

    private action DoCodeCompletion(TextBox box)
        if builder = undefined
            return now
        end

        CodeCompletionResult result = builder:RequestCodeCompletion()
        Iterator<CodeCompletionItem> iterator = result:GetIterator()
        if not iterator:HasNext()
            return now
        end

        PopupMenu menu
        

        Color firstColor
        firstColor = firstColor:White()
        Color secondColor = firstColor:CustomColor(250.0/255.0, 250.0/255.0, 250.0/255.0, 1)
        Color border = firstColor:CustomColor(156.0/255.0, 156.0/255.0, 156.0/255.0, 1)
        menu:SetBorderColor(border)
        menu:SetBorderThickness(2)
        // 15 is the integer constant value of the "ALL" border style in LayoutProperties
        menu:GetDefaultLayoutProperties():SetBorderStyle(15)
        
        boolean useFirstColor = true

        Array<MenuItem> other
        Array<MenuItem> locals
        Array<MenuItem> fields
        Array<MenuItem> actions
        repeat while iterator:HasNext()
            CodeCompletionItem code = iterator:Next()

            if code:displayText:StartsWith(result:filter)
                MenuItem item
                item:SetName(code:displayText)
                item:SetShortcut(code:rightDisplayText)

                if useFirstColor
                    item:SetBackgroundColor(firstColor)
                else
                    item:SetBackgroundColor(secondColor)
                end

                useFirstColor = not useFirstColor

                ExecuteCodeCompletionBehavior behave
                behave:SetTextBox(box)
                behave:SetCodeCompletionItem(code)
                behave:SetCodeCompletionResult(result)
                item:SetBehavior(behave)

                if code:GetType() = code:LOCAL_VARIABLE
                    locals:Add(item)
                elseif code:GetType() = code:PARAMETER
                    locals:Add(item)
                elseif code:GetType() = code:PRIVATE_FIELD_VARIABLE
                    fields:Add(item)
                elseif code:GetType() = code:PUBLIC_FIELD_VARIABLE
                    fields:Add(item)
                elseif code:GetType() = code:PRIVATE_ACTION
                    actions:Add(item)
                elseif code:GetType() = code:PUBLIC_ACTION
                    actions:Add(item)
                elseif code:GetType() = code:PRIVATE_SYSTEM_ACTION
                    actions:Add(item)
                elseif code:GetType() = code:PUBLIC_SYSTEM_ACTION
                    actions:Add(item)
                elseif code:GetType() = code:PUBLIC_BLUEPRINT_ACTION
                    actions:Add(item)
                elseif code:GetType() = code:CLASS
                    other:Add(item)
                elseif code:GetType() = code:PRIMITIVE
                    other:Add(item)
                elseif code:GetType() = code:CONTROL_STRUCTURE
                    other:Add(item)
                elseif code:GetType() = code:PACKAGE
                    other:Add(item)
                end
                //items:Add(item)
            end
        end

        MenuItemComparison compare
        AddToResult(other, menu, compare)
        AddToResult(locals, menu, compare)
        AddToResult(fields, menu, compare)
        AddToResult(actions, menu, compare)

        number x = box:GetCaretGlobalX()
        number y = box:GetCaretGlobalY()
        menu:OpenAt(x, y)
    end

    private action AddToResult(Array<MenuItem> items, PopupMenu menu, MenuItemComparison compare)
        items:Sort(compare)
        i = 0
        repeat while i < items:GetSize()
            menu:Add(items:Get(i))
            i = i + 1
        end
    end
end