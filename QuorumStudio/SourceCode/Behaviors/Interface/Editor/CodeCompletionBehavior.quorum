package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Interface.Controls.Tab
use Libraries.Development.Environment.Studio.Interface.EditorTab
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.Interface.BreakpointsTab
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Interface.Item
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Language.Compile.CodeCompletionRequest
use Libraries.Language.Compile.CodeCompletionResult
use Libraries.Containers.Iterator
use Libraries.Language.Compile.CodeCompletionItem
use Libraries.Interface.Controls.PopupMenu
use Libraries.Interface.Controls.MenuItem
use Libraries.Game.Graphics.Color
use Libraries.Containers.Array
use Libraries.Development.Environment.Studio.Interface.CodeCompletionMenu
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Game.InputSet
use Libraries.Interface.Events.KeyboardEvent

class CodeCompletionBehavior is QuorumStudioBehavior

    KeyboardEvent keys
    BuildManager builder = undefined
    CodeCompletionMenu menu

    action GetBuildManager returns BuildManager
        return builder
    end

    action SetBuildManager(BuildManager builder)
        me:builder = builder
    end

    action Run(BehaviorEvent event)
        QuorumStudio studio = GetMainApplication()
        Item item = event:GetItem()
        if item is CodeTextBox
            CodeTextBox box = cast(CodeTextBox, item)

            // If we're opening this due to inputting a colon or period, insert
            // it into the TextBox first.
            InputSet set = event:GetInputSet()
            if set not= undefined
                integer value = set:GetInputValue()
                if value = keys:PERIOD
                    box:Insert(".")
                elseif (value = keys:SEMICOLON and set:HasModifier(set:SHIFT)) or value = keys:COLON
                    box:Insert(":")
                end
            end

            DoCodeCompletion(box)
        end
    end

    private action DoCodeCompletion(CodeTextBox box)
        if builder = undefined
            return now
        end

        menu:SetTextBox(box)
        menu:Generate(builder)

        box:ShowCaret()
    end
end