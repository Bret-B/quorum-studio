package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Interface.Controls.Tab
use Libraries.Development.Environment.Studio.Interface.EditorTab
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.Interface.BreakpointsTab
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Interface.Item
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Language.Compile.CodeCompletionRequest
use Libraries.Language.Compile.CodeCompletionResult
use Libraries.Containers.Iterator
use Libraries.Language.Compile.CodeCompletionItem
use Libraries.Interface.Controls.PopupMenu
use Libraries.Interface.Controls.MenuItem
use Libraries.Game.Graphics.Color
use Libraries.Containers.Array
use Libraries.Development.Environment.Studio.Interface.CodeCompletionMenu
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Game.InputSet
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Interface.Controls.Blocks.CodeEditor
use Libraries.Interface.Selections.CodeEditorSelection
use Libraries.Interface.Controls.Blocks.BlockItem
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.Blocks.EditBox
use Libraries.Interface.Controls.Blocks.EditField
use Libraries.Interface.Controls.Blocks.EditRegion
use Libraries.Interface.Controls.Blocks.Block

class CodeCompletionBehavior is QuorumStudioBehavior

    KeyboardEvent keys
    BuildManager builder = undefined
    CodeCompletionMenu menu

    action GetBuildManager returns BuildManager
        return builder
    end

    action SetBuildManager(BuildManager builder)
        me:builder = builder
    end

    action Run(BehaviorEvent event)
        QuorumStudio studio = GetMainApplication()
        Item item = event:GetItem()
        if item is CodeTextBox
            CodeTextBox box = cast(CodeTextBox, item)

            // If we're opening this due to inputting a colon or period, insert
            // it into the TextBox first.
            InputSet set = event:GetInputSet()
            if set not= undefined
                integer value = set:GetInputValue()
                if value = keys:PERIOD
                    box:Insert(".")
                elseif (value = keys:SEMICOLON and set:HasModifier(set:SHIFT)) or value = keys:COLON
                    box:Insert(":")
                end
            end

            DoCodeCompletion(box)
        elseif item is CodeEditor
            CodeEditor box = cast(CodeEditor, item)

            CodeEditorSelection selection = box:GetSelection()
            BlockItem blockItem = selection:GetBlockItem()
            if blockItem = undefined //are we in a fast block?
                Block block = selection:GetBlock()
                if block = undefined
                    return now
                end

                //for now, this is just freeform blocks
                if block:IsFastEditable()
                    EditRegion region = block:GetStartingEditRegion()
                    //for future proofing, consider it possible a control could return undefined
                    if region = undefined
                        return now
                    end

                    blockItem = region
                end
            end
                
                
            // If we're opening this d ue to inputting a colon or period, insert
            // it into the TextBox first.
            InputSet set = event:GetInputSet()
            if set not= undefined
                integer value = set:GetInputValue()
                if value = keys:PERIOD
                    InsertIntoBlockItem(blockItem, ".")
                elseif (value = keys:SEMICOLON and set:HasModifier(set:SHIFT)) or value = keys:COLON
                    InsertIntoBlockItem(blockItem, ":")
                end
            end

            DoCodeCompletion(box, blockItem)
        end
    end

    private action InsertIntoBlockItem(BlockItem item, text in)
        if item is EditBox
            EditBox edit = cast(EditBox, item)
            edit:Insert(in)
        elseif item is EditField
            EditField edit = cast(EditField, item)
            edit:Insert(in)
        end
    end

    private action DoCodeCompletion(CodeEditor box, BlockItem item)
        if builder = undefined
            return now
        end

        menu:SetCodeEditor(box)
        menu:Generate(builder)

        if item is EditRegion
            EditRegion region = cast(EditRegion, item)
            region:ShowCaret()
        end
        
    end

    private action DoCodeCompletion(CodeTextBox box)
        if builder = undefined
            return now
        end

        menu:SetTextBox(box)
        menu:Generate(builder)

        box:ShowCaret()
    end
end