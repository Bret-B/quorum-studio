package Libraries.Development.Environment.Studio.Behaviors
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Language.Compile.Hints.Hint
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Language.Compile.CodeCompletionItem
use Libraries.Interface.Controls.TextBox
use Libraries.Language.Compile.CodeCompletionResult
use Libraries.Development.Environment.Studio.Interface.CodeCompletionMenu
use Libraries.Development.Environment.Studio.Build.BuildManager

class ExecuteCodeCompletionBehavior is Behavior

    on create
        SetRunOnUpdate(true)
    end

    CodeCompletionItem completion = undefined
    TextBox box = undefined
    CodeCompletionResult result = undefined
    CodeCompletionMenu menu = undefined

    action GetTextBox returns TextBox
        return box
    end

    action SetTextBox(TextBox box)
        me:box = box
    end

    action GetCodeCompletionResult returns CodeCompletionResult
        return result
    end

    action SetCodeCompletionResult(CodeCompletionResult result)
        me:result = result
    end

    action SetCodeCompletionItem(CodeCompletionItem completion)
        me:completion = completion
    end

    action GetCodeCompletionItem returns CodeCompletionItem
        return completion
    end

    action Run(BehaviorEvent event)
        if completion not= undefined and box not= undefined and result not= undefined
            and completion:completionText not= undefined
            text value = completion:completionText
            text filter = result:filter
            integer size = 0
            if filter not= undefined
                size = filter:GetSize()
            end
            if value not= undefined and value:GetSize() > size
                value = value:GetSubtext(size)
            elseif (value not= undefined and value:GetSize() = size)
                or (value not= undefined and (value + "(") = filter)
                value = "" //the user already typed it, so just add parens if blank
            end
            integer position = box:GetCaretPosition()

            if completion:isActionWithoutParameters
                value = value + "()"
            end
            box:Insert(position, value)

            //add another dot and popup code completion again.
            if result:IsUsage()
                if completion:GetType() = completion:PACKAGE and
                   value not= "all"
                    if box is CodeTextBox
                        box:Insert(box:GetCaretPosition(), ".")
                        DoCodeCompletion(cast(CodeTextBox, box))
                    end
                end
            end
        end
    end

    private action DoCodeCompletion(CodeTextBox box)
        BuildManager builder = menu:GetBuilder()

        menu:SetTextBox(box)
        menu:Generate(builder)

        box:ShowCaret()
    end

    action GetMenu returns CodeCompletionMenu
        return menu
    end

    action SetMenu(CodeCompletionMenu menu)
        me:menu = menu
    end

end