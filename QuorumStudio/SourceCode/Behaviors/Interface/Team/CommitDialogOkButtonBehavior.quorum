package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.StudioFocusManager
use Libraries.Development.Environment.Projects.Project
use Libraries.Development.Environment.Configuration.Options
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.System.File
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Development.Environment.Studio.Interface.OutputTab
use Libraries.Development.Versioning.Git
use Libraries.Development.Versioning.Repository
use Libraries.Development.Environment.Projects.Credentials
use Libraries.Development.Versioning.CommitRequest
use Libraries.Development.Versioning.CommitResult
use Libraries.Development.Environment.Studio.Interface.CommitDialog
use Libraries.Concurrency.ThreadRunner

class CommitDialogOkButtonBehavior is QuorumStudioBehavior
    CommitDialog dialog = undefined

    action Run(BehaviorEvent event)
        ThreadedBehavior behave = dialog:GetThreadedCommitRequestBehavior()
        ThreadRunner runner = dialog:GetGitRunner()
        CommitRequestBehavior commit = dialog:GetCommitRequestBehavior()
        commit:SetMessage(dialog:GetMessage())
        runner:Add(behave)
        dialog:Hide()
    end

    action GetDialog returns CommitDialog
        return dialog
    end

    action SetDialog(CommitDialog dialog)
        me:dialog = dialog
    end

end