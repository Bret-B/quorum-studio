package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.StudioFocusManager
use Libraries.Development.Environment.Projects.Project
use Libraries.Development.Environment.Configuration.Options
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.System.File
use Libraries.Development.Environment.Studio.OutputEditorTabPane
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Development.Environment.Studio.Interface.OutputTab
use Libraries.Development.Versioning.Git
use Libraries.Development.Versioning.Repository
use Libraries.Development.Environment.Projects.Credentials
use Libraries.Development.Versioning.CommitRequest
use Libraries.Development.Versioning.CommitResult
use Libraries.Development.Environment.Studio.Interface.CommitDialog
use Libraries.Containers.Iterator
use Libraries.Interface.Controls.Tab
use Libraries.Development.Environment.Studio.Interface.EditorTab
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Development.Versioning.CloneRequest
use Libraries.Development.Versioning.CloneResult
use Libraries.Development.Versioning.VersionProgressMonitor
use Libraries.Containers.Array

class CloneRequestBehavior is QuorumStudioBehavior, VersionProgressMonitor
    text remoteRepositoryLocation = ""
    text saveLocation = ""
    text username = ""
    text password = ""

    action Run(BehaviorEvent event)
        CloneRequest request
        request:SetUsername(GetUsername())
        request:SetPassword(GetPassword())
        request:SetRemoteRepositoryLocation(GetRemoteRepositoryLocation())
        request:SetSaveLocation(GetSaveLocation())
        request:SetProgressMonitor(me)

        Git git
        output "Contacting server at: " + GetRemoteRepositoryLocation() + " ... "
        output "Cloning can take time. Please wait."
        CloneResult result = git:Clone(request)
        output "Clone completed."
    end

    action Start(integer i) 
        output "Start " + i
    end

    action BeginTask(text value, integer i) 
        output "StartTask " + value + ", " + i
    end

    action Update(integer i)
        output "Update " + i
    end

    action EndTask
        output "End Task"
    end

    action IsCancelled returns boolean
        return false
    end

    action GetRemoteRepositoryLocation returns text
        return remoteRepositoryLocation
    end

    action SetRemoteRepositoryLocation(text remoteRepositoryLocation)
        me:remoteRepositoryLocation = remoteRepositoryLocation
    end

    action GetSaveLocation returns text
        return saveLocation
    end

    action SetSaveLocation(text saveLocation)
        me:saveLocation = saveLocation
    end

    action GetUsername returns text
        return username
    end

    action SetUsername(text username)
        me:username = username
    end

    action GetPassword returns text
        return password
    end

    action SetPassword(text password)
        me:password = password
    end
end