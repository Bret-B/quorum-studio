package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Containers.Array
use Libraries.Interface.Controls.Tree
use Libraries.Interface.Controls.TreeItem
use Libraries.Containers.Iterator

class TreeSelectLast is Behavior
    action Run(BehaviorEvent event)
        if event:GetItem() is Tree
            Tree tree = cast(Tree, event:GetItem())
            Iterator<TreeItem> iter = tree:GetTreeItems()
            if iter:HasNext()
                boolean isLast = false
                Array<TreeItem> path
                //iterate through the treeItems and find the last item 
                repeat while not isLast
                    repeat while iter:HasNext()
                        iter:Next()
                    end
                    path:Add(iter:GetCurrent())
                    if iter:GetCurrent():IsOpen()
                        iter = iter:GetCurrent():GetTreeItems()
                    else
                        isLast = true
                    end
                end
                tree:Select(path)
            end
        end
    end
end