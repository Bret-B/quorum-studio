package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Behaviors.Behavior
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Interface.Controls.Tab
use Libraries.Interface.Item2D
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Controls.Dialog

class GoToLineOkButtonBehavior is Behavior
    text lineIn = "0"
    Dialog dialog = undefined

    action SetDialog(Dialog dialog)
        me:dialog = dialog
    end

    action GetDialog returns Dialog
        return dialog
    end

    action GetLine returns text
        return lineIn
    end

    action SetLine(text line)
        me:lineIn = line
    end

    action Run(BehaviorEvent event)
        integer line = 0
        GameStateManager manager
        Game game = manager:GetGame()
        QuorumStudio studio = cast(QuorumStudio, game)
        CodeEditorTabPane editors = studio:GetTabPane()
        TabPaneSelection value = editors:GetSelection()
        Tab tab = value:GetTab()
        Item2D related = tab:GetRelatedItem()
        if related is TextBox
            TextBox box = cast(TextBox, related)

            check
                line = lineIn:ParseInteger()
                line = line - 1
            detect e
                line = box:GetCaretLine()
            always

            if line < 0
                line = 0
            end

            if line > box:GetLineCount()
                line = box:GetLineCount() - 1
            end

            if dialog not= undefined
                dialog:Hide()
            end

            box:SetCaretPositionToLine(line)
            box:GoToLine(line)
            box:Focus()
            end
        end
    end
end