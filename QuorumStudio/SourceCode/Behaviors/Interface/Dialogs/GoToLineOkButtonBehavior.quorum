package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Behaviors.Behavior
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Interface.Controls.Tab
use Libraries.Interface.Item2D
use Libraries.Development.Environment.Studio.Interface.CodeTextBox
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Controls.Blocks.CodeEditor

class GoToLineOkButtonBehavior is Behavior

    on create
        SetRunOnUpdate(true)
    end

    text lineIn = "0"
    Dialog dialog = undefined

    action SetDialog(Dialog dialog)
        me:dialog = dialog
    end

    action GetDialog returns Dialog
        return dialog
    end

    action GetLine returns text
        return lineIn
    end

    action SetLine(text line)
        me:lineIn = line
    end

    action Run(BehaviorEvent event)
        integer line = 0
        GameStateManager manager
        Game game = manager:GetGame()
        QuorumStudio studio = cast(QuorumStudio, game)
        CodeEditorTabPane editors = studio:GetTabPane()
        Item2D related = editors:GetCurrentItem()
        if related not= undefined
            check
                line = lineIn:ParseInteger()
                line = line - 1
            detect e
                if dialog not= undefined
                    dialog:Hide()
                end
                return now
            always

                if line < 0
                    line = 0
                end
    
                if dialog not= undefined
                    dialog:Hide()
                end
    
                if related is TextBox
                    TextBox box = cast(TextBox, related)

                    if line > box:GetLineCount()
                        line = box:GetLineCount() - 1
                    end
        
                    box:SetCaretPositionToLine(line)
                    box:GoToLine(line)
                    box:Focus()
                elseif related is CodeEditor
                    CodeEditor editor = cast(CodeEditor, related)
                    if line > editor:GetLineCount()
                        line = editor:GetLineCount() - 1
                    end

                    editor:GoToLine(line)
                end
            end
        end
    end

end