package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.DragAndDropEvent
use Libraries.Interface.Item2D
use Libraries.Game.Graphics.Drawable
use Libraries.Compute.Vector3
use Libraries.Game.Layer2D
use Libraries.Interface.Controls.Scenes.Blueprints.ItemBlueprint
use Libraries.Interface.Controls.Scenes.Blueprints.DrawableBlueprint
use Libraries.Interface.Controls.Scenes.Items.Previews.ItemPreview2D
use Libraries.Interface.Controls.Scenes.ScenePaletteItem
use Libraries.Interface.Controls.Scenes.ScenePalette

class PaletteItemStartDragBehavior is QuorumStudioBehavior

    action Run(BehaviorEvent event)
        DragAndDropEvent dragEvent = event:GetDragAndDropEvent()

        Item2D item = undefined
        if dragEvent:GetSource() is Item2D
            item = cast(Item2D, dragEvent:GetSource())
            repeat until item = undefined or item is ScenePaletteItem
                item = item:GetParent()
            end
        end

        if item = undefined
            return now
        end
        
        ScenePaletteItem paletteItem = cast(ScenePaletteItem, item)
        ScenePalette palette = paletteItem:GetPalette()
        ItemBlueprint schematic = paletteItem:GetItemBlueprint()
        if schematic is DrawableBlueprint
            ItemPreview2D preview
            preview:Load(palette:GetSceneEditor(), cast(DrawableBlueprint, schematic))
            Drawable drawable = preview:ConvertToDrawable()

            Layer2D layer = item:GetLayer()
            Vector3 worldCoordinates = layer:GetCamera():ScreenToWorldCoordinates(dragEvent:GetX() - layer:GetViewportX(), dragEvent:GetY() - layer:GetViewportY())

            drawable:SetPosition(worldCoordinates:GetX() - drawable:GetWidth() / 2, worldCoordinates:GetY() - drawable:GetHeight() / 2)
            palette:SetDraggedItem(drawable)
        else
            // TO-DO
        end
    end

end