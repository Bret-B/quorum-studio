package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.DragAndDropEvent
use Libraries.Compute.Vector3
use Libraries.Development.Environment.Studio.Interface.VisualEditor.SceneEditor
use Libraries.Game.Layer
use Libraries.Interface.Item2D
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer
use Libraries.Interface.Controls.Scenes.Items.Highlights.SelectionHighlight
use Libraries.Interface.Controls.Scenes.Items.Highlights.SelectionHighlight2D
use Libraries.Interface.Controls.Scenes.Items.Highlights.SelectionHighlight3D

class SelectionHighlightDragBehavior is QuorumStudioBehavior

    action Run(BehaviorEvent event)
        DragAndDropEvent dragEvent = event:GetDragAndDropEvent()
        if dragEvent = undefined
            return now
        end

        SelectionHighlight highlight = undefined
        EditorLayer editorLayer = undefined

        if event:GetItem() is SelectionHighlight
            highlight = cast(SelectionHighlight, event:GetItem())
        elseif event:GetItem() not= undefined
            Layer layer = undefined
            if event:GetItem() is Item2D
                Item2D item2D = cast(Item2D, event:GetItem())
                layer = item2D:GetLayer()
            else
                // TO-DO
            end

            if layer is EditorLayer
                editorLayer = cast(EditorLayer, layer)
                SceneEditor controller = cast(SceneEditor, editorLayer:GetSceneEditor())
                highlight = controller:GetSelectionHighlight(event:GetItem())
            end
        end

        if highlight is SelectionHighlight2D
            SelectionHighlight2D highlight2D = cast(SelectionHighlight2D, highlight)
            
            number x1 = highlight:GetGlobalX()
            if editorLayer:IsGridCoordinate(x1) = false
                x1 = editorLayer:GetPreviousGridCoordinate(x1)
            end

            number y1 = highlight:GetGlobalY()
            if editorLayer:IsGridCoordinate(y1) = false
                y1 = editorLayer:GetPreviousGridCoordinate(y1)
            end

            number x2 = editorLayer:GetNextGridCoordinate(x1)
            number y2 = editorLayer:GetNextGridCoordinate(y1)
            
            Vector3 worldCoordinates = editorLayer:GetCamera():ScreenToWorldCoordinates(dragEvent:GetX() - editorLayer:GetViewportX(), dragEvent:GetY() - editorLayer:GetViewportY())
            boolean shouldMove = false
            number targetX = x1
            number targetY = y1
            
            if worldCoordinates:GetX() < x1
                shouldMove = true
                number newTarget = x1
                repeat while worldCoordinates:GetX() < newTarget
                    newTarget = editorLayer:GetPreviousGridCoordinate(newTarget)
                end
                targetX = newTarget
            elseif worldCoordinates:GetX() >= x2
                shouldMove = true
                number newTarget = x2
                repeat while worldCoordinates:GetX() >= newTarget
                    targetX = newTarget
                    newTarget = editorLayer:GetNextGridCoordinate(newTarget)
                end
            end

            if worldCoordinates:GetY() < y1
                shouldMove = true
                number newTarget = y1
                repeat while worldCoordinates:GetY() < newTarget
                    newTarget = editorLayer:GetPreviousGridCoordinate(newTarget)
                end
                targetY = newTarget
            elseif worldCoordinates:GetY() >= y2
                shouldMove = true
                number newTarget = y2
                repeat while worldCoordinates:GetY() >= newTarget
                    targetY = newTarget
                    newTarget = editorLayer:GetNextGridCoordinate(newTarget)
                end
            end

            if shouldMove
                highlight2D:SetPosition(targetX, targetY)
            end

        elseif event:GetItem() is SelectionHighlight3D
            // TO-DO
        end
    end

end