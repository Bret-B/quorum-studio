package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.Interface.VisualEditor.ScenePaletteItem
use Libraries.Development.Environment.Studio.Interface.VisualEditor.VisualSceneController
use Libraries.Development.Environment.Studio.Interface.VisualEditor.ItemBlueprint
use Libraries.Development.Environment.Studio.Interface.VisualEditor.CustomItemBlueprint
use Libraries.Interface.Controls.FileChooser
use Libraries.Development.Environment.Studio.Interface.VisualEditorTab
use Libraries.System.File

class PaletteCreatePreviewBehavior is QuorumStudioBehavior

    action Run(BehaviorEvent event)
        if event:GetItem() is ScenePaletteItem
            ScenePaletteItem item = cast(ScenePaletteItem, event:GetItem())
            VisualSceneController controller = item:GetSceneController()
            if controller = undefined
                return now
            end

            ItemBlueprint schematic = item:GetItemBlueprint()
            if schematic is CustomItemBlueprint
                FileChooser chooser
                VisualEditorTab tab = controller:GetVisualEditorTab()
                File project = tab:GetProjectLocation()
                File file = chooser:OpenFileDialog(project)

                CustomItemBlueprint custom = cast(CustomItemBlueprint, schematic)
                if custom:IsFileValid(file)
                    controller:CreateNewItemPreview(custom, file)
                end
            else
                controller:CreateNewItemPreview(item:GetItemBlueprint())
            end
        end 
    end

end