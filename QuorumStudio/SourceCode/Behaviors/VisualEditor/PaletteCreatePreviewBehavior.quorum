package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.Interface.VisualEditor.ScenePaletteItem
use Libraries.Development.Environment.Studio.Interface.VisualEditor.SceneEditor
use Libraries.Development.Environment.Studio.Interface.VisualEditor.CustomItemBlueprint
use Libraries.Interface.Controls.FileChooser
use Libraries.Development.Environment.Studio.Interface.VisualEditorTab
use Libraries.System.File
use Libraries.Interface.Controls.Scenes.Blueprints.ItemBlueprint

class PaletteCreatePreviewBehavior is QuorumStudioBehavior

    action Run(BehaviorEvent event)
        if event:GetItem() is ScenePaletteItem
            ScenePaletteItem item = cast(ScenePaletteItem, event:GetItem())
            SceneEditor controller = item:GetSceneController()
            if controller = undefined
                return now
            end

            ItemBlueprint schematic = item:GetItemBlueprint()
            if schematic is CustomItemBlueprint
                FileChooser chooser
                VisualEditorTab tab = controller:GetVisualEditorTab()
                File project = tab:GetProjectLocation()
                File file = chooser:OpenFileDialog(project)
                if file = undefined
                    return now
                end

                text relativePath = tab:GetProjectPathToFile(file)

                File result
                result:SetWorkingDirectory(project:GetAbsolutePath())
                result:SetPath(relativePath)

                CustomItemBlueprint custom = cast(CustomItemBlueprint, schematic)
                if custom:IsFileValid(result)
                    controller:CreateNewItemPreview(custom, result)
                end
            else
                controller:CreateNewItemPreview(item:GetItemBlueprint())
            end
        end 
    end

end