package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.Interface.VisualEditor.SceneEditor
use Libraries.Development.Environment.Studio.Interface.VisualEditor.PropertiesDialog
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer
use Libraries.Interface.Controls.Scenes.Items.EditorItem

class FocusCameraBehavior is QuorumStudioBehavior

    action Run(BehaviorEvent event)
        SceneEditor editor = undefined
        Object item = event:GetItem()
        if item is SceneEditor
            editor = cast(SceneEditor, item)
        elseif item is EditorItem
            EditorItem temp = cast(EditorItem, item)
            editor = cast(SceneEditor, temp:GetSceneEditor())
        elseif item is PropertiesDialog
            PropertiesDialog dialog = cast(PropertiesDialog, item)
            editor = dialog:GetSceneController()
        end

        if editor = undefined
            return now
        end

        EditorLayer layer = editor:GetSelectedLayer()
        if layer not= undefined
            editor:SelectEditorCamera(layer)
        end
    end

end