package Libraries.Development.Environment.Studio.Behaviors

use Libraries.Interface.Events.BehaviorEvent
use Libraries.Development.Environment.Studio.Interface.VisualEditor.InteractableItem
use Libraries.Development.Environment.Studio.Interface.VisualEditor.VisualSceneController
use Libraries.Development.Environment.Studio.Interface.VisualEditor.VisualEditorFindDialog

class OpenVisualEditorFindDialogBehavior is QuorumStudioBehavior
    action Run(BehaviorEvent event)
        VisualSceneController controller = undefined

        if event:GetItem() is VisualSceneController
            controller = cast(VisualSceneController, event:GetItem())
        elseif event:GetItem() is InteractableItem
            InteractableItem item = cast(InteractableItem, event:GetItem())
            controller = item:GetController()
        end

        if controller = undefined
            return now
        end

        VisualEditorFindDialog dialog = controller:GetFindDialog()
        if dialog:IsShowing() = false
            dialog:Show()
        end
        dialog:FocusField()
    end
end