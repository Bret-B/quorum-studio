package Libraries.Development.Environment.Projects
use Libraries.Interface.Controls.TreeItem
use Libraries.Containers.Array
use Libraries.System.File
use Libraries.Development.Environmen.Resources
use Libraries.Development.Environment.Studio.Behaviors.OpenTabBehavior
use Libraries.Development.Environment.Studio.CodeEditorTabPane
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Studio.QuorumStudio

class QuorumProjectView is ProjectView
    QuorumProject project = undefined
    Resources resources = undefined
    CodeEditorTabPane pane = undefined
    QuorumStudio studio = undefined

    constant text SOURCE_FOLDER_NAME = "Source Code"
    action SetMainApplication(QuorumStudio studio)
        me:studio = studio
    end

    action GetMainApplication returns QuorumStudio
        return studio
    end

    action GetProject returns Project
        return project
    end

    action SetProject(Project project)
        if project is QuorumProject
            me:project = cast(QuorumProject, project)
        end
    end

    action GetResources returns Resources
        return resources
    end

    action SetResources(Resources resources)
        me:resources = resources
    end

    action GetLogicalTree returns TreeItem
        if project = undefined
            return undefined
        end

        ProjectTreeItem projectItem
        Array<ProjectTreeItem> folders
        
        

        projectItem:SetProject(project)
        File sources = project:GetSourceLocation()
        ProjectTreeItem source = GetItem(sources)
        folders:Add(source)
//        Array<File> files = sources:GetDirectoryListing()
//        Array<ProjectTreeItem> items
//        i = 0
//        repeat while i < files:GetSize()
//            File file = files:Get(i)
//            if file:IsDirectory()
//                
//            else
//                ProjectTreeItem item
//                item:SetFile(file)
//                OpenTabBehavior behavior
//                behavior:SetMainApplication(studio)
//                behavior:SetFile(file)
//                item:SetDoubleClickBehavior(behavior)
//                item:Initialize(file:GetFileName(), resources:GetQuorumFile())
//                items:Add(item)
//            end
//            i = i + 1
//        end
//        source:Initialize(SOURCE_FOLDER_NAME, resources:GetFolder(), items)
        projectItem:Initialize(project:GetName(), resources:GetProjectLogo(), folders)
        
        return projectItem
    end

    private action GetItem(File source) returns ProjectTreeItem
        ProjectTreeItem value
        Array<File> files = source:GetDirectoryListing()
        Array<ProjectTreeItem> items
        i = 0
        repeat while i < files:GetSize()
            File file = files:Get(i)
            if file:IsDirectory()
                ProjectTreeItem directory = GetItem(file)
                items:Add(directory)
            else
                ProjectTreeItem item
                item:SetFile(file)
                OpenTabBehavior behavior
                behavior:SetMainApplication(studio)
                behavior:SetFile(file)
                item:SetBehavior(behavior)
                item:Initialize(file:GetFileName(), resources:GetQuorumFile())
                items:Add(item)
            end
            i = i + 1
        end
        if source:IsDirectory()
            value:Initialize(source:GetFileName(), resources:GetFolder(), items)
        else
            value:Initialize(source:GetFileName(), resources:GetQuorumFile(), items)
        end
        
        return value
    end
end