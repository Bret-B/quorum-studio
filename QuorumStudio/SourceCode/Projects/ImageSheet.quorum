package Libraries.Development.Environment.Projects.Quorum
use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.Language.Support.CompareResult
use Libraries.System.File

/*
    This class represents one image sheet on the system. It can parse itself 
    into a more easily consumed format and can save itself into the same 
    property format.
*/
class ImageSheet 
    /* This is the name of the image sheet. */
    text name = ""
    text buildPath = "resources"

    /* These are the values of the image sheet. Normally, these are individual 
        image files. */
    Array<text> values


    action GetBuildPath returns text
        return buildPath
    end

    action SetBuildPath(text path)
        buildPath = path
    end

    action GetImageSheetCreator returns File
        File file
        file:SetPath("External/ImageSheets.jar")
        return file
    end

    /* This action returns the name of the image sheet. */
    action GetName returns text
        return name
    end

    /* This action sets the name of the image sheet. */
    action SetName(text name)
        me:name = name
    end

    /* This action gets the individual values, normally images, in the image sheet. */
    action GetValues returns Iterator<text>
        return values:GetIterator()
    end

    /* This action sets the individual values, normally images, in the image sheet. */
    action SetValues(Array<text> val)
       Array<text> value = val:CopyToArray()
       values = value
    end

    action Compare(Object object) returns integer
        ImageSheet other = cast(ImageSheet, object)
        if GetName() > other:GetName()
            return 1
        elseif GetName() < other:GetName()
            return -1
        else
            return 0
        end
    end

    action Save(File file)
        NativeSave(file)
    end

    system action NativeSave(File file)
end