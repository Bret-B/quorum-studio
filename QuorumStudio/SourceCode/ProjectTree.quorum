package Libraries.Development.Environment.Projects
use Libraries.Interface.Controls.Tree
use Libraries.Interface.Selections.Selection
use Libraries.Interface.Events.SelectionListener
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Containers.Iterator
use Libraries.Interface.Selections.TreeSelection
use Libraries.Containers.Array
use Libraries.Interface.Controls.TreeItem
use Libraries.Development.Environmen.Resources

class ProjectTree is Tree, SelectionListener, ProjectListener
    ProjectManager manager = undefined
    Resources resources = undefined

    action GetResources returns Resources
        return resources
    end

    action SetResources(Resources resources)
        me:resources = resources
    end

    action SetProjectManager(ProjectManager manager)
        me:manager = manager
    end

    action GetProjectManager returns ProjectManager
        return manager
    end

    action SelectionChanged(Selection selection)
    end

     action OpenedProject(QuorumProject project)
        ProjectView view = project:GetProjectView()
        view:SetResources(resources)
        TreeItem item = view:GetLogicalTree()

        Add(item)
        Resize()
    end

    action ClosedProject(QuorumProject project)
        Iterator<TreeItem> iterator = GetTreeItems()
        repeat while iterator:HasNext() 
            TreeItem item = iterator:Next()
            ProjectTreeItem projectItem = cast(ProjectTreeItem, item)
            QuorumProject proj = projectItem:GetProject()
            if project:Equals(proj)
                Remove(item)
            end
        end
        Resize()
    end
end