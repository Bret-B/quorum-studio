package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Tab

use Libraries.Interface.Controls.Tab
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Interface.Layouts.Layout
use Libraries.Interface.Controls.Tree
use Libraries.Development.Environment.Resources
use Libraries.Development.Environment.Studio.Behaviors.Behaviors
use Libraries.Language.Debug.Debugger
use Libraries.Language.Debug.VariablesModel
use Libraries.Containers.Array
use Libraries.Language.Debug.Variable
use Libraries.Interface.Controls.TreeItem
use Libraries.Interface.Events.TreeChangeListener
use Libraries.Interface.Events.TreeChangeEvent
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Controls.Spreadsheet
use Libraries.Interface.Controls.Column
use Libraries.Interface.Controls.Cell
use Libraries.Language.Compile.CompilerError
use Libraries.Development.Environment.Studio.Behaviors.JumpToErrorBehavior
use Libraries.Game.InputTable
use Libraries.Game.InputSet
use Libraries.Interface.Events.KeyboardEvent

class ErrorTab is Tab
    BuildManager manager = undefined
    Resources resources = undefined
    Behaviors behaviors = undefined
    Debugger debugger = undefined
    BreakpointScrollPane pane
    Spreadsheet table
    boolean updateDebuggerInformation = false
    Column messageColumn
    Column lineColumn
    Column fileColumn
    Cell headerMessage
    Cell headerFile
    Cell headerLine

    action GetBehaviors returns Behaviors
        return behaviors
    end

    action SetBehaviors(Behaviors behaviors)
        me:behaviors = behaviors
        manager = behaviors:GetBuildManager()
        debugger = manager:GetDebugger()
        table:SetCellActivationBehavior(behaviors:GetJumpToErrorBehavior())
    end

    action GetResources returns Resources
        return resources
    end

    action SetResources(Resources resources)
        me:resources = resources
    end

    action GetBuildManager returns BuildManager
        return manager
    end

    action SetBuildManager(BuildManager build)
        me:manager = build
    end

    action Setup
        DisplayCloseButton(true)
        table:SetName("Errors")
        table:Add(messageColumn)

        LayoutProperties messageProperties = messageColumn:GetDefaultLayoutProperties()
        messageProperties:SetPixelWidth(0)
        messageProperties:SetPercentageWidth(0.6)
        
        LayoutProperties lineProperties = lineColumn:GetDefaultLayoutProperties()
        lineProperties:SetPixelWidth(0)
        lineProperties:SetPercentageWidth(0.1)

        LayoutProperties fileProperties = fileColumn:GetDefaultLayoutProperties()
        fileProperties:SetPixelWidth(0)
        fileProperties:SetPercentageWidth(0.30)

        headerMessage:SetText("Message")
        headerMessage:SetName("Message Header")
        headerLine:SetText("Line")
        headerLine:SetName("Line Header")
        headerFile:SetText("File")
        headerFile:SetName("File Header")
        
        messageColumn:SetName("Message Column")
        lineColumn:SetName("Line Column")
        fileColumn:SetName("File Column")

        messageColumn:Add(headerMessage)
        lineColumn:Add(headerLine)
        fileColumn:Add(headerFile)

        table:Add(lineColumn)
        table:Add(fileColumn)

        LayoutProperties properties = table:GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:FILL)

        pane:Add(table)
        pane:Resize()
        SetName("Errors")
        SetRelatedItem(GetPane())
        DisplayCloseButton(true)
        SetFocusTarget(table)

        KeyboardEvent keys
        InputTable inputTable = table:CopyAndActivateInputTable("CompilerErrorSpreadsheetInputTable")
        InputSet metaX
        metaX:SetKeyboardInput(keys:X)
        metaX:AddModifier(metaX:META)

        InputSet metaV
        metaV:SetKeyboardInput(keys:V)
        metaV:AddModifier(metaV:META)

        InputSet ctrlX
        ctrlX:SetKeyboardInput(keys:X)
        ctrlX:AddModifier(ctrlX:CONTROL)

        InputSet ctrlV
        ctrlV:SetKeyboardInput(keys:V)
        ctrlV:AddModifier(ctrlV:CONTROL)

        inputTable:RemoveKey(metaX)
        inputTable:RemoveKey(metaV)
        inputTable:RemoveKey(ctrlX)
        inputTable:RemoveKey(ctrlV)
    end

    action Empty 
        messageColumn:Empty()
        lineColumn:Empty()
        fileColumn:Empty()

        messageColumn:Add(headerMessage)
        lineColumn:Add(headerLine)
        fileColumn:Add(headerFile)
    end

    action AddError(CompilerError error)
        Cell m
        Cell l
        StateCell f
        
        m:SetName(error:GetErrorMessage())
        m:SetText(error:GetErrorMessage())
        l:SetName("" + error:GetLineNumber())
        l:SetText("" + error:GetLineNumber())
        if error:GetFile() not= undefined
            f:SetName("" + error:GetFile():GetFileName() + ": " + error:GetFile():GetAbsolutePath())
            f:SetText("" + error:GetFile():GetFileName() + ": " + error:GetFile():GetAbsolutePath())
            f:SetObject(error:GetFile())
        end

        messageColumn:Add(m)
        lineColumn:Add(l)
        fileColumn:Add(cast(Cell, f))
    end

    action GetPane returns BreakpointScrollPane
        return pane
    end

end
