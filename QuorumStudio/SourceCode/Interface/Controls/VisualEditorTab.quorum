package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Tab
use Libraries.System.File
use Libraries.Containers.Array
use Libraries.Game.Graphics.Model
use Libraries.Game.Layer3D
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Game.Scenes.Scene
use Libraries.Game.Graphics.AmbientLight
use Libraries.Game.Graphics.DirectionalLight
use Libraries.Game.Graphics.PointLight
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Game.Graphics.Skybox
use Libraries.System.Properties
use Libraries.Game.Scenes.DefaultSceneManager
use Libraries.Game.Layer
use Libraries.Game.Scenes.SceneProperties
use Libraries.Game.Layer2D
use Libraries.Interface.Item3D
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Game.Graphics.Camera
use Libraries.Containers.Number32BitArray
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer
use Libraries.Interface.Controls.Scenes.SceneConstants
use Libraries.Interface.Controls.Scenes.Items.EditorModel
use Libraries.Interface.Controls.Scenes.Items.Previews.CameraPreview2D
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer2D
use Libraries.Interface.Controls.Scenes.Layers.EditorLayer3D
use Libraries.Interface.Controls.Scenes.Items.EditorPointLight
use Libraries.Interface.Controls.Scenes.Items.EditorAudio3D
use Libraries.Interface.Controls.Scenes.SceneTree
use Libraries.Interface.Controls.Scenes.ScenePalette
use Libraries.Interface.Controls.Scenes.SceneEditor

class VisualEditorTab is Tab

    File file = undefined
    File projectLocation = undefined
    SceneEditor editor = undefined
    GameStateManager manager

    action GetFile returns File
        return file
    end

    action SetFile(File file)
        me:file = file
    end

    action GetProjectLocation returns File
        return projectLocation
    end

    action SetProjectLocation(File file)
        me:projectLocation = file
    end

    action Load
        SceneEditor controller
        me:editor = controller
        editor:SetFile(file)
        editor:SetProjectLocation(projectLocation)
        editor:SetName(file:GetPath())

        SetRelatedItem(editor)
        SetFocusTarget(editor)

        editor:Load()
    end

    action Save
        editor:Save()
    end

    action OnToggleOn
        parent:Tab:OnToggleOn()
        editor:ShowLayers()

        QuorumStudio studio = cast(QuorumStudio, manager:GetGame())
        SceneTree tree = studio:GetSceneTree()
        tree:SetSceneEditor(editor)
        ScenePalette palette = studio:GetScenePalette()
        palette:SetSceneEditor(editor)
    end

    action OnToggleOff
        editor:HideLayers()
        parent:Tab:OnToggleOff()

        QuorumStudio studio = cast(QuorumStudio, manager:GetGame())
        SceneTree tree = studio:GetSceneTree()
        tree:SetSceneEditor(undefined)
        ScenePalette palette = studio:GetScenePalette()
        palette:SetSceneEditor(undefined)
    end

    action OnClose
        editor:HideLayers()
        // Do extra work to dispose of models, etc. here
    end

    action GetSceneEditor returns SceneEditor
        Item2D value = GetRelatedItem()
        if value is SceneEditor
            return cast(SceneEditor, value)
        else
            return undefined
        end
    end
end
