package Libraries.Development.Environment.Studio

use Libraries.Interface.Layouts.Layout
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Views.ImageControlView
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Controls.Button
use Libraries.Interface.Views.LabelBoxView
use Libraries.Development.Environment.Resources
use Libraries.Game.Graphics.Gradient
use Libraries.Game.Graphics.Color
use Libraries.Development.Environment.Studio.Behaviors.Behaviors
use Libraries.Game.Graphics.Texture
use Libraries.Interface.Item2D
use Libraries.Interface.Events.FocusEvent
use Libraries.Containers.Array
use Libraries.Interface.Layouts.ToolbarLayout
use Libraries.Interface.Controls.Control
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Controls.ToolBar
use Libraries.Game.Graphics.Font
use Libraries.Game.Graphics.Glyph
use Libraries.Game.Graphics.TextureRegion
use Libraries.Game.Graphics.Drawable
use Libraries.System.File
use Libraries.Development.Environment.Studio.Interface.KeyMap
use Libraries.Containers.HashTable

class Toolbar is ToolBar
    Layout layout = undefined
    Resources resources = undefined
    //Gradient gradient
    Color color
    number height = 0
    Behaviors behaviors = undefined
    KeyMap keymap = undefined
    Array<Button> buttons
    HashTable<text, Button> buttonMap
    Font fontAwesome
    

    on create
        SetFocusable(true)
        File file
        file:SetPath("Resources/Fonts/Font Awesome 6 Free-Solid-900.otf")
        fontAwesome:LoadFont(file)
    end

    action GainedFocus(FocusEvent event)
        if buttons:GetSize() > 0
            Button first = buttons:Get(0)
            first:Focus()
        end
    end

    action SetBehaviors(Behaviors behaviors)
        me:behaviors = behaviors
    end

    action GetBehaviors returns Behaviors
        return behaviors
    end

    action GetResources returns Resources
        return resources
    end

    action SetResources(Resources resources)
        me:resources = resources
        me:keymap = resources:GetKeyMap()
    end

    action GetPreviousFocus returns Item
        return parent:Item:GetPreviousFocus()
    end

    action GetNextFocus returns Item
        return parent:Item:GetNextFocus()
    end

    action Setup
        SetPixelHeight(34)
        AddButtonToToolbar(61525, behaviors:GetOpenNewProjectBehavior(), "New Project", keymap:GetNewProjectKey():GetDisplayName())
        AddButtonToToolbar(61788, behaviors:GetOpenNewFileBehavior(), "New File", keymap:GetNewFileKey():GetDisplayName())
        AddButtonToToolbar(61564, behaviors:GetOpenProjectBehavior(), "Open Project", keymap:GetOpenProjectKey():GetDisplayName())
        AddButtonToToolbar(61639, behaviors:GetSaveAllBehavior(), "Save All", keymap:GetSaveAllKey():GetDisplayName())
        AddButtonToToolbar(62186, behaviors:GetUndoBehavior(), "Undo", keymap:GetUndoKey():GetDisplayName())
        AddButtonToToolbar(62201, behaviors:GetRedoBehavior(), "Redo", keymap:GetRedoKey():GetDisplayName())
        AddButtonToToolbar(61459, behaviors:GetThreadedBuildProjectBehavior(), "Build", keymap:GetBuildKey():GetDisplayName())
        AddButtonToToolbar(63262, behaviors:GetThreadedCleanBuildProjectBehavior(), "Clean and Build", keymap:GetCleanBuildKey():GetDisplayName())
        AddButtonToToolbar(61764, behaviors:GetThreadedRunProjectBehavior(), "Run", keymap:GetRunKey():GetDisplayName())
        AddButtonToToolbar(61832, behaviors:GetThreadedDebugProjectBehavior(), "Debug", keymap:GetDebugKey():GetDisplayName())
        AddButtonToToolbar(61517, behaviors:GetThreadedStopBehavior(), "Stop", keymap:GetStopKey():GetDisplayName())
        AddButtonToToolbar(62091, behaviors:GetThreadedPauseBehavior(), "Pause", keymap:GetPauseKey():GetDisplayName())
        AddButtonToToolbar(61518, behaviors:GetThreadedContinueBehavior(), "Continue", keymap:GetContinueKey():GetDisplayName())
        AddButtonToToolbar(61609, behaviors:GetThreadedStepOverBehavior(), "Step Over", keymap:GetStepOverKey():GetDisplayName())
        AddButtonToToolbar(61611, behaviors:GetThreadedStepIntoBehavior(), "Step Into", keymap:GetStepIntoKey():GetDisplayName())
        AddButtonToToolbar(61610, behaviors:GetThreadedStepOutBehavior(), "Step Out", keymap:GetStepOutKey():GetDisplayName())
        SetupButtonFocus()
    end

    action SetupButtonFocus
        i = 0
        repeat while i < buttons:GetSize()
            Button button = buttons:Get(i)
            if i + 1 < buttons:GetSize()
                Button next = buttons:Get(i+1)
                button:SetNextFocus(next)
                next:SetPreviousFocus(button)
            end
            i = i + 1
        end

        Button first = buttons:Get(0)
        Button last = buttons:Get(buttons:GetSize() - 1)
        first:SetPreviousFocus(last)
        last:SetNextFocus(first)

        SetNextFocus(first)
        SetPreviousFocus(last)
    end

    private action AddButtonToToolbar(integer unicode, Behavior behavior, text name, text description)
        Button button
        button:SetFont(fontAwesome)
        button:SetFontSize(30)
        text value = ""
        value = value:GetUnicodeValue(unicode)
        
        //button:SetIcon(image)
        button:SetBorderThickness(0)
        button:SetTopPadding(3)
        button:SetBottomPadding(3)
        button:SetLeftPadding(5)
        button:SetName(name)
        button:SetLabelText(value)
        button:SetDescription(description)

        if behavior not= undefined
            button:SetBehavior(behavior)
        end
        Add(button)
        buttons:Add(button)

        buttonMap:Add(name, button)
    end

    private action AddButtonToToolbar(Icon image, Behavior behavior, text name, text description)
        Button button
        button:SetFont(undefined)
        
        button:SetIcon(image)
        button:SetTopPadding(3)
        button:SetBottomPadding(3)
        button:SetLeftPadding(5)
        button:SetName(name)
        button:SetDescription(description)

        if behavior not= undefined
            button:SetBehavior(behavior)
        end
        Add(button)
        buttons:Add(button)

        buttonMap:Add(name, button)
    end

    action GetButton(text name) returns Button
        if buttonMap:HasKey(name)
            return buttonMap:GetValue(name)
        else
            return undefined
        end
    end
end
