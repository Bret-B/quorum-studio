package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Tab
use Libraries.Interface.Controls.Tree
use Libraries.Game.Graphics.Color
use Libraries.Development.Environment.Resources
use Libraries.Development.Environment.Studio.Behaviors.Behaviors
use Libraries.Development.Environment.Studio.Build.BuildManager
use Libraries.Language.Debug.Debugger
use Libraries.Interface.Controls.TreeItem
use Libraries.Interface.Layouts.Layout
use Libraries.Language.Debug.BreakpointListener
use Libraries.Language.Debug.BreakpointEvent
use Libraries.Language.Debug.Breakpoint
use Libraries.System.File
use Libraries.Containers.Iterator
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Interface.Controls.TreeTable
use Libraries.Language.Debug.BreakpointFileColumn
use Libraries.Interface.Controls.TreeTableColumn
use Libraries.Language.Debug.BreakpointRow
use Libraries.Language.Debug.BreakpointLineColumn
use Libraries.Containers.HashTable
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Development.Environment.Studio.Behaviors.DeleteBreakpointBehavior
use Libraries.Game.InputTable
use Libraries.Game.InputSet
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Interface.Events.FocusEvent
use Libraries.Interface.Selections.TreeTableSelection
use Libraries.Interface.Controls.TreeTableCell

class BreakpointsTab is Tab, BreakpointListener
    BreakpointScrollPane pane
    Resources resources = undefined
    Behaviors behaviors = undefined
    BuildManager manager = undefined
    Debugger debugger = undefined
    TreeTable breakpointTree
    BreakpointFileColumn fileColumn
    BreakpointLineColumn lineColumn
    HashTable<text, BreakpointRow> rows
    DeleteBreakpointBehavior deleteBehavior

    on create
        fileColumn:SetPixelWidth(0)
        fileColumn:SetPercentageWidth(0.85)

        lineColumn:SetPixelWidth(0)
        lineColumn:SetPercentageWidth(0.15)
        breakpointTree:Add(cast(TreeTableColumn, fileColumn))
        breakpointTree:Add(cast(TreeTableColumn, lineColumn))
        BreakpointRow row
        row:SetFile("File")
        row:SetLine("Line")
        breakpointTree:Add(row)
    end

    action GainedFocus(FocusEvent event)
        TreeTableSelection selection = breakpointTree:GetSelection()
        if selection:IsEmpty() and breakpointTree:GetColumnsSize() > 0 
            and breakpointTree:GetRows() not= undefined and breakpointTree:GetRows():GetSize() > 0
        
            TreeTableCell cell = breakpointTree:GetCell(0,0)
            breakpointTree:Select(cell)
            cell:Focus()
        end
    end

    action GetBehaviors returns Behaviors
        return behaviors
    end

    action SetBehaviors(Behaviors behaviors)
        me:behaviors = behaviors
        manager = behaviors:GetBuildManager()
        debugger = manager:GetDebugger()

        deleteBehavior:SetBuildManager(manager)
        manager:Add(me)
    end

    action GetResources returns Resources
        return resources
    end

    action SetResources(Resources resources)
        me:resources = resources
    end

    action GetPane returns BreakpointScrollPane
        return pane
    end

    private action Rehash(text path)
        //this key doesn't exist, so do nothing.
        if rows:HasKey(path) 
            //if it has this path, go find that and kill it, if you have to.
            BreakpointRow parentRow = rows:GetValue(path)
            //rows:RemoveAllKeys(path)
            breakpointTree:Remove(parentRow)
            rows:RemoveKey(path)
        else 
            return now
        end

        //we killed the value, because we had to, so now make a new one and reset this thing.
        BreakpointRow rowFile
        rowFile:SetFile(path)
        rows:Add(path, rowFile)

        Iterator<Breakpoint> iterator = manager:GetBreakpointIterator(path)
        repeat while iterator not= undefined and iterator:HasNext()
            Breakpoint bp = iterator:Next()
            BreakpointRow row
            row:SetBreakpoint(bp)

            
            rows:Add(path + bp:GetLine() , row)
            breakpointTree:Add(rowFile)
            rowFile:AddRow(row)
        end
    end

    action ToggledBreakpoint(BreakpointEvent event)
        if event:IsRehashEvent()
            Rehash(event:GetPath())
            return now
        end
        Breakpoint point = event:GetBreakpoint()
        File file = point:GetFile()
        integer line = point:GetLine()
        
        if event:IsAdded()
            BreakpointRow row
            row:SetBreakpoint(point)
            
            if rows:HasKey(file:GetAbsolutePath()) 
                //if it has this path, go find that and add this
                BreakpointRow rowFile = rows:GetValue(file:GetAbsolutePath())
                if rowFile not= undefined
                    rowFile:AddRow(row)
                    rows:Add(file:GetPath()+line, row)
                end
            else
                BreakpointRow rowFile
                rowFile:SetFile(file:GetAbsolutePath())
                rows:Add(file:GetAbsolutePath(), rowFile)
                rows:Add(file:GetPath()+line, row)
                breakpointTree:Add(rowFile)
                rowFile:AddRow(row)
            end
            
            breakpointTree:Resize()
        else
            if rows:HasKey(file:GetPath() + line) 
                BreakpointRow parentRow = rows:GetValue(file:GetAbsolutePath())
                BreakpointRow childRow = rows:GetValue(file:GetPath() + line)
                if childRow not= undefined
                    boolean value = breakpointTree:Remove(childRow)
                    rows:RemoveKey(file:GetPath()+line)
                    //remove the file row if the file has no more breakpoints
                    if parentRow:IsEmpty()
                        breakpointTree:Remove(parentRow)
                        rows:RemoveKey(file:GetAbsolutePath())
                    end
                end
                breakpointTree:Resize()
            end
        end
    end

    action Setup
        LayoutProperties properties = breakpointTree:GetDefaultLayoutProperties()
        properties:SetHorizontalLayoutMode(properties:STANDARD)
        properties:SetPercentageWidth(1)
        pane:SetBackgroundColor(resources:GetBackgroundColor())
        pane:Add(breakpointTree)
        pane:Resize()

        SetName("Breakpoints")
        SetRelatedItem(GetPane())
        DisplayCloseButton(true)
 
        InputTable inputTable = breakpointTree:CopyAndActivateInputTable("QuorumStudioBreakpointTreeTable")
        InputSet set
        KeyboardEvent keys
        set:SetKeyboardInput(keys:FORWARD_DELETE)
        inputTable:Add(set, deleteBehavior)

        InputSet set2
        set2:SetKeyboardInput(keys:BACKSPACE)
        inputTable:Add(set2, deleteBehavior)
        SetFocusTarget(breakpointTree)
    end
end