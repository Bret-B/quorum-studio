package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Tab
use Libraries.System.File
use Libraries.Interface.Events.TextChangeListener
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Events.TextChangeEvent
use Libraries.Game.GameStateManager

class EditorTab is Tab, TextChangeListener
    boolean dirty = false
    File file = undefined
    number timeSinceDirty = 0
    boolean parseDirty = false

    action GetFile returns File
        return file
    end

    action SetFile(File file)
        me:file = file
    end

    action Setup
        Item2D item = GetRelatedItem()
        if item not= undefined and item is TextBox
            TextBox box = cast(TextBox, item)
            box:AddTextChangeListener(me)
            number scale = GetInterfaceScale()
            box:SetInterfaceScale(scale)
        end
    end

    action TextChanged(TextChangeEvent event)
        dirty = true
        me:parseDirty = dirty
        timeSinceDirty = 0
    end

    action IsDirty returns boolean
        return dirty
    end

    action SetIsDirty(boolean dirty)
        me:dirty = dirty
        timeSinceDirty = 0
        me:parseDirty = dirty
    end

    action IsParseDirty returns boolean
        return parseDirty
    end

    action SetIsParseDirty(boolean dirty)
        me:parseDirty = dirty
    end

    action GetTimeSinceDirty returns number
        return timeSinceDirty
    end

    action Save
        if file not= undefined
            TextBox box = GetTextBox()
            text value = box:GetText()
            file:Write(value)
        end
    end

    action GetTextBox returns TextBox
        Item2D item = GetRelatedItem()
        if item not= undefined and item is TextBox
            TextBox box = cast(TextBox, item)
            return box
        end
        return undefined
    end
    
    action Focus
        GameStateManager manager
        manager:GetGame():SetFocus(GetTextBox())
    end

    action Update(number seconds)
        timeSinceDirty = timeSinceDirty + seconds
    end
end