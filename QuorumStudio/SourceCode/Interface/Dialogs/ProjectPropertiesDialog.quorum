package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Controls.TabPane
use Libraries.Interface.Controls.Tab
use Libraries.Interface.Controls.ScrollPane
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.ButtonGroup
use Libraries.Interface.Controls.List
use Libraries.Interface.Controls.Button
use Libraries.Interface.Controls.Checkbox
use Libraries.Interface.Controls.RadioButton
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Projects.ProjectProperty
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Game.Graphics.Gradient
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesOkBehavior
use Libraries.Development.Environment.Studio.Behaviors.DialogCancelBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesAddJarBehavior
use Libraries.Development.Environment.Studio.Behaviors.RemoveListItemBehavior
use Libraries.Development.Environment.Studio.Behaviors.EmptyListBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesAddJavaClassFolderBehavior
use Libraries.Interface.Events.MouseWheelListener
use Libraries.Interface.Events.MouseEvent
use Libraries.Development.Environment.Projects.Quorum.ImageSheets
use Libraries.System.File
use Libraries.Development.Environment.Projects.Quorum.ImageSheet
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesAddImagesBehavior
use Libraries.Containers.HashTable
use Libraries.Interface.Selections.ListSelection
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesImageSheetListBehavior
use Libraries.Interface.Controls.ListItem
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesAddImageSheetsBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesAddSourceBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesEditImageSheetsBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesRemoveImageSheetBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesRemoveImageBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesAddImageFolderBehavior
use Libraries.Development.Environment.Studio.Behaviors.ProjectPropertiesMobileResourcesBrowseBehavior
use Libraries.Development.Environment.Studio.Behaviors.EmptyTextFieldBehavior
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Game.GameStateManager
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Configuration.Options
use Libraries.Development.Environment.Projects.Credentials
use Libraries.Development.Environment.Studio.Mobile.AppleDevicesReader
use Libraries.Development.Environment.Studio.Mobile.AppleDevice
use Libraries.Interface.Views.ControlShaderView
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Forms.Page
use Libraries.Interface.Forms.Grouping
use Libraries.Interface.Forms.Banner
use Libraries.Interface.Layouts.ManualLayout
use Libraries.Interface.Pages.StackedRowPage

class ProjectPropertiesDialog is Dialog, MouseWheelListener

    boolean initialized = false

    // The current Quorum project that we're modifying the properties of.
    // Set during the SetProperties(QuorumProject) action.
    QuorumProject project = undefined
    File sourceLocation = undefined

    // Variables for the Project Information tab.
    TextField programLocationField = undefined
    TextField programNameField = undefined
    RadioButton standardProjectButton = undefined
    RadioButton legoProjectButton = undefined
    RadioButton webBrowserProjectButton = undefined

    List javaClassList = undefined
    List jarList = undefined
    List quorumSourcesList = undefined

    ProjectPropertiesAddJavaClassFolderBehavior addJavaClassBehavior
    RemoveListItemBehavior removeJavaClassBehavior
    EmptyListBehavior clearJavaClassesBehavior

    ProjectPropertiesAddJarBehavior addJarBehavior
    RemoveListItemBehavior removeJarBehavior
    EmptyListBehavior clearJarsBehavior

    ProjectPropertiesAddSourceBehavior addSourceBehavior
    RemoveListItemBehavior removeSourceBehavior
    EmptyListBehavior clearSourcesBehavior
    
    ProjectPropertiesAddImageSheetsBehavior addImageSheetsBehavior
    ProjectPropertiesEditImageSheetsBehavior editImageSheetsBehavior
    ProjectPropertiesRemoveImageSheetBehavior   removeImageSheetBehavior
    ProjectPropertiesImageSheetListBehavior imageSheetListBehavior

    ProjectPropertiesAddImagesBehavior addImagesBehavior
    ProjectPropertiesAddImageFolderBehavior addImageFolderBehavior
    ProjectPropertiesRemoveImageBehavior removeImageBehavior

    ProjectPropertiesMobileResourcesBrowseBehavior mobileResourcesBrowseBehavior
    ProjectPropertiesMobileResourcesBrowseBehavior iosResourcesBrowseBehavior
    EmptyTextFieldBehavior emptyTextFieldBehavior

    // Variables for the Games tab.
    Checkbox enableImageSheets
    Checkbox buildImageSheetsOnCompile
    TextField imageSheetsBuildPathField
    TextBox imagesTextBox
    List imageSheetsList
    List imagesList

    Array<List> imagesListArray         //stores each associated imageSheetName with the correct list of images to be displayed in the imagesList
    integer imageSheetCount = -1   

    // Variables for the Mobile tab.
    TextField androidResourcesField
    TextField androidLibraryField
    TextField keyStoreField
    TextField keyStorePasswordField
    TextField keyAliasField
    TextField keyPasswordField
    TextField jdkField
    TextField iosResourcesField = undefined
    TextField iosBundlingField = undefined
    TextField iosProvisioningField = undefined
    TextField iosSignatureField = undefined
    TabPane tabPane
    List availableDevicesList

    //variables for the Teams tab
    TextField usernameTeams
    TextField passwordTeams
    TextField nameTeams
    TextField emailTeams

    // Behaviors used by the OK and Cancel buttons.
    ProjectPropertiesOkBehavior okBehavior
    DialogCancelBehavior cancelBehavior
    Options options = undefined

    action OnShow
        tabPane:Focus()
        Tab tab = tabPane:GetSelectedTab()
        if not tab:Equals(tabPane:Get(0))
            tab:Activate()
        end
    end

    on create
        addJarBehavior:SetDialog(me)
        addJavaClassBehavior:SetDialog(me)
        addSourceBehavior:SetDialog(me)
        addImagesBehavior:SetDialog(me)
        addImageFolderBehavior:SetDialog(me)
        removeImageBehavior:SetDialog(me)
        addImageSheetsBehavior:SetDialog(me)
        editImageSheetsBehavior:SetDialog(me)
        removeImageSheetBehavior:SetDialog(me)
        imageSheetListBehavior:SetDialog(me)
        mobileResourcesBrowseBehavior:SetDialog(me)
        iosResourcesBrowseBehavior:SetDialog(me)
        iosResourcesBrowseBehavior:SetAndroid(false)
        okBehavior:SetDialog(me)
        cancelBehavior:SetDialog(me)
        SetBehavior(okBehavior)

        keyStorePasswordField:SetPassword(true)
        keyPasswordField:SetPassword(true)
        passwordTeams:SetPassword(true)

        GameStateManager manager
        QuorumStudio studio = cast(QuorumStudio, manager:GetGame())
        options = studio:GetOptions()
    end

    action Initialize
        if initialized
            output "WARNING: Re-initializing the ProjectPropertiesDialog."
        end

        initialized = true

        SetName("Properties")
        SetPercentageWidth(0.5)
        GetDefaultLayoutProperties():SetPercentageOriginY(1.0)
        SetPercentageY(0.875)

        LayoutProperties viewProperties = tabPane:GetViewAreaLayoutProperties()
        viewProperties:SetVerticalLayoutMode(viewProperties:FIT_CONTENTS)
        
        FlowLayout tabLayout
        tabPane:SetViewAreaLayout(tabLayout)
        tabPane:SetPercentageWidth(1.0)
        tabPane:SetVerticalLayoutMode(viewProperties:FIT_CONTENTS)

        tabPane:Add(CreateProjectInfoTab())
        tabPane:Add(CreateGamesTab())
        tabPane:Add(CreateAndroidTab())
        tabPane:Add(CreateiOSTab())
        tabPane:Add(CreateTeamsTab())
        Add(tabPane)

        androidResourcesField:Empty()
        androidLibraryField:Empty()
        keyStoreField:Empty()
        keyStorePasswordField:Empty()
        keyAliasField:Empty()
        keyPasswordField:Empty()
        jdkField:Empty()
    end

    action SetProperties(QuorumProject project)
        imageSheetCount = -1
        me:project = project
        sourceLocation = me:project:GetSourceLocation()

        SetName(project:GetName() + " Properties")

        programLocationField:SetText(project:GetLocation():GetAbsolutePath())
        text executableName = project:GetProperty(project:EXECUTABLE_NAME):GetFirstValue()

        if executableName not= undefined
            programNameField:SetText(executableName)
        end

        text projectType = project:GetProperty(project:PROJECT_TYPE):GetFirstValue()

        if projectType = undefined or projectType = project:JAVA_COMPILE_TYPE
            standardProjectButton:SetToggleState(true)
        elseif projectType = project:JAVASCRIPT_COMPILE_TYPE
            webBrowserProjectButton:SetToggleState(true)
        elseif projectType = project:LEGO_COMPILE_TYPE
            legoProjectButton:SetToggleState(true)
        end

        javaClassList:Empty()

        Iterator<text> javaClasses = project:GetJavaClassDependencies()
        repeat while javaClasses:HasNext()
            javaClassList:Add(javaClasses:Next())
        end

        jarList:Empty()

        ProjectProperty jarProperty = project:GetProperty(project:JAR_DEPENDENCIES)

        if jarProperty not= undefined
            Iterator<text> jarDependencies = jarProperty:GetValueIterator()

            repeat while jarDependencies:HasNext()
                jarList:Add(jarDependencies:Next())
            end
        end

        quorumSourcesList:Empty()

        ProjectProperty quorumDependenciesProperty = project:GetProperty(project:QUORUM_DEPENDENCIES)

        if quorumDependenciesProperty not= undefined
            Iterator<text> quorumDependencies = quorumDependenciesProperty:GetValueIterator()

            repeat while quorumDependencies:HasNext()
                quorumSourcesList:Add(quorumDependencies:Next())
            end
        end

        ProjectProperty enableImageSheetsProperty = project:GetProperty(project:IMAGE_SHEET_ENABLED)
        
        if enableImageSheetsProperty not= undefined and enableImageSheetsProperty:GetFirstValue() = "true"
            enableImageSheets:SetToggleState(true)
        else
            enableImageSheets:SetToggleState(false)
        end

        ProjectProperty buildImageSheetsProperty = project:GetProperty(project:IMAGE_SHEET_REBUILD_ON_COMPILE)

        if buildImageSheetsProperty not= undefined and buildImageSheetsProperty:GetFirstValue() = "true"
            buildImageSheetsOnCompile:SetToggleState(true)
        else
            buildImageSheetsOnCompile:SetToggleState(false)
        end

        ProjectProperty imageSheetsPathProperty = project:GetProperty(project:IMAGE_SHEET_BUILD_PATH)

        if imageSheetsPathProperty not= undefined
            imageSheetsBuildPathField:SetText(imageSheetsPathProperty:GetFirstValue())
        else
            imageSheetsBuildPathField:SetText("resources")
        end

        imageSheetsList:Empty()
        imagesList:Empty()
        imagesListArray:Empty()     
        
        ProjectProperty imageSheetsProperty = project:GetProperty(project:IMAGE_SHEETS)
        if imageSheetsProperty not= undefined
            
            ImageSheets sheets = project:GetImageSheets()
            Array<ImageSheet> imageSheets = sheets:GetSheets(true)
            Iterator<ImageSheet> sheetsIterator = imageSheets:GetIterator()
            output imageSheetCount
            repeat while sheetsIterator:HasNext()
                imageSheetCount = imageSheetCount + 1
                ImageSheet sheet = sheetsIterator:Next()
                imageSheetsList:Add(imageSheetCount, sheet:GetName())
                Iterator<text> sheetIterator = sheet:GetValues()
                List list
                repeat while sheetIterator:HasNext()
                    list:Add(sheetIterator:Next())
                end
                imagesListArray:Add(list)
            end
        end

        ProjectProperty androidResourcesProperty = project:GetProperty(project:ANDROID_ASSETS)
        ProjectProperty androidLibraryProperty = project:GetProperty(project:ANDROID_PATH)
        ProjectProperty androidKeyStoreProperty = project:GetProperty(project:ANDROID_KEYSTORE_PATH)
        ProjectProperty androidKeyStorePasswordProperty = project:GetProperty(project:ANDROID_KEYSTORE_PASSWORD)
        ProjectProperty androidKeyAliasProperty = project:GetProperty(project:ANDROID_KEY_ALIAS)
        ProjectProperty androidKeyPasswordProperty = project:GetProperty(project:ANDROID_KEY_PASSWORD)
        ProjectProperty androidJDKProperty = project:GetProperty(project:ANDROID_ALTERNATE_JDK_PATH)
        ProjectProperty iosVersion = project:GetProperty(project:IOS_VERSION)
        ProjectProperty iosDeviceProperty = project:GetProperty(project:IOS_DEVICE)
        ProjectProperty iosBundleProperty = project:GetProperty(project:IOS_BUNDLE)
        ProjectProperty iosProvisioningProperty = project:GetProperty(project:IOS_PROVISIONING)
        ProjectProperty iosSignatureProperty = project:GetProperty(project:IOS_SIGNATURE)
        ProjectProperty iosResourcesProperty = project:GetProperty(project:IOS_ASSETS)

        if androidResourcesProperty not= undefined
            androidResourcesField:SetText(androidResourcesProperty:GetFirstValue())
        else
            androidResourcesField:SetText("media")
        end

        if androidLibraryProperty not= undefined
            androidLibraryField:SetText(project:GetAndroidPath())
        else
            androidLibraryField:Empty()
        end
            androidLibraryField:HideCaret()
        
        if androidKeyStoreProperty not= undefined
            keyStoreField:SetText(project:GetAndroidKeystorePath())
        else
            keyStoreField:Empty()
        end
        keyStoreField:HideCaret()

        if androidKeyStorePasswordProperty not= undefined
            keyStorePasswordField:SetText(project:GetAndroidKeystorePassword())
        else
            keyStorePasswordField:Empty()
        end
        keyStorePasswordField:HideCaret()

        if androidKeyAliasProperty not= undefined
            keyAliasField:SetText(project:GetAndroidKeyAlias())
        else
            keyAliasField:Empty()
        end
        keyAliasField:HideCaret()

        if androidKeyPasswordProperty not= undefined
            keyPasswordField:SetText(project:GetAndroidKeyPassword())
        else
            keyPasswordField:Empty()
        end
        keyPasswordField:HideCaret()
        
        if androidJDKProperty not= undefined
            jdkField:SetText(project:GetAndroidAlternateJDKPath())
        else
            jdkField:Empty()
        end
        jdkField:HideCaret()

        if iosDeviceProperty not= undefined
            text value = iosDeviceProperty:GetFirstValue()
            boolean done = false
            i = 0
            repeat while i < availableDevicesList:GetSize() and not done
                text item = availableDevicesList:Get(i)
                if value = item
                    availableDevicesList:Select(i)
                    done = true
                end
                i = i + 1
            end
        end

        if iosBundleProperty not= undefined and iosBundlingField not= undefined
            text value = iosBundleProperty:GetFirstValue()
            iosBundlingField:SetText(value)
        end

        if iosProvisioningProperty not= undefined and iosProvisioningField not= undefined
            text value = iosProvisioningProperty:GetFirstValue()
            iosProvisioningField:SetText(value)
        end

        if iosSignatureProperty not= undefined and iosSignatureField not= undefined
            text value = iosSignatureProperty:GetFirstValue()
            iosSignatureField:SetText(value)
        end

        if iosResourcesProperty not= undefined
            iosResourcesField:SetText(iosResourcesProperty:GetFirstValue())
        else
            iosResourcesField:SetText("media")
        end

        if project:HasGitSupport() 
            Credentials credentials = options:GetPassword(project:GetLocation():GetAbsolutePath())
            if credentials not= undefined
                me:usernameTeams:SetText(credentials:GetUsername())
                me:passwordTeams:SetText(credentials:GetPassword())
                me:nameTeams:SetText(credentials:GetName())
                me:emailTeams:SetText(credentials:GetEmail())
            end
        end
    end
    
    /* Called by the ProjectPropertiesImageSheetListBehavior, when the image sheet 
    selection changes this action sets the correct images list, dependent on the 
    imageSheet selected in the imageSheets list*/
    action SetCurrentImageList(integer sheetIndex)
        imagesList:Empty()
        List list = imagesListArray:Get(sheetIndex)

        if list not= undefined
            integer i = 0
            repeat while i < list:GetSize()
                output list:Get(i)
                imagesList:Add(list:Get(i))
                i = i + 1
            end
        end

        imagesList:Select(0)
        imagesList:Activate()
    end

    /*returns the list of images associated with the given index */
    action GetCurrentImageList(integer index) returns List
        return imagesListArray:Get(index)
    end

    action GetCurrentImageSheet returns ListItem
        ListSelection listSelection = imageSheetsList:GetSelection()
        return listSelection:GetListItem()
    end

    action GetCurrentImageSheetIndex returns integer
        ListSelection listSelection = imageSheetsList:GetSelection()
        return listSelection:GetIndex()
    end

    action AddToImagesListArray(integer sheetIndex, List list)
        imagesListArray:RemoveAt(sheetIndex)        
        imagesListArray:Add(sheetIndex, list)
    end

    /* called by the AddImageSheetsOkBehavior, adds the new image sheet name
    to the list of image sheets for the project */
    action AddNewImageSheet(text imageSheetName)
        imageSheetCount = imageSheetCount + 1
        imageSheetsList:Add(imageSheetCount, imageSheetName)
        List list
        list:Empty()
        imagesListArray:Add(imageSheetCount, list)
    end

    action EditImageSheetName(text imageSheetName, integer index)
        imageSheetsList:Add(index, imageSheetName)
    end

    action RemoveImageSheet(integer index)
        imageSheetCount = imageSheetCount - 1
        imageSheetsList:Remove(index)
        imagesListArray:RemoveAt(index)
    end
   
    action RemoveImage(integer imageIndex, integer sheetIndex)
        ListItem listItem = cast(ListItem, imagesList:GetItem(imageIndex))
        imagesList:Remove(listItem)
        List list 
        integer i = 0
        repeat while i < imagesList:GetSize()
            list:Add(imagesList:GetListItem(i))
            i = i + 1
        end
        imagesListArray:RemoveAt(sheetIndex)
        imagesListArray:Add(sheetIndex, list)
        SetCurrentImageList(sheetIndex)
    end

    action ToggleEnableImageSheets()
        if not enableImageSheets:GetToggleState()
            enableImageSheets:SetToggleState(true)
        end
    end

    /*
    This action returns the current project that's associated with this dialog.
    Because QuorumStudio reuses the same properties dialog for multiple projects
    when possible, this usually refers to the last project whose properties were
    opened. This value is set from the SetProperties action.
    */
    action GetProject returns QuorumProject
        return project
    end


    action SetAndroidResourcesLocation(text location)
        androidResourcesField:SetText(location)
    end

    action SetIOSResourcesLocation(text location)
        iosResourcesField:SetText(location)
    end

    /*
    This action saves all of the changes made in this dialog within the project,
    and asks the project to rewrite its property file.
    */
    action SavePropertyChanges
        project:SetExecutableName(programNameField:GetText())
        
        if standardProjectButton:GetToggleState() = true
            project:SetProjectCompileType(project:JAVA_COMPILE_TYPE)
        elseif webBrowserProjectButton:GetToggleState() = true
            project:SetProjectCompileType(project:JAVASCRIPT_COMPILE_TYPE)
        elseif legoProjectButton:GetToggleState() = true
            project:SetProjectCompileType(project:LEGO_COMPILE_TYPE)
        end

        project:SetJavaClassDependencies(ListToArray(javaClassList))
        project:SetJarDependencies(ListToArray(jarList))
        project:SetQuorumDependencies(ListToArray(quorumSourcesList))

        if not imageSheetsList:IsEmpty()
            enableImageSheets:SetToggleState(true)
            buildImageSheetsOnCompile:SetToggleState(true)
        end

        project:EnableImageSheets(enableImageSheets:GetToggleState())
        project:EnableRecompileImageSheetsOnBuild(buildImageSheetsOnCompile:GetToggleState())
        text imageSheetBuildPath = imageSheetsBuildPathField:GetText():Trim()
        if enableImageSheets:GetToggleState()
            if imageSheetBuildPath:StartsWith("/")
                project:SetImageSheetBuildPath(imageSheetBuildPath)
            else
                project:SetImageSheetBuildPath("/" + imageSheetBuildPath)
            end
        end
        if(enableImageSheets:GetToggleState())
            ImageSheets imageSheets
            Array<text> imageSheetName = ListToArray(imageSheetsList)
            integer i = 0
            repeat while i < imageSheetName:GetSize()
                Array<text> images = ListToArray(imagesListArray:Get(i))
                ImageSheet imageSheet
                imageSheet:SetName(imageSheetName:Get(i))
                imageSheet:SetValues(images)
                imageSheets:Add(imageSheet)
                i = i + 1
            end

            project:SetImageSheets(imageSheets)
            ProjectProperty projectImageSheets = project:GenerateImageSheetProperty()
            projectImageSheets:SetKey(project:IMAGE_SHEETS)
            project:AddProperty(projectImageSheets)
        end
        
        boolean mobileFlag = false

        if not androidLibraryField:GetText():Equals("")
            project:SetAndroidPath(androidLibraryField:GetText())
            mobileFlag = true
        end
        if not keyStoreField:GetText():Equals("")
            project:SetAndroidKeystorePath(keyStoreField:GetText())
            mobileFlag = true
        end
        if not keyStorePasswordField:GetText():Equals("")
            project:SetAndroidKeystorePassword(keyStorePasswordField:GetText())
            mobileFlag = true
        end
        if not keyAliasField:GetText():Equals("")
            project:SetAndroidKeyAlias(keyAliasField:GetText())
            mobileFlag = true
        end
        if not keyPasswordField:GetText():Equals("")
            project:SetAndroidKeyPassword(keyPasswordField:GetText())
            mobileFlag = true
        end
        if not jdkField:GetText():Equals("")
            project:SetAndroidAlternateJDKPath(jdkField:GetText())
            mobileFlag = true
        end

        text androidAssetsPath = androidResourcesField:GetText():Trim()
        if androidAssetsPath:StartsWith("/")
            project:SetAndroidAssetsPath(androidAssetsPath)
        else
            project:SetAndroidAssetsPath("/" + androidAssetsPath)
        end
    
        //Save IOS Properties
        ListSelection selection = availableDevicesList:GetSelection()
        if selection not= undefined
            text name = selection:GetDisplayName()
            integer index = selection:GetIndex()
            if index >= 0
                AppleDevicesReader reader
                Array<AppleDevice> devices = reader:GetAvailableDevices()
                AppleDevice device = devices:Get(index)
                //tell the project to try and load a particular device.
                project:SetIOSPhysicalDevice(device:IsDevice())
                project:SetIOSDevice(name)
            end
        end

        text bundle = iosBundlingField:GetText()
        project:SetIOSBundle(bundle)

        text provisioning = iosProvisioningField:GetText()
        project:SetIOSProvisioning(provisioning)

        text signature = iosSignatureField:GetText()
        project:SetIOSSignature(signature)

        text iosAssetsPath = iosResourcesField:GetText():Trim()
        if iosAssetsPath:StartsWith("/")
            project:SetIOSAssetsPath(iosAssetsPath)
        else
            project:SetIOSAssetsPath("/" + iosAssetsPath)
        end

        project:Save()

        if project:HasGitSupport() 
            text user = me:usernameTeams:GetText()
            text pass = me:passwordTeams:GetText()
            text name = me:nameTeams:GetText()
            text email = me:emailTeams:GetText()
            Credentials credentials
            credentials:SetUsername(user)
            credentials:SetPassword(pass)
            credentials:SetName(name)
            credentials:SetEmail(email)
            options:AddPassword(project:GetLocation():GetAbsolutePath(), credentials)
        end
    end

    action IsInitialized returns boolean
        return initialized
    end

    private action CreateProjectInfoTab returns Tab
        Tab projectInfoTab
        projectInfoTab:SetFocusTarget(programLocationField)
        projectInfoTab:SetName("Project Information")
        projectInfoTab:DisplayCloseButton(false)

        StackedRowPage page 
        page:SetPixelHeight(500) //for testing, remove after fixes
        Banner banner = page:AddBanner("Projects", "General Project Properties for locations and dependencies")
        banner:PositionFromTop()
        
        page:AddLabel("Project Location")
        Grouping resourceGroup = page:AddGrouping("Location")
        programLocationField = resourceGroup:AddTextField("Location")
        
        page:AddLabel("Project Name")
        programNameField = page:AddTextField("Name")
        
        //add radio buttons
        page:AddLabel("Project Type")
        ButtonGroup projectRadios
        projectRadios:SetName("Project Type")
        Grouping projectTypeGroup = page:AddGrouping("Project Type")
        standardProjectButton = projectTypeGroup:AddRadioButton("Standard")
        webBrowserProjectButton = projectTypeGroup:AddRadioButton("Browser")
        legoProjectButton = projectTypeGroup:AddRadioButton("LEGO")
        
        //Now group them
        projectRadios:Add(standardProjectButton)
        projectRadios:Add(webBrowserProjectButton)
        projectRadios:Add(legoProjectButton)
        
        //Create all of the plugins lists and buttons for controlling them
        page:AddLabel("Plugin Folders")
        javaClassList = page:AddList("Plugins")
        javaClassList:Add("Option 1")
        javaClassList:Add("Option 2")
        
        Grouping pluginGroup = page:AddGrouping("Plugins")
        Button addPlugin = pluginGroup:AddButton("Add")
        Button removePlugin = pluginGroup:AddButton("Remove")
        Button clearPlugin = pluginGroup:AddButton("Clear")

        //set the behaviors on the plugin buttons
        addPlugin:SetBehavior(addJavaClassBehavior)
        removePlugin:SetBehavior(removeJavaClassBehavior)
        clearPlugin:SetBehavior(clearJavaClassesBehavior)

        addJavaClassBehavior:SetList(javaClassList)
        removeJavaClassBehavior:SetList(javaClassList)
        clearJavaClassesBehavior:SetList(javaClassList)
        
        //Create the list for all of the jar files
        page:AddLabel("Jar Folders")
        jarList = page:AddList("Jars")
        jarList:Add("Option 1")
        jarList:Add("Option 2")
        
        Grouping jarGroup = page:AddGrouping("Jars")
        Button addJar = jarGroup:AddButton("Add")
        Button removeJar = jarGroup:AddButton("Remove")
        Button clearJars = jarGroup:AddButton("Clear")

        //set the behaviors on the Jar buttons
        addJarBehavior:SetList(jarList)
        removeJarBehavior:SetList(jarList)
        clearJarsBehavior:SetList(jarList)

        addJar:SetBehavior(addJarBehavior)
        removeJar:SetBehavior(removeJarBehavior)
        clearJars:SetBehavior(clearJarsBehavior)

        page:AddLabel("Source Folders")
        quorumSourcesList = page:AddList("Sources")
        quorumSourcesList:Add("Option 1")
        quorumSourcesList:Add("Option 2")
        
        Grouping sourceGroup = page:AddGrouping("Sources")
        Button addSource = sourceGroup:AddButton("Add")
        Button removeSource = sourceGroup:AddButton("Remove")
        Button clearSources = sourceGroup:AddButton("Clear")
        
        //set the behaviors on the Source buttons
        addSourceBehavior:SetList(quorumSourcesList)
        removeSourceBehavior:SetList(quorumSourcesList)
        clearSourcesBehavior:SetList(quorumSourcesList)

        addSource:SetBehavior(addSourceBehavior)
        removeSource:SetBehavior(removeSourceBehavior)
        clearSources:SetBehavior(clearSourcesBehavior)
        
        Grouping buttonGroup = page:AddGrouping("Confirm")
        Button cancelButton = buttonGroup:AddButton("Cancel")
        Button okayButton = buttonGroup:AddButton("Ok")
        buttonGroup:PositionFromBottom() 

        cancelButton:SetBehavior(cancelBehavior)
        okayButton:SetBehavior(okBehavior)

        projectInfoTab:SetRelatedItem(page)
        return projectInfoTab
    end

    private action CreateGamesTab returns Tab
        Tab tab
        tab:SetFocusTarget(enableImageSheets)
        tab:SetName("Games")
        tab:DisplayCloseButton(false)

        Control panel
        panel:SetInterfaceOptionsKey("Dialog")
        panel:SetPercentageWidth(1.0)
        panel:SetVerticalLayoutMode(panel:FIT_CONTENTS)

        ControlShaderView panelView
        panelView:Initialize()
        panel:SetView2D(panelView)
        tab:SetRelatedItem(panel)

        FlowLayout layout
        panel:SetLayout(layout)

        enableImageSheets:SetName("Enable Image Sheet Support")
        enableImageSheets:SetLeftPadding(10)
        enableImageSheets:SetRightPadding(20)
        enableImageSheets:SetTopPadding(10)
        panel:Add(enableImageSheets)

        buildImageSheetsOnCompile:SetName("Rebuild on Compile")
        buildImageSheetsOnCompile:SetLeftPadding(10)
        buildImageSheetsOnCompile:SetTopPadding(10)
        panel:Add(buildImageSheetsOnCompile)

        Control buildPathContainer
        buildPathContainer:SetPercentageWidth(1.0)
        buildPathContainer:SetPixelWidth(-10)
        buildPathContainer:SetVerticalLayoutMode(buildPathContainer:FIT_CONTENTS)
        buildPathContainer:SetTopPadding(20)
        buildPathContainer:SetLeftPadding(10)

        FlowLayout buildPathLayout
        buildPathContainer:SetLayout(buildPathLayout)

        Label buildPathLabel
        buildPathLabel:SetText("Build Path: ")
        buildPathContainer:Add(buildPathLabel)

        imageSheetsBuildPathField:SetText("resources")
        imageSheetsBuildPathField:SetName("Build Path")
        imageSheetsBuildPathField:SetHorizontalLayoutMode(imageSheetsBuildPathField:parent:Libraries.Interface.Controls.Control:FILL)
        buildPathContainer:Add(imageSheetsBuildPathField)

        panel:Add(buildPathContainer)

        Label imageSheetsLabel
        imageSheetsLabel:SetText("Image Sheets")
        imageSheetsLabel:SetLeftPadding(10)
        imageSheetsLabel:SetTopPadding(20)
        panel:Add(imageSheetsLabel)

        imageSheetListBehavior:SetList(imageSheetsList)

        FlowLayout imageSheetsLayout
        Control imageSheetsArea
        imageSheetsArea:SetLayout(imageSheetsLayout)
        imageSheetsArea:SetHorizontalLayoutMode(imageSheetsArea:STANDARD)
        imageSheetsArea:SetVerticalLayoutMode(imageSheetsArea:FIT_CONTENTS)
        imageSheetsArea:SetPercentageWidth(1.0)
        imageSheetsArea:SetLeftPadding(10)
        imageSheetsArea:SetTopPadding(10)

        ScrollPane imageSheetsScrollPane
        imageSheetsScrollPane:SetInterfaceOptionsKey("DialogScrollPane")
        imageSheetsScrollPane:SetPixelHeight(100)
        imageSheetsScrollPane:SetPercentageWidth(0.7)
        FlowLayout imageSheetsScrollLayout
        imageSheetsScrollPane:SetLayout(imageSheetsScrollLayout)

        imageSheetsList:SetName("Image Sheets List")
        imageSheetsList:SetHorizontalLayoutMode(imageSheetsList:parent:Libraries.Interface.Controls.Control:STANDARD)
        imageSheetsList:SetVerticalLayoutMode(imageSheetsList:parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)
        imageSheetsList:SetPercentageWidth(1.0)
        //have to double click on the list item to initiate behavior
        imageSheetsScrollPane:Add(imageSheetsList)
        imageSheetsList:SetItemActivationBehavior(imageSheetListBehavior)
        imageSheetsArea:Add(imageSheetsScrollPane)

        addImageSheetsBehavior:SetImageSheetsList(imageSheetsList)
        editImageSheetsBehavior:SetImageSheetsList(imageSheetsList)
        removeImageSheetBehavior:SetImageSheetsList(imageSheetsList)

        Control imageSheetsButtons
        FlowLayout imageSheetsButtonsLayout
        imageSheetsButtons:SetLayout(imageSheetsButtonsLayout)
        imageSheetsButtons:SetHorizontalLayoutMode(imageSheetsButtons:FILL)
        imageSheetsButtons:SetVerticalLayoutMode(imageSheetsButtons:FIT_CONTENTS)
        imageSheetsArea:Add(imageSheetsButtons)

        Button addSheet
        addSheet:SetName("Add")
        addSheet:SetHorizontalLayoutMode(addSheet:parent:Libraries.Interface.Controls.Control:STANDARD)
        addSheet:SetPercentageWidth(1.0)
        addSheet:SetLeftPadding(15)
        addSheet:SetRightPadding(20)
        addSheet:SetBottomPadding(25)
        addSheet:SetBehavior(addImageSheetsBehavior)
        imageSheetsButtons:Add(addSheet)

        Button editSheet
        editSheet:SetName("Edit")
        editSheet:SetHorizontalLayoutMode(editSheet:parent:Libraries.Interface.Controls.Control:STANDARD)
        editSheet:SetPercentageWidth(1.0)
        editSheet:SetLeftPadding(15)
        editSheet:SetRightPadding(20)
        editSheet:SetBottomPadding(25)
        editSheet:SetBehavior(editImageSheetsBehavior)
        imageSheetsButtons:Add(editSheet)

        Button removeSheet
        removeSheet:SetName("Remove")
        removeSheet:SetHorizontalLayoutMode(removeSheet:parent:Libraries.Interface.Controls.Control:STANDARD)
        removeSheet:SetPercentageWidth(1.0)
        removeSheet:SetLeftPadding(15)
        removeSheet:SetRightPadding(20)
        removeSheet:SetBottomPadding(6)
        removeSheet:SetBehavior(removeImageSheetBehavior)
        imageSheetsButtons:Add(removeSheet)

        panel:Add(imageSheetsArea)

        Label imagesLabel
        imagesLabel:SetText("Images")
        imagesLabel:SetLeftPadding(10)
        imagesLabel:SetTopPadding(20)
        panel:Add(imagesLabel)

        FlowLayout imagesLayout

        Control imagesArea
        imagesArea:SetLayout(imagesLayout)
        imagesArea:SetHorizontalLayoutMode(imageSheetsArea:STANDARD)
        imagesArea:SetVerticalLayoutMode(imageSheetsArea:FIT_CONTENTS)
        imagesArea:SetPercentageWidth(1.0)
        imagesArea:SetLeftPadding(10)
        imagesArea:SetTopPadding(10)
        
        ScrollPane scrollPane
        scrollPane:SetInterfaceOptionsKey("DialogScrollPane")
        scrollPane:SetPercentageWidth(0.7)
        scrollPane:SetPixelHeight(100)
        FlowLayout scrollLayout
        scrollPane:SetLayout(scrollLayout)

        imagesList:SetName("Images List")
        imagesList:SetHorizontalLayoutMode(imagesList:parent:Libraries.Interface.Controls.Control:STANDARD)
        imagesList:SetVerticalLayoutMode(imagesList:parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)
        imagesList:SetPercentageWidth(1.0)
        scrollPane:Add(imagesList)
        imagesArea:Add(scrollPane)

        addImagesBehavior:SetImageSheetsList(imageSheetsList)
        addImageFolderBehavior:SetImageSheetsList(imageSheetsList)
        removeImageBehavior:SetImageSheetsList(imageSheetsList)
        removeImageBehavior:SetImagesList(imagesList)

        Control imagesButtons
        FlowLayout imagesButtonsLayout
        imagesButtons:SetLayout(imagesButtonsLayout)
        imagesButtons:SetHorizontalLayoutMode(imagesButtons:FILL)
        imagesButtons:SetVerticalLayoutMode(imagesButtons:FIT_CONTENTS)
        imagesArea:Add(imagesButtons)

        Button addImage
        addImage:SetName("Add")
        addImage:SetHorizontalLayoutMode(addImage:parent:Libraries.Interface.Controls.Control:STANDARD)
        addImage:SetPercentageWidth(1.0)
        addImage:SetLeftPadding(15)
        addImage:SetRightPadding(20)
        addImage:SetBottomPadding(25)
        addImage:SetBehavior(addImagesBehavior)
        imagesButtons:Add(addImage)

        Button addImageFolder
        addImageFolder:SetName("Add Folder")
        addImageFolder:SetHorizontalLayoutMode(addImageFolder:parent:Libraries.Interface.Controls.Control:STANDARD)
        addImageFolder:SetPercentageWidth(1.0)
        addImageFolder:SetLeftPadding(15)
        addImageFolder:SetRightPadding(20)
        addImageFolder:SetBottomPadding(25)
        addImageFolder:SetBehavior(addImageFolderBehavior)
        imagesButtons:Add(addImageFolder)

        Button removeImage
        removeImage:SetName("Remove")
        removeImage:SetHorizontalLayoutMode(removeImage:parent:Libraries.Interface.Controls.Control:STANDARD)
        removeImage:SetPercentageWidth(1.0)
        removeImage:SetLeftPadding(15)
        removeImage:SetRightPadding(20)
        removeImage:SetBottomPadding(25)
        removeImage:SetBehavior(removeImageBehavior)
        imagesButtons:Add(removeImage)

        panel:Add(imagesArea)

        Control confirmArea
        FlowLayout confirmLayout
        confirmArea:SetLayout(confirmLayout)
        confirmArea:SetPercentageWidth(1.0)
        confirmArea:SetTopPadding(20)
        confirmArea:SetVerticalLayoutMode(confirmArea:FIT_CONTENTS)

        Control confirmPadding
        confirmPadding:SetPercentageWidth(0.56)
        confirmPadding:SetPixelHeight(1)
        confirmArea:Add(confirmPadding)

        Button cancelButton
        cancelButton:SetName("Cancel")
        cancelButton:SetHorizontalLayoutMode(cancelButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        cancelButton:SetPercentageWidth(0.2)
        cancelButton:SetLeftPadding(0)
        cancelButton:SetBottomPadding(20)
        cancelButton:SetTopPadding(20)
        cancelButton:SetBehavior(cancelBehavior)
        confirmArea:Add(cancelButton)

        Button okayButton
        okayButton:SetName("OK")
        okayButton:SetHorizontalLayoutMode(okayButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        okayButton:SetInterfaceOptionsKey("DialogAcceptButton")
        okayButton:SetPercentageWidth(0.2)
        okayButton:SetLeftPadding(10)
        okayButton:SetBottomPadding(20)
        okayButton:SetTopPadding(20)
        okayButton:SetBehavior(okBehavior)
        confirmArea:Add(okayButton)

        panel:Add(confirmArea)

        enableImageSheets:SetNextFocus(buildImageSheetsOnCompile)
        enableImageSheets:SetPreviousFocus(okayButton)
        buildImageSheetsOnCompile:SetNextFocus(imageSheetsBuildPathField)
        buildImageSheetsOnCompile:SetPreviousFocus(enableImageSheets)
        imageSheetsBuildPathField:SetNextFocus(imageSheetsList)
        imageSheetsBuildPathField:SetPreviousFocus(buildImageSheetsOnCompile)
        imageSheetsList:SetNextFocus(addSheet)
        imageSheetsList:SetPreviousFocus(imageSheetsBuildPathField)
        addSheet:SetNextFocus(editSheet)
        addSheet:SetPreviousFocus(imageSheetsList)
        editSheet:SetNextFocus(removeSheet)
        editSheet:SetPreviousFocus(addSheet)
        removeSheet:SetNextFocus(imagesList)
        removeSheet:SetPreviousFocus(editSheet)
        imagesList:SetNextFocus(addImage)
        imagesList:SetPreviousFocus(removeSheet)
        addImage:SetNextFocus(addImageFolder)
        addImage:SetPreviousFocus(imagesList)
        addImageFolder:SetNextFocus(removeImage)
        addImageFolder:SetPreviousFocus(addImage)
        removeImage:SetNextFocus(cancelButton)
        removeImage:SetPreviousFocus(addImageFolder)
        cancelButton:SetNextFocus(okayButton)
        cancelButton:SetPreviousFocus(removeImage)
        okayButton:SetNextFocus(enableImageSheets)
        okayButton:SetPreviousFocus(cancelButton)

        return tab
    end

    private action CreateiOSTab returns Tab
        Tab tab
        tab:SetName("iOS")
        tab:DisplayCloseButton(false)

        StackedRowPage page 
        page:SetPixelHeight(500) //for testing, remove after fixes
        Banner banner = page:AddBanner("iOS Device Settings", "Pick a simulator or enter security credentials for physical devices")
        banner:PositionFromTop()
        
        page:AddLabel("iOS Resource Folder")
        Grouping resourceGroup = page:AddGrouping("Resources")
        iosResourcesField = resourceGroup:AddTextField("iOS Resources")
        Button browse = resourceGroup:AddButton("Browse ..")
        browse:SetBehavior(iosResourcesBrowseBehavior)
        tab:SetFocusTarget(iosResourcesField)
        
        page:AddLabel("Bundle Identifier")
        iosBundlingField = page:AddTextField("Bundling")

        page:AddLabel("Signing Identity")
        iosSignatureField = page:AddTextField("Signing")
        
        page:AddLabel("Provisioning profile")
        iosProvisioningField = page:AddTextField("Provisioning")
        
        
        page:AddLabel("Device List")
        availableDevicesList = page:AddList("Device List")

        AppleDevicesReader reader
        Array<AppleDevice> devices = reader:GetAvailableDevices()
        i = 0
        repeat while i < devices:GetSize()
            AppleDevice device = devices:Get(i)
            availableDevicesList:Add(device:GetName())
            i = i + 1
        end
        
        Grouping buttonGroup = page:AddGrouping("Confirm")
        Button cancel = buttonGroup:AddButton("Cancel")
        Button ok = buttonGroup:AddButton("Ok")
        buttonGroup:PositionFromBottom() 
        tab:SetRelatedItem(page)

        ok:SetBehavior(okBehavior)
        cancel:SetBehavior(cancelBehavior)
        return tab
    end

    private action CreateAndroidTab returns Tab
        Tab tab
        tab:SetFocusTarget(androidResourcesField)
        tab:SetName("Android")
        tab:DisplayCloseButton(false)

        Control panel
        panel:SetInterfaceOptionsKey("Dialog")
        panel:SetPercentageWidth(1.0)
        panel:SetVerticalLayoutMode(panel:FIT_CONTENTS)

        ControlShaderView panelView
        panelView:Initialize()
        panel:SetView2D(panelView)

        FlowLayout layout
        panel:SetLayout(layout)
        tab:SetRelatedItem(panel)

        Label resourcesLabel
        resourcesLabel:SetText("Resources")
        resourcesLabel:SetLeftPadding(10)
        resourcesLabel:SetTopPadding(10)
        panel:Add(resourcesLabel)

        FlowLayout resourcesLayout
        Control resourcesContainer
        resourcesContainer:SetLayout(resourcesLayout)
        resourcesContainer:SetPercentageWidth(1.0)
        resourcesContainer:SetPixelWidth(-10)
        resourcesContainer:SetVerticalLayoutMode(resourcesContainer:FIT_CONTENTS)
        resourcesContainer:SetLeftPadding(10)
        resourcesContainer:SetTopPadding(10)

        panel:Add(resourcesContainer)

        emptyTextFieldBehavior:SetTextField(androidResourcesField)

        androidResourcesField:SetName("Android Resources")
        androidResourcesField:SetPercentageWidth(0.68)
        resourcesContainer:Add(androidResourcesField)

        FlowLayout resourcesButtonLayout   
        Control resourcesButtonContainer
        resourcesButtonContainer:SetLayout(resourcesButtonLayout)
        resourcesButtonContainer:SetPercentageWidth(0.3)
        resourcesButtonContainer:SetVerticalLayoutMode(resourcesButtonContainer:FIT_CONTENTS)
        resourcesButtonContainer:SetLeftPadding(10)
        resourcesContainer:Add(resourcesButtonContainer)
        
        Button resourcesBrowse
        resourcesBrowse:SetName("Browse...")
        resourcesBrowse:SetHorizontalLayoutMode(resourcesBrowse:parent:Libraries.Interface.Controls.Control:STANDARD)
        resourcesBrowse:SetPercentageWidth(0.45)
        resourcesBrowse:SetLeftPadding(15)
        resourcesBrowse:SetBehavior(mobileResourcesBrowseBehavior)
        resourcesButtonContainer:Add(resourcesBrowse)

        Button resourcesClear
        resourcesClear:SetName("Clear")
        resourcesClear:SetHorizontalLayoutMode(resourcesClear:parent:Libraries.Interface.Controls.Control:STANDARD)
        resourcesClear:SetPercentageWidth(0.45)
        resourcesClear:SetLeftPadding(20)
        resourcesClear:SetRightPadding(10)
        resourcesClear:SetBehavior(emptyTextFieldBehavior)
        resourcesButtonContainer:Add(resourcesClear)

        Label androidLabel
        androidLabel:SetSize(20)
        androidLabel:SetText("Android")
        androidLabel:SetLeftPadding(10)
        androidLabel:SetTopPadding(20)
        panel:Add(androidLabel)

        Control newLine
        newLine:SetHorizontalLayoutMode(newLine:FILL)
        panel:Add(newLine)

        Label androidLibraryLabel
        androidLibraryLabel:SetText("Android Library Path")
        androidLibraryLabel:SetLeftPadding(10)
        androidLibraryLabel:SetTopPadding(10)
        panel:Add(androidLibraryLabel)

        androidLibraryField:SetName("Android Library Path")
        androidLibraryField:SetPercentageWidth(1.0)
        androidLibraryField:SetPixelWidth(-10)
        androidLibraryField:SetLeftPadding(10)
        androidLibraryField:SetTopPadding(10)
        panel:Add(androidLibraryField)

        Label keyStoreLabel
        keyStoreLabel:SetText("Key Store Path")
        keyStoreLabel:SetLeftPadding(10)
        keyStoreLabel:SetTopPadding(20)
        panel:Add(keyStoreLabel)

        keyStoreField:SetName("Key Store Path")
        keyStoreField:SetPercentageWidth(1.0)
        keyStoreField:SetPixelWidth(-10)
        keyStoreField:SetLeftPadding(10)
        keyStoreField:SetTopPadding(10)
        panel:Add(keyStoreField)

        Label keyStorePasswordLabel
        keyStorePasswordLabel:SetText("Key Store Password")
        keyStorePasswordLabel:SetLeftPadding(10)
        keyStorePasswordLabel:SetTopPadding(20)
        panel:Add(keyStorePasswordLabel)

        keyStorePasswordField:SetName("Key Store Password")
        keyStorePasswordField:SetPercentageWidth(1.0)
        keyStorePasswordField:SetPixelWidth(-10)
        keyStorePasswordField:SetLeftPadding(10)
        keyStorePasswordField:SetTopPadding(10)
        panel:Add(keyStorePasswordField)

        Label keyAliasLabel
        keyAliasLabel:SetText("Key Alias")
        keyAliasLabel:SetLeftPadding(10)
        keyAliasLabel:SetTopPadding(20)
        panel:Add(keyAliasLabel)

        keyAliasField:SetName("Key Alias")
        keyAliasField:SetPercentageWidth(1.0)
        keyAliasField:SetPixelWidth(-10)
        keyAliasField:SetLeftPadding(10)
        keyAliasField:SetTopPadding(10)
        panel:Add(keyAliasField)

        Label keyPasswordLabel
        keyPasswordLabel:SetText("Key Password")
        keyPasswordLabel:SetLeftPadding(10)
        keyPasswordLabel:SetTopPadding(20)
        panel:Add(keyPasswordLabel)

        keyPasswordField:SetName("Key Password")
        keyPasswordField:SetPercentageWidth(1.0)
        keyPasswordField:SetPixelWidth(-10)
        keyPasswordField:SetLeftPadding(10)
        keyPasswordField:SetTopPadding(10)
        panel:Add(keyPasswordField)

        Label jdkLabel
        jdkLabel:SetText("Alternative Java Development Kit")
        jdkLabel:SetLeftPadding(10)
        jdkLabel:SetTopPadding(20)
        panel:Add(jdkLabel)

        jdkField:SetName("Alternative Java Development Kit")
        jdkField:SetPercentageWidth(1.0)
        jdkField:SetPixelWidth(-10)
        jdkField:SetLeftPadding(10)
        jdkField:SetTopPadding(10)
        panel:Add(jdkField)

        Control confirmArea
        FlowLayout confirmLayout
        confirmArea:SetLayout(confirmLayout)
        confirmArea:SetPercentageWidth(1.0)
        confirmArea:SetTopPadding(20)
        confirmArea:SetVerticalLayoutMode(confirmArea:FIT_CONTENTS)

        Control confirmPadding
        confirmPadding:SetPercentageWidth(0.56)
        confirmPadding:SetPixelHeight(1)
        confirmArea:Add(confirmPadding)

        Button cancelButton
        cancelButton:SetName("Cancel")
        cancelButton:SetHorizontalLayoutMode(cancelButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        cancelButton:SetPercentageWidth(0.2)
        cancelButton:SetLeftPadding(0)
        cancelButton:SetTopPadding(40)
        cancelButton:SetBottomPadding(20)
        cancelButton:SetBehavior(cancelBehavior)
        confirmArea:Add(cancelButton)

        Button okayButton
        okayButton:SetName("OK")
        okayButton:SetHorizontalLayoutMode(okayButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        okayButton:SetInterfaceOptionsKey("DialogAcceptButton")
        okayButton:SetPercentageWidth(0.2)
        okayButton:SetLeftPadding(10)
        okayButton:SetTopPadding(40)
        okayButton:SetBottomPadding(20)
        okayButton:SetBehavior(okBehavior)
        confirmArea:Add(okayButton)

        panel:Add(confirmArea)

        androidResourcesField:SetNextFocus(resourcesBrowse)
        androidResourcesField:SetPreviousFocus(okayButton)
        resourcesBrowse:SetNextFocus(resourcesClear)
        resourcesBrowse:SetPreviousFocus(androidResourcesField)
        resourcesClear:SetNextFocus(androidLibraryField)
        resourcesClear:SetPreviousFocus(resourcesBrowse)
        androidLibraryField:SetNextFocus(keyStoreField)
        androidLibraryField:SetPreviousFocus(resourcesClear)
        keyStoreField:SetNextFocus(keyStorePasswordField)
        keyStoreField:SetPreviousFocus(androidLibraryField)
        keyStorePasswordField:SetNextFocus(keyAliasField)
        keyStorePasswordField:SetPreviousFocus(keyStoreField)
        keyAliasField:SetNextFocus(keyPasswordField)
        keyAliasField:SetPreviousFocus(keyStorePasswordField)
        keyPasswordField:SetNextFocus(jdkField)
        keyPasswordField:SetPreviousFocus(keyAliasField)
        jdkField:SetNextFocus(cancelButton)
        jdkField:SetPreviousFocus(keyPasswordField)
        cancelButton:SetNextFocus(okayButton)
        cancelButton:SetPreviousFocus(jdkField)
        okayButton:SetNextFocus(androidResourcesField)
        okayButton:SetPreviousFocus(cancelButton)

        return tab
    end

    private action CreateTeamsTab returns Tab
        Tab tab
        tab:SetFocusTarget(usernameTeams)
        tab:SetName("Teams")
        tab:DisplayCloseButton(false)

        Control panel
        panel:SetInterfaceOptionsKey("Dialog")
        panel:SetPercentageWidth(1.0)
        panel:SetVerticalLayoutMode(panel:FIT_CONTENTS)

        ControlShaderView panelView
        panelView:Initialize()
        panel:SetView2D(panelView)

        FlowLayout layout
        panel:SetLayout(layout)
        tab:SetRelatedItem(panel)

        

        FlowLayout resourcesLayout
        Control resourcesContainer
        resourcesContainer:SetLayout(resourcesLayout)
        resourcesContainer:SetPercentageWidth(1.0)
        resourcesContainer:SetPixelWidth(-10)
        resourcesContainer:SetVerticalLayoutMode(resourcesContainer:FIT_CONTENTS)
        resourcesContainer:SetLeftPadding(10)
        resourcesContainer:SetTopPadding(10)

        

        Label versionControlLabel
        versionControlLabel:SetPercentageWidth(1.0)
        versionControlLabel:SetSize(20)
        versionControlLabel:SetText("Version Control Information (Git)")
        versionControlLabel:SetLeftPadding(10)
        versionControlLabel:SetTopPadding(20)
        panel:Add(versionControlLabel)
        panel:Add(resourcesContainer)


        Label usernameLabel
        usernameLabel:SetText("Username")
        usernameLabel:SetPercentageWidth(1.0)
        usernameLabel:SetLeftPadding(10)
        usernameLabel:SetTopPadding(10)
        resourcesContainer:Add(usernameLabel)

        emptyTextFieldBehavior:SetTextField(usernameTeams)

        usernameTeams:SetName("Username Textfield")
        usernameTeams:SetPercentageWidth(1.0)
        usernameTeams:SetPixelWidth(-10)
        usernameTeams:SetLeftPadding(10)
        usernameTeams:SetTopPadding(10)
        resourcesContainer:Add(usernameTeams)

        Label androidLabel
        androidLabel:SetText("Password")
        androidLabel:SetLeftPadding(10)
        androidLabel:SetTopPadding(10)
        resourcesContainer:Add(androidLabel)

        passwordTeams:SetName("Password Textfield")
        passwordTeams:SetPercentageWidth(1.0)
        passwordTeams:SetPixelWidth(-10)
        passwordTeams:SetLeftPadding(10)
        passwordTeams:SetTopPadding(10)
        resourcesContainer:Add(passwordTeams)

        Label nameLabel
        nameLabel:SetText("Name")
        nameLabel:SetLeftPadding(10)
        nameLabel:SetTopPadding(10)
        resourcesContainer:Add(nameLabel)

        nameTeams:SetName("Name Textfield")
        nameTeams:SetPercentageWidth(1.0)
        nameTeams:SetPixelWidth(-10)
        nameTeams:SetLeftPadding(10)
        nameTeams:SetTopPadding(10)
        resourcesContainer:Add(nameTeams)

        Label emailLabel
        emailLabel:SetText("Email")
        emailLabel:SetLeftPadding(10)
        emailLabel:SetTopPadding(10)
        resourcesContainer:Add(emailLabel)

        emailTeams:SetName("Email Textfield")
        emailTeams:SetPercentageWidth(1.0)
        emailTeams:SetPixelWidth(-10)
        emailTeams:SetLeftPadding(10)
        emailTeams:SetTopPadding(10)
        resourcesContainer:Add(emailTeams)

        Control newLine
        newLine:SetHorizontalLayoutMode(newLine:FILL)
        panel:Add(newLine)

        Control confirmArea
        FlowLayout confirmLayout
        confirmArea:SetLayout(confirmLayout)
        confirmArea:SetPercentageWidth(1.0)
        confirmArea:SetTopPadding(20)
        confirmArea:SetVerticalLayoutMode(confirmArea:FIT_CONTENTS)

        Control confirmPadding
        confirmPadding:SetPercentageWidth(0.56)
        confirmPadding:SetPixelHeight(1)
        confirmArea:Add(confirmPadding)

        Button cancelButton
        cancelButton:SetName("Cancel")
        cancelButton:SetHorizontalLayoutMode(cancelButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        cancelButton:SetPercentageWidth(0.2)
        cancelButton:SetLeftPadding(0)
        cancelButton:SetTopPadding(40)
        cancelButton:SetBottomPadding(20)
        cancelButton:SetBehavior(cancelBehavior)
        confirmArea:Add(cancelButton)

        Button okayButton
        okayButton:SetName("OK")
        okayButton:SetHorizontalLayoutMode(okayButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        okayButton:SetInterfaceOptionsKey("DialogAcceptButton")
        okayButton:SetPercentageWidth(0.2)
        okayButton:SetLeftPadding(10)
        okayButton:SetTopPadding(40)
        okayButton:SetBottomPadding(20)
        okayButton:SetBehavior(okBehavior)
        confirmArea:Add(okayButton)

        panel:Add(confirmArea)

        usernameTeams:SetNextFocus(passwordTeams)
        usernameTeams:SetPreviousFocus(okayButton)
        passwordTeams:SetNextFocus(nameTeams)
        passwordTeams:SetPreviousFocus(usernameTeams)

        nameTeams:SetNextFocus(emailTeams)
        nameTeams:SetPreviousFocus(passwordTeams)
        emailTeams:SetNextFocus(okayButton)
        emailTeams:SetPreviousFocus(nameTeams)


        cancelButton:SetNextFocus(okayButton)
        cancelButton:SetPreviousFocus(jdkField)
        okayButton:SetNextFocus(usernameTeams)
        okayButton:SetPreviousFocus(cancelButton)

        return tab
    end

    private action ListToArray(List list) returns Array<text>
        Array<text> array

        integer counter = 0
        repeat while counter < list:GetSize()
            array:Add(list:Get(counter))
            counter = counter + 1
        end

        return array
    end

    action OnHide()
        imageSheetCount = -1
        imagesListArray:Empty()
    end
end