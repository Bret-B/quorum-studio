package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Controls.TabPane
use Libraries.Interface.Controls.Tab
use Libraries.Interface.Controls.ScrollPane
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.Button
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Projects.ProjectProperty
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Game.Graphics.Gradient
use Libraries.Development.Environment.Studio.Behaviors.DialogCancelBehavior
use Libraries.Interface.Events.MouseWheelListener
use Libraries.Interface.Events.MouseEvent
use Libraries.System.File
use Libraries.Development.Environment.Studio.Behaviors.EmptyTextFieldBehavior
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Game.GameStateManager
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Configuration.Options
use Libraries.Development.Environment.Projects.Credentials
use Libraries.Development.Environment.Studio.Behaviors.QuorumStudioPropertiesOkBehavior
use Libraries.Interface.Views.ControlShaderView
use Libraries.Interface.Controls.RadioButton
use Libraries.Interface.Controls.ButtonGroup
use Libraries.Interface.Forms.Grouping
use Libraries.Interface.Pages.StackedRowPage
use Libraries.Interface.Forms.Banner
use Libraries.Interface.Controls.Checkbox


class QuorumStudioPropertiesDialog is Dialog, MouseWheelListener

    boolean initialized = false

    RadioButton lightModeButton = undefined
    RadioButton darkModeButton = undefined
    TextField frameRateField = undefined
    Checkbox overrideLibraryCheckbox = undefined
    TextField libraryField = undefined
    Checkbox framesPerSecondCheckbox = undefined
    Checkbox blockModeCheckbox = undefined

    TabPane tabPane

    EmptyTextFieldBehavior emptyTextFieldBehavior
    // Behaviors used by the OK and Cancel buttons.
    QuorumStudioPropertiesOkBehavior okBehavior
    DialogCancelBehavior cancelBehavior
    Options options = undefined

    action OnShow
        tabPane:Focus()
        Tab tab = tabPane:GetSelectedTab()
        if not tab:Equals(tabPane:Get(0))
            tab:Activate()
        end
    end

    on create
        okBehavior:SetDialog(me)
        cancelBehavior:SetDialog(me)
        SetBehavior(okBehavior)

        GameStateManager manager
        QuorumStudio studio = cast(QuorumStudio, manager:GetGame())
        options = studio:GetOptions()
    end

    action Initialize
        initialized = true
        SetName("Quorum Studio Properties")
        //SetPixelWidth(600)
        SetPercentageWidth(0.50)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)
        SetPercentageHeight(0.50)
        
        FlowLayout tabLayout
        tabPane:SetViewAreaLayout(tabLayout)
        tabPane:SetPercentageWidth(1.0)
        tabPane:SetPixelHeight(750) //this needs to go away after fixes as well

        tabPane:Add(CreateLoginTab())
        Add(tabPane)
        Load()
    end

    action Save
        if lightModeButton:GetToggleState()
            options:SetToLightMode()
        else
            options:SetToDarkMode()
        end

        if overrideLibraryCheckbox:GetToggleState()
            options:SetOverridingStandardLibrary(true)
        else
            options:SetOverridingStandardLibrary(false)
        end 

        if framesPerSecondCheckbox:GetToggleState()
            options:SetIsShowingFramesPerSecondCounter(true)
        else
            options:SetIsShowingFramesPerSecondCounter(false)
        end

        if blockModeCheckbox:GetToggleState()
            options:SetIsBlockMode(true)
        else
            options:SetIsBlockMode(false)
        end

        number frameRate = 30
        check
            frameRate = cast(number, frameRateField:GetText())
        detect e
        end
        options:SetFrameRateLimit(frameRate)
        
        //for this one, there's a series of different checks we could do here,
        //but realistically, the user could put this pointing to basically anything
        //and there's hardly a guarantee it's valid even if the structure is the same
        //Just check if it's a valid folder and move on
        text location = libraryField:GetText()
        File file
        file:SetAbsolutePath(location)
        if file:Exists() and file:IsDirectory()
            options:SetStandardLibraryOverrideRawLocation(location)
        else //if it's not valid, turn off the override
            options:SetOverridingStandardLibrary(false)
        end
    end

    action Load
        if options:IsLightMode()
            lightModeButton:SetToggleState(true)
        else
            darkModeButton:SetToggleState(true)
        end

        if options:IsOverridingStandardLibrary()
            overrideLibraryCheckbox:SetToggleState(true)
        else
            overrideLibraryCheckbox:SetToggleState(true)
        end

        if options:IsShowingFramesPerSecondCounter()
            framesPerSecondCheckbox:SetToggleState(true)
        else
            framesPerSecondCheckbox:SetToggleState(false)
        end

        if options:IsBlockMode()
            blockModeCheckbox:SetToggleState(true)
        else
            blockModeCheckbox:SetToggleState(false)
        end
        
        number frames = options:GetFrameRateLimit()
        frameRateField:SetText("" + frames)

        text libraryLocation = options:GetStandardLibraryOverrideRawLocation()
        libraryField:SetText(libraryLocation)
    end

    action IsInitialized returns boolean
        return initialized
    end

    private action CreateLoginTab returns Tab
        Tab tab
        tab:SetName("Properties")
        tab:DisplayCloseButton(false)

        StackedRowPage page 
        page:SetPixelHeight(400) //for testing, remove after fixes
        Banner banner = page:AddBanner("Settings", 
            "A set of properties for controlling aspects of Quorum Studio")
        banner:PositionFromTop()
        
        //add radio buttons
        page:AddLabel("Color Mode")
        ButtonGroup projectTypeGroup = page:AddButtonGroup("Color Mode")
        lightModeButton = projectTypeGroup:AddRadioButton("Light Mode")
        darkModeButton = projectTypeGroup:AddRadioButton("Dark Mode")
        
        page:AddLabel("Enable Blocks Mode")
        blockModeCheckbox = page:AddCheckbox("Blocks Mode Checkbox")

        page:AddLabel("Frame Rate")
        frameRateField = page:AddTextField("Frame Rate")
        
        page:AddLabel("Frames Per Second Counter")
        framesPerSecondCheckbox = page:AddCheckbox("Frames Per Second Counter")
        
        page:AddLabel("Override Standard Library (WARNING: Only do this if you have a good reason)")
        overrideLibraryCheckbox = page:AddCheckbox("Override Standard Library")
        page:AddLabel("Override Library Path")
        libraryField = page:AddTextField("Library Location")
        
        Grouping buttonGroup = page:AddGrouping("Confirm")
        Button cancelButton = buttonGroup:AddButton("Cancel")
        Button okayButton = buttonGroup:AddButton("Ok")
        buttonGroup:PositionFromBottom() 

        cancelButton:SetBehavior(cancelBehavior)
        okayButton:SetBehavior(okBehavior)

        tab:SetFocusTarget(lightModeButton)
        tab:SetRelatedItem(page)

        return tab
    end

    action OnHide()
    end
end