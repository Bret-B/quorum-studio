package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Controls.TabPane
use Libraries.Interface.Controls.Tab
use Libraries.Interface.Controls.ScrollPane
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.Button
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Projects.ProjectProperty
use Libraries.Containers.Iterator
use Libraries.Containers.Array
use Libraries.Game.Graphics.Gradient
use Libraries.Development.Environment.Studio.Behaviors.DialogCancelBehavior
use Libraries.Interface.Events.MouseWheelListener
use Libraries.Interface.Events.MouseEvent
use Libraries.System.File
use Libraries.Development.Environment.Studio.Behaviors.EmptyTextFieldBehavior
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Selections.TabPaneSelection
use Libraries.Game.GameStateManager
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Configuration.Options
use Libraries.Development.Environment.Projects.Credentials
use Libraries.Development.Environment.Studio.Behaviors.QuorumStudioPropertiesOkBehavior
use Libraries.Interface.Views.ControlShaderView
use Libraries.Interface.Controls.RadioButton
use Libraries.Interface.Controls.ButtonGroup


class QuorumStudioPropertiesDialog is Dialog, MouseWheelListener

    boolean initialized = false

    //variables for the Teams tab
    TextField usernameTeams
    TextField passwordTeams
    RadioButton lightModeButton
    RadioButton darkModeButton

    TabPane tabPane

    EmptyTextFieldBehavior emptyTextFieldBehavior
    // Behaviors used by the OK and Cancel buttons.
    QuorumStudioPropertiesOkBehavior okBehavior
    DialogCancelBehavior cancelBehavior
    Options options = undefined

    action OnShow
        tabPane:Focus()
        Tab tab = tabPane:GetSelectedTab()
        if not tab:Equals(tabPane:Get(0))
            tab:Activate()
        end
    end

    on create
        okBehavior:SetDialog(me)
        cancelBehavior:SetDialog(me)
        SetBehavior(okBehavior)

        passwordTeams:SetPassword(true)

        GameStateManager manager
        QuorumStudio studio = cast(QuorumStudio, manager:GetGame())
        options = studio:GetOptions()
        Load()
    end

    action Initialize
        initialized = true
        SetName("Quorum Studio Properties")
        //SetPixelWidth(600)
        SetPercentageWidth(0.50)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)
        SetPercentageHeight(0.50)
        
        FlowLayout tabLayout
        tabPane:SetViewAreaLayout(tabLayout)
        tabPane:SetPercentageWidth(1.0)
        tabPane:SetPixelHeight(250)

        tabPane:Add(CreateLoginTab())
        Add(tabPane)
    end

    action Save
        text user = usernameTeams:GetText()
        text pass = passwordTeams:GetText()

        //check if they've put anything in the boxes 
        //and set it to be encrypted
        if user not= undefined and pass not= undefined 
            and not user:IsEmpty() and not pass:IsEmpty()
            Credentials credentials
            credentials:SetUsername(user)
            credentials:SetPassword(pass)
            options:AddPassword(options:QUORUM_WEBSITE_PASSWORD_KEY, credentials)
        else 
            options:RemovePassword(options:QUORUM_WEBSITE_PASSWORD_KEY)
        end

        if lightModeButton:GetToggleState()
            options:SetToLightMode()
        else
            options:SetToDarkMode()
        end
    end

    action Load
        Credentials credentials = options:GetPassword(options:QUORUM_WEBSITE_PASSWORD_KEY)
        if credentials not= undefined
            usernameTeams:SetText(credentials:GetUsername())
            passwordTeams:SetText(credentials:GetPassword())
        end
        if options:IsLightMode()
            lightModeButton:SetToggleState(true)
        else
            darkModeButton:SetToggleState(true)
        end
        
    end

    action IsInitialized returns boolean
        return initialized
    end

    private action CreateLoginTab returns Tab
        Tab tab
        tab:SetFocusTarget(usernameTeams)
        tab:SetName("Properties")
        tab:DisplayCloseButton(false)

        Control panel
        panel:SetPercentageWidth(1.0)
        panel:SetVerticalLayoutMode(panel:FIT_CONTENTS)

        ControlShaderView view
        view:Initialize()
        panel:SetView2D(view)

        FlowLayout layout
        panel:SetLayout(layout)
        tab:SetRelatedItem(panel)

        

        FlowLayout resourcesLayout
        Control resourcesContainer
        resourcesContainer:SetLayout(resourcesLayout)
        resourcesContainer:SetPercentageWidth(1.0)
        resourcesContainer:SetPixelWidth(-10)
        resourcesContainer:SetVerticalLayoutMode(resourcesContainer:FIT_CONTENTS)
        resourcesContainer:SetLeftPadding(10)
        resourcesContainer:SetTopPadding(10)

        

        Label versionControlLabel
        versionControlLabel:SetPercentageWidth(1.0)
        versionControlLabel:SetSize(20)
        versionControlLabel:SetText("Quorum Login")
        versionControlLabel:SetLeftPadding(10)
        versionControlLabel:SetTopPadding(20)
        panel:Add(versionControlLabel)
        panel:Add(resourcesContainer)


        Label usernameLabel
        usernameLabel:SetText("Username")
        usernameLabel:SetPercentageWidth(1.0)
        usernameLabel:SetLeftPadding(10)
        usernameLabel:SetTopPadding(10)
        resourcesContainer:Add(usernameLabel)

        emptyTextFieldBehavior:SetTextField(usernameTeams)

        usernameTeams:SetName("Username Textfield")
        usernameTeams:SetPercentageWidth(1.0)
        usernameTeams:SetPixelWidth(-10)
        usernameTeams:SetLeftPadding(10)
        usernameTeams:SetTopPadding(10)
        resourcesContainer:Add(usernameTeams)

        Label androidLabel
        androidLabel:SetText("Password")
        androidLabel:SetLeftPadding(10)
        androidLabel:SetTopPadding(10)
        resourcesContainer:Add(androidLabel)

        passwordTeams:SetName("Password Textfield")
        passwordTeams:SetPercentageWidth(1.0)
        passwordTeams:SetPixelWidth(-10)
        passwordTeams:SetLeftPadding(10)
        passwordTeams:SetTopPadding(10)
        resourcesContainer:Add(passwordTeams)

        Control newLine
        newLine:SetHorizontalLayoutMode(newLine:FILL)
        panel:Add(newLine)

        Control confirmArea
        FlowLayout confirmLayout
        confirmArea:SetLayout(confirmLayout)
        confirmArea:SetPercentageWidth(1.0)
        confirmArea:SetTopPadding(20)
        confirmArea:SetVerticalLayoutMode(confirmArea:FIT_CONTENTS)

        Control confirmPadding
        confirmPadding:SetPercentageWidth(0.56)
        confirmPadding:SetPixelHeight(1)
        confirmArea:Add(confirmPadding)

        Label colorModeLabel
        colorModeLabel:SetPercentageWidth(1.0)
        colorModeLabel:SetSize(20)
        colorModeLabel:SetText("Color Mode (requires restart)")
        colorModeLabel:SetLeftPadding(10)
        colorModeLabel:SetTopPadding(20)
        colorModeLabel:SetFocusable(true)
        panel:Add(colorModeLabel)
        

        ButtonGroup projectRadios
        projectRadios:SetName("Color Mode")
        projectRadios:SetFocusable(true)
        projectRadios:SetHorizontalLayoutMode(parent:Libraries.Interface.Controls.Control:STANDARD)
        projectRadios:SetTopPadding(10)
        projectRadios:SetBottomPadding(20)
        projectRadios:SetLeftPadding(10)
        projectRadios:SetRightPadding(10)
        projectRadios:SetPercentageWidth(1.0)

        lightModeButton:SetName("Light")
        lightModeButton:SetFontSize(14)
        lightModeButton:SetRightPadding(30)
        projectRadios:Add(lightModeButton)

        darkModeButton:SetName("Dark")
        darkModeButton:SetFontSize(14)
        darkModeButton:SetRightPadding(30)
        projectRadios:Add(darkModeButton)

        confirmArea:Add(projectRadios)

        Button cancelButton
        cancelButton:SetName("Cancel")
        cancelButton:SetHorizontalLayoutMode(cancelButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        cancelButton:SetPercentageWidth(0.2)
        cancelButton:SetLeftPadding(0)
        cancelButton:SetTopPadding(40)
        cancelButton:SetBottomPadding(20)
        cancelButton:SetBehavior(cancelBehavior)
        confirmArea:Add(cancelButton)

        Button okayButton
        okayButton:SetName("OK")
        okayButton:SetHorizontalLayoutMode(okayButton:parent:Libraries.Interface.Controls.Control:STANDARD)
        okayButton:SetInterfaceOptionsKey("DialogAcceptButton")
        okayButton:SetPercentageWidth(0.2)
        okayButton:SetLeftPadding(10)
        okayButton:SetTopPadding(40)
        okayButton:SetBottomPadding(20)
        okayButton:SetBehavior(okBehavior)
        confirmArea:Add(okayButton)

        panel:Add(confirmArea)

        usernameTeams:SetNextFocus(passwordTeams)
        usernameTeams:SetPreviousFocus(okayButton)
        passwordTeams:SetNextFocus(colorModeLabel)
        passwordTeams:SetPreviousFocus(usernameTeams)

        colorModeLabel:SetNextFocus(projectRadios)
        colorModeLabel:SetPreviousFocus(passwordTeams)

        projectRadios:SetNextFocus(cancelButton)
        projectRadios:SetPreviousFocus(colorModeLabel)

        cancelButton:SetNextFocus(okayButton)
        cancelButton:SetPreviousFocus(projectRadios)
        okayButton:SetNextFocus(usernameTeams)
        okayButton:SetPreviousFocus(cancelButton)

        return tab
    end

    action OnHide()
    end
end