package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Game.Graphics.Label
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Controls.ProgressBar
use Libraries.Language.Compile.Library

use Libraries.Language.Compile.CompilerListener
use Libraries.Interface.AccessibilityManager
use Libraries.Development.Environment.Studio.QuorumStudio

class SplashScreen is Dialog, CompilerListener
    boolean initialized = false
    //Label loading = undefined
    //GameStateManager manager
    Icon logo
    Label studio
    Label loading
    ProgressBar progress
    Library library = undefined
    number currentPercent = 0
    GameStateManager manager

    on create
        SetModal(true)
        SetTopBarVisible(false)
    end

    action UpdatePercentageComplete(number percent)
        currentPercent = percent
    end

    action UpdateLabel(text label)
        text result = ""
        if label = "Started Scanning"
            result = "Taking the Upside Down to Prom"
        elseif label = "Parsing"
            result = "Trolling Internet Trolls"
        elseif label = "Type Checking"
            result = "Watching Robots do Standup"
        elseif label = "Semantic Analysis"
            result = "Harvesting Garden Gnomes"
        elseif label = "All done!"
            result = "Ironing Baby Yoda"
        end
        AccessibilityManager access = manager:GetAccessibilityManager()
        if access not= undefined
            access:Notify(me, result)
        end
        
        loading:SetText(result)
    end

    action Initialize
        if initialized
            output "WARNING: Re-initializing the FindDialog."
        end

        initialized = true

        SetName("Loading Screen for Quorum Studio")
        SetPixelWidth(400)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)

        LabelBoxView view
        Color color
        view:SetBorderThickness(1)
        view:SetBorderStyle(view:ALL)
        view:Initialize(color:CustomColor(0.9, 0.9, 0.9, 1), color:Black())
        
        logo:Load("Resources/Graphics/Interface/Quorum.png")

        LayoutProperties properties
        Control panel
        FlowLayout findLayout
        logo:SetPercentageHeight(0.75)
        logo:SetPercentageWidth(logo:GetWidth()/ logo:GetHeight())
        logo:SetHorizontalLayoutMode (properties:MAINTAIN_ASPECT_RATIO)
        logo:SetLeftPadding(40)
        logo:SetTopPadding(50)

        QuorumStudio qs = cast(QuorumStudio, manager:GetGame())

        studio:SetText("Quorum Studio " + qs:VERSION)
        studio:SetFontSize(20)
        studio:SetTopPadding(85)
        studio:SetLeftPadding(40)
        loading:SetText("Loading ...")
        loading:SetLeftPadding(270)
        loading:SetTopPadding(-70)
        panel:SetLayout(findLayout)
        panel:SetPercentageWidth(1.0)
        panel:SetPixelHeight(140)
        panel:SetBorderColor(color:Black())
        panel:SetBorderThickness(1)
        panel:Add(logo)

        panel:Add(progress)
        panel:Add(studio)
        panel:Add(loading)
        panel:SetView2D(view)
        Add(panel)
        progress:SetFocusable(true)
       
        
    end

    action OnShow
        progress:Focus()
    end

    action Update(number seconds)
        logo:Rotate(seconds * 90)
        progress:SetValue(currentPercent)
        loading:SetX(studio:GetX())
    end

    action GetLibrary returns Library
        return library
    end

    action SetLibrary(Library library)
        me:library = library
        library:AddListener(me)
    end
end