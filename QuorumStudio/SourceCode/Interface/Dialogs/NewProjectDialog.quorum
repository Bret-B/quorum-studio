package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Controls.TextField
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Controls.Button
use Libraries.Development.Environment.Studio.Behaviors.DialogCancelBehavior
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Studio.Behaviors.NewProjectBrowseBehavior
use Libraries.System.File
use Libraries.Development.Environment.Studio.Behaviors.NewProjectOkBehavior
use Libraries.Development.Environment.Projects.Quorum.QuorumProject
use Libraries.Development.Environment.Resources
use Libraries.Game.Graphics.Font
use Libraries.Game.GameStateManager
use Libraries.Interface.Options.InterfaceOptions
use Libraries.Interface.Controls.TabPane
use Libraries.Interface.Controls.Tab
use Libraries.Interface.Pages.StackedRowPage
use Libraries.Interface.Forms.Banner
use Libraries.Interface.Controls.ButtonGroup
use Libraries.Interface.Forms.Grouping
use Libraries.Game.Game
use Libraries.Interface.Controls.ToggleButton
use Libraries.Development.Environment.Studio.Behaviors.NewProjectToggleButtonBehavior
use Libraries.Containers.HashTable
use Libraries.Interface.Forms.Page
use Libraries.Interface.Events.SelectionListener
use Libraries.Interface.Events.SelectionEvent

class NewProjectDialog is Dialog, SelectionListener
    boolean initialized = false
    GameStateManager gameManager
    TabPane tabPane
    QuorumStudio studio = cast(QuorumStudio, gameManager:GetGame())
    Font fontAwesome
    Resources resources
    HashTable<text, text> templateHash

    constant text CONSOLE = "Console"
    constant text APP = "App"
    constant text GAMES = "Game"
    constant text SCENE = "Scene"
    constant text MOBILE = "Mobile"
    constant text IMAGE_SHEET = "Image Sheet"
    constant text PHYSICS2D = "2D Physics"
    constant text PHYSICS3D = "3D Physics"
    constant text SKYBOX = "Skybox"
    constant text SCENE2D = "2D Scene"
    constant text SCENE3D = "3D Scene"
    constant text BAR_CHART = "Bar Chart"
    constant text PIE_CHART = "Pie Chart"
    constant text SCATTERPLOT = "Scatterplot"
    constant text DESCRIPTIVES = "Descriptive Statistics"
    constant text CORRELATIONS = "Correlations"
    constant text COMPARE_MEANS = "Compare Means"
    constant text PLAY_SOUND = "Play Sound"
    constant text SINE_WAVE = "Sine Wave"
    constant text MIDI = "MIDI"
    constant text DATABASE = "Database"
    constant text LEGO_MINDSTORMS = "Lego"
    constant text DOCUMENT = "Document"
    constant text INTERNET_SERVICE = "Internet Service"
    
    //Dialog Controls
    TextField nameField = undefined
    TextField locationField = undefined
    Button cancelButton = undefined

    // Names for the nameField and locationField
    constant text NAME_FIELD_ID = "Name"
    constant text LOCATION_FIELD_ID = "Location"

    //Dialog Behaviors
    DialogCancelBehavior cancelBehavior
    NewProjectBrowseBehavior browseBehavior
    NewProjectOkBehavior okBehavior
    text selectedProject = ""
    
    //set by the browseBehavior, used by the okayBehavior to set the QuorumProject location
    File locationPath
    //set to blank application template by default. Changes based on user's application selection in the dialog
    text templatePath = "Templates/New/Blank" 

    on create
        File file
        file:SetPath("Resources/Fonts/Font Awesome 6 Free-Solid-900.otf")
        fontAwesome:LoadFont(file)

        browseBehavior:SetDialog(me)
        browseBehavior:SetMainApplication(studio)
        cancelBehavior:SetDialog(me)
        okBehavior:SetDialog(me)
        okBehavior:SetMainApplication(studio)
        SetBehavior(okBehavior)

        SetVerticalLayoutMode(parent:Control:STANDARD)
    end

    action Initialize
        initialized = true
        SetName("New Project Dialog")
        SetPercentageWidth(0.50)
        SetPercentageHeight(0.75)

        FlowLayout tabLayout
        tabPane:SetViewAreaLayout(tabLayout)
        tabPane:SetPercentageWidth(1.0)
        tabPane:AddSelectionListener(me)
        tabPane:SetVerticalLayoutMode(parent:Control:FILL)

        tabPane:Add(CreateGeneralTab())
        tabPane:Add(CreateGamesTab())
        tabPane:Add(CreateDataScienceTab())
        tabPane:Add(CreateSoundTab())
        tabPane:Add(CreateOtherTab())
        Add(tabPane)

        PrepareTemplateHash()
    end

    action SelectionChanged(SelectionEvent selection)
        // Get the currently selected Page from the Tabs
        Tab tab = tabPane:GetSelectedTab()

        /*
        During selection, first the old tab is deselected, and there's a brief
        period where there's no selected tab. We only care when a new tab becomes
        selected, so ignore the empty case.
        */
        if tab = undefined
            return now
        end

        Page page = cast(Page, tab:GetRelatedItem())

        // Get the fields from the new page. They all share the same name but are across different pages.
        TextField newNameField = page:GetTextField(NAME_FIELD_ID)
        TextField newLocationField = page:GetTextField(LOCATION_FIELD_ID)

        // Update the text of the fields to match the previous ones, if we had a previous selection
        if nameField not= undefined
            newNameField:SetText(nameField:GetText())
        end

        if locationField not= undefined
            newLocationField:SetText(locationField:GetText())
        end

        // Make sure we store the current fields for future updates and retrieving info when the project is created.
        nameField = newNameField
        locationField = newLocationField
    end

    /*
        Compares the location of any template project on the system
    */
    action PrepareTemplateHash
        templateHash:Add(CONSOLE,"Templates/New/Blank")
        templateHash:Add(APP,"Templates/New/Form")
        templateHash:Add(GAMES,"Templates/New/Game")
        templateHash:Add(SCENE,"Templates/Scenes/Blank")
        templateHash:Add(MOBILE,"Templates/New/Mobile")
        templateHash:Add(IMAGE_SHEET,"Templates/Other/ImageSheets")
        templateHash:Add(PHYSICS2D,"Templates/Other/Physics2D")
        templateHash:Add(PHYSICS3D,"Templates/Other/Physics3D")
        templateHash:Add(SKYBOX,"Templates/Other/Skybox")
        templateHash:Add(SCENE2D,"Templates/Scenes/Blank")
        templateHash:Add(SCENE3D,"Templates/Scenes/Scene3D")
        templateHash:Add(BAR_CHART,"Templates/New/BarChart")
        templateHash:Add(PIE_CHART,"Templates/New/PieChart")
        templateHash:Add(SCATTERPLOT,"Templates/New/Scatterplot")
        templateHash:Add(DESCRIPTIVES,"Templates/New/Descriptives")
        templateHash:Add(CORRELATIONS,"Templates/New/Correlations")
        templateHash:Add(COMPARE_MEANS,"Templates/New/CompareMeans")
        templateHash:Add(PLAY_SOUND,"Templates/Other/PlaySound")
        templateHash:Add(SINE_WAVE,"Templates/Other/SineWaves")
        templateHash:Add(MIDI,"Templates/Other/MIDI")
        templateHash:Add(DATABASE,"Templates/Other/Database")
        templateHash:Add(LEGO_MINDSTORMS,"Templates/New/Lego")
        templateHash:Add(DOCUMENT,"Templates/Other/Document")
        templateHash:Add(INTERNET_SERVICE,"Templates/Other/InternetServices")
    end

    private action SetButtonTextToAwesomeFontUnicode(integer unicode, Button button)
        text value = ""
        value = value:GetUnicodeValue(unicode)

        button:SetFontSize(50)
        button:SetFont(fontAwesome)
        button:SetLabelText(value)
    end

    /*
    This adds the common set of elements to the bottom of a page:
    the file name and location fields, browse button, and confirm
    and cancel buttons.
    */
    private action AddBottomPageElements(Page page)
        page:AddLabel("Project Name")
        TextField nameField = page:AddTextField(NAME_FIELD_ID)

        page:AddLabel("Project Location")
        Grouping locationGrouping = page:AddGrouping("Location")
        TextField locationField = locationGrouping:AddTextField(LOCATION_FIELD_ID)
        Button browseButton = locationGrouping:AddButton("Browse...")

        Grouping buttonGroup = page:AddGrouping("Confirm")
        Button cancelButton = buttonGroup:AddButton("Cancel")
        Button okButton = buttonGroup:AddButton("Ok")
        buttonGroup:PositionFromBottom() //so it can be seen while the library is broken

        cancelButton:SetBehavior(cancelBehavior)
        okButton:SetBehavior(okBehavior)
    end

    private action CreateGeneralTab returns Tab
        Tab tab
        tab:SetName("General")
        tab:DisplayCloseButton(false)

        StackedRowPage page 
//        page:SetPixelHeight(200) //for testing, remove after fixes
        Banner banner = page:AddBanner("General", 
            "A set of default projects to enjoy")
        banner:PositionFromTop()
        
        Grouping labels = page:AddGrouping("Labels")
        labels:AddLabel(CONSOLE)
        labels:AddLabel(APP)
        labels:AddLabel(GAMES)
        
        Grouping appsGrouping = page:AddGrouping("Buttons")
        ToggleButton button1 = appsGrouping:AddToggleButton(CONSOLE)
        ToggleButton button2 = appsGrouping:AddToggleButton(APP)
        ToggleButton button3 = appsGrouping:AddToggleButton(GAMES)

        Grouping labels2 = page:AddGrouping("Labels2")
        labels2:AddLabel(SCENE)
        labels2:AddLabel("Mobile")

        Grouping appsGrouping2 = page:AddGrouping("Buttons2")
        ToggleButton button4 = appsGrouping2:AddToggleButton(SCENE)
        ToggleButton button5 = appsGrouping2:AddToggleButton(MOBILE)

        //set displays to icons
        SetButtonTextToAwesomeFontUnicode(61728, button1)
        SetButtonTextToAwesomeFontUnicode(58772, button2)
        SetButtonTextToAwesomeFontUnicode(61723, button3)
        SetButtonTextToAwesomeFontUnicode(63193, button4)
        SetButtonTextToAwesomeFontUnicode(62415, button5)

        NewProjectToggleButtonBehavior toggleBehavior
        toggleBehavior:SetDialog(me)
        button1:SetBehavior(toggleBehavior)
        button2:SetBehavior(toggleBehavior)
        button3:SetBehavior(toggleBehavior)
        button4:SetBehavior(toggleBehavior)
        button5:SetBehavior(toggleBehavior)

        // Add the fields and buttons at the bottom of the page
        AddBottomPageElements(page)

        tab:SetRelatedItem(page)

        return tab
    end
    
    private action CreateGamesTab returns Tab
        Tab tab
        tab:SetName("Games")
        tab:DisplayCloseButton(false)

        StackedRowPage page 
//        page:SetPixelHeight(400) //for testing, remove after fixes
        Banner banner = page:AddBanner("Games", 
            "Create games for your desktop, web, or mobile device")
        banner:PositionFromTop()
        
        Grouping labels = page:AddGrouping("Labels")
        labels:AddLabel(IMAGE_SHEET)
        labels:AddLabel(PHYSICS2D)
        labels:AddLabel(PHYSICS3D)
        
        Grouping appsGrouping = page:AddGrouping("Buttons")
        ToggleButton button1 = appsGrouping:AddToggleButton(IMAGE_SHEET)
        ToggleButton button2 = appsGrouping:AddToggleButton(PHYSICS2D)
        ToggleButton button3 = appsGrouping:AddToggleButton(PHYSICS3D)

        Grouping labels2 = page:AddGrouping("Labels2")
        labels2:AddLabel(SKYBOX)
        labels2:AddLabel(SCENE2D)
        labels2:AddLabel(SCENE3D)

        Grouping appsGrouping2 = page:AddGrouping("Buttons2")
        ToggleButton button4 = appsGrouping2:AddToggleButton(SKYBOX)
        ToggleButton button5 = appsGrouping2:AddToggleButton(SCENE2D)
        ToggleButton button6 = appsGrouping2:AddToggleButton(SCENE3D)

        //set displays to icons
        SetButtonTextToAwesomeFontUnicode(62210, button1)
        SetButtonTextToAwesomeFontUnicode(58062, button2)
        SetButtonTextToAwesomeFontUnicode(61874, button3)
        SetButtonTextToAwesomeFontUnicode(63055, button4)
        SetButtonTextToAwesomeFontUnicode(63202, button5)
        SetButtonTextToAwesomeFontUnicode(61875, button6)

        NewProjectToggleButtonBehavior toggleBehavior
        toggleBehavior:SetDialog(me)
        button1:SetBehavior(toggleBehavior)
        button2:SetBehavior(toggleBehavior)
        button3:SetBehavior(toggleBehavior)
        button4:SetBehavior(toggleBehavior)
        button5:SetBehavior(toggleBehavior)
        button6:SetBehavior(toggleBehavior)

        // Add the fields and buttons at the bottom of the page
        AddBottomPageElements(page)

        tab:SetRelatedItem(page)

        return tab
    end

    private action CreateDataScienceTab returns Tab
        Tab tab
        tab:SetName("Data Science")
        tab:DisplayCloseButton(false)

        StackedRowPage page
        Banner banner = page:AddBanner("Data Science", 
            "Make charts, play with data, or test your hypotheses")
        banner:PositionFromTop()
        
        Grouping labels = page:AddGrouping("Labels")
        labels:AddLabel(BAR_CHART)
        labels:AddLabel(PIE_CHART)
        labels:AddLabel(SCATTERPLOT)
        
        Grouping appsGrouping = page:AddGrouping("Buttons")
        ToggleButton button1 = appsGrouping:AddToggleButton(BAR_CHART)
        ToggleButton button2 = appsGrouping:AddToggleButton(PIE_CHART)
        ToggleButton button3 = appsGrouping:AddToggleButton(SCATTERPLOT)

        Grouping labels2 = page:AddGrouping("Labels2")
        labels2:AddLabel(DESCRIPTIVES)
        labels2:AddLabel(CORRELATIONS)
        labels2:AddLabel(COMPARE_MEANS)

        Grouping appsGrouping2 = page:AddGrouping("Buttons2")
        ToggleButton button4 = appsGrouping2:AddToggleButton(DESCRIPTIVES)
        ToggleButton button5 = appsGrouping2:AddToggleButton(CORRELATIONS)
        ToggleButton button6 = appsGrouping2:AddToggleButton(COMPARE_MEANS)

        //set displays to icons
        SetButtonTextToAwesomeFontUnicode(58483, button1)
        SetButtonTextToAwesomeFontUnicode(61952, button2)
        SetButtonTextToAwesomeFontUnicode(61953, button3)
        SetButtonTextToAwesomeFontUnicode(58658, button4)
        SetButtonTextToAwesomeFontUnicode(61646, button5)
        SetButtonTextToAwesomeFontUnicode(62782, button6)

        NewProjectToggleButtonBehavior toggleBehavior
        toggleBehavior:SetDialog(me)
        button1:SetBehavior(toggleBehavior)
        button2:SetBehavior(toggleBehavior)
        button3:SetBehavior(toggleBehavior)
        button4:SetBehavior(toggleBehavior)
        button5:SetBehavior(toggleBehavior)
        button6:SetBehavior(toggleBehavior)

        // Add the fields and buttons at the bottom of the page
        AddBottomPageElements(page)

        tab:SetRelatedItem(page)

        return tab
    end

    private action CreateSoundTab returns Tab
        Tab tab
        tab:SetName("Sound")
        tab:DisplayCloseButton(false)

        StackedRowPage page
        Banner banner = page:AddBanner("Sound", 
            "Sound it out with files or digital signal processing")
        banner:PositionFromTop()
        
        Grouping labels = page:AddGrouping("Labels")
        labels:AddLabel(PLAY_SOUND)
        labels:AddLabel(SINE_WAVE)
        labels:AddLabel(MIDI)

        
        Grouping appsGrouping = page:AddGrouping("Buttons")
        ToggleButton button1 = appsGrouping:AddToggleButton(PLAY_SOUND)
        ToggleButton button2 = appsGrouping:AddToggleButton(SINE_WAVE)
        ToggleButton button3 = appsGrouping:AddToggleButton(MIDI)

        //set displays to icons
        SetButtonTextToAwesomeFontUnicode(61764, button1)
        SetButtonTextToAwesomeFontUnicode(63550, button2)
        SetButtonTextToAwesomeFontUnicode(61441, button3)

        NewProjectToggleButtonBehavior toggleBehavior
        toggleBehavior:SetDialog(me)
        button1:SetBehavior(toggleBehavior)
        button2:SetBehavior(toggleBehavior)
        button3:SetBehavior(toggleBehavior)

        // Add the fields and buttons at the bottom of the page
        AddBottomPageElements(page)

        tab:SetRelatedItem(page)

        return tab
    end

    private action CreateOtherTab returns Tab
        Tab tab
        tab:SetName("Other")
        tab:DisplayCloseButton(false)

        StackedRowPage page
        Banner banner = page:AddBanner("Other Projects", 
            "Other fun ideas for Quorum projects")
        banner:PositionFromTop()
        
        Grouping labels = page:AddGrouping("Labels")
        labels:AddLabel(DATABASE)
        labels:AddLabel(LEGO_MINDSTORMS)
        labels:AddLabel(DOCUMENT)
        labels:AddLabel(INTERNET_SERVICE)

        
        Grouping appsGrouping = page:AddGrouping("Buttons")
        ToggleButton button1 = appsGrouping:AddToggleButton(DATABASE)
        ToggleButton button2 = appsGrouping:AddToggleButton(LEGO_MINDSTORMS)
        ToggleButton button3 = appsGrouping:AddToggleButton(DOCUMENT)
        ToggleButton button4 = appsGrouping:AddToggleButton(INTERNET_SERVICE)

        //set displays to icons
        SetButtonTextToAwesomeFontUnicode(61888, button1)
        SetButtonTextToAwesomeFontUnicode(58762, button2)
        SetButtonTextToAwesomeFontUnicode(61485, button3)
        SetButtonTextToAwesomeFontUnicode(63231, button4)

        NewProjectToggleButtonBehavior toggleBehavior
        toggleBehavior:SetDialog(me)
        button1:SetBehavior(toggleBehavior)
        button2:SetBehavior(toggleBehavior)
        button3:SetBehavior(toggleBehavior)
        button4:SetBehavior(toggleBehavior)

        // Add the fields and buttons at the bottom of the page
        AddBottomPageElements(page)

        tab:SetRelatedItem(page)

        return tab
    end

    action GetLocation returns text
        return locationField:GetText()
    end

    action ActivateCancelButton()
        cancelButton:Activate()
    end

    action SetLocation(File file)
        locationPath = file
        UpdateLocationName(file:GetAbsolutePath())
    end

    private action UpdateLocationName(text location)
        locationField:SetText(location)
    end

    action CreateNewProject returns QuorumProject
        QuorumProject project
        
        File file
        File projectPath    //new project path 
        File template       //template to copy from
        File newProjectFolderLocation   
        //template folders containing the files that need to be copied into the new project
        //dependent on the type of application chosen by the user
        template:SetPath(templatePath)  //sets the template of the user defined application            
        
        text path = locationField:GetText():Trim() + "/" + nameField:GetText():Trim() + "/Main.quorum"
        file:SetAbsolutePath(path)
        if file:GetParentDirectory():Exists()
            return undefined
        end
        project:SetLocation(file:GetParentDirectory())

        projectPath = project:GetLocation()
        text newProjectPath = projectPath:GetAbsolutePath()
        newProjectFolderLocation:SetWorkingDirectory(newProjectPath)
        boolean copySuccess = template:Copy(newProjectFolderLocation, true)
        
        project:SetName(nameField:GetText():Trim())

        File dad = newProjectFolderLocation:GetParentDirectory()
        if not dad:Exists()
            dad:CreateDirectories()
        end

        return project
    end
    
    action GetProjectName() returns text
        return nameField:GetText():Trim()
    end

    action OnHide
        nameField:Empty()
        locationField:Empty()
    end

    action OnShow
        tabPane:Focus()

        Tab tab = tabPane:GetSelectedTab()
        if not tab:Equals(tabPane:Get(0))
            tab:Activate()
        end

        locationField:SetText(studio:GetProjectsFolder():GetAbsolutePath())
    end

    action GetSelectedProject returns text
        return selectedProject
    end

    action SetSelectedProject(text selectedProject)
        templatePath = templateHash:GetValue(selectedProject)
        me:selectedProject = selectedProject
    end
end
