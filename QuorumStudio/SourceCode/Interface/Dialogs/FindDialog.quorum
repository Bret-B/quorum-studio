package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.Checkbox
use Libraries.Interface.Controls.Button
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Game.Graphics.Label
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Events.TextChangeListener
use Libraries.Interface.Selections.TextBoxSelection
use Libraries.Interface.Events.TextChangeEvent
use Libraries.Containers.Array
use Libraries.Containers.MultipleLineText
use Libraries.Interface.Controls.TextStyles.TextStyle
use Libraries.Containers.Support.Pair
use Libraries.Interface.Controls.TextStyles.ColoredHighlight
use Libraries.Development.Environment.Studio.Behaviors.WholeWordMatchCaseBehavior
use Libraries.Game.GameStateManager
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Containers.Iterator
use Libraries.Development.Environment.Studio.Behaviors.NextBehavior
use Libraries.Development.Environment.Studio.Behaviors.PreviousBehavior
use Libraries.Development.Environment.Studio.Behaviors.FindBehavior
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.InputTable
use Libraries.Game.InputSet

class FindDialog is Dialog, TextChangeListener
    boolean initialized = false
    boolean textChangeListenerOn = true

    GameStateManager gameManager
    QuorumStudio studio = cast(QuorumStudio, gameManager:GetGame())

    // The TextBox that we're searching through.
    CodeTextBox textBox = undefined

    //FindDialog Controls
    TextField findField
    Label matches
    Checkbox wholeWord
    Checkbox matchCase
    Button previous
    Button next  
    Button findButton

    //FindDialog Control Behaviors
    WholeWordMatchCaseBehavior wholeWordMatchCaseBehavior
    //PreviousBehavior previousBehavior
    //NextBehavior nextBehavior
    FindBehavior findBehavior
    

    on create
        findField:AddTextChangeListener(me)
        wholeWordMatchCaseBehavior:SetDialog(cast(Dialog, me))
        wholeWordMatchCaseBehavior:SetDialogType(wholeWordMatchCaseBehavior:FIND)
        //previousBehavior:SetDialog(me)
        //nextBehavior:SetDialog(me)
        findBehavior:SetDialog(me)
        SetModal(false)
        //SetBehavior(nextBehavior)
    end

    action OnShow()
        findField:Focus()
        wholeWord:SetToggleState(textBox:GetIsWholeWord())
        matchCase:SetToggleState(textBox:GetIsMatchCase())
        findField:SetText(textBox:GetFindWord())
        textBox:SetIsDialogOpen(true)
        if findField:GetText() not= ""
            findButton:Activate()
        end
    end

    action Initialize

        initialized = true

        SetName("Find")
        SetPixelWidth(300)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)

        LabelBoxView view
        Color color
        view:SetBorderThickness(1)
        view:SetBorderStyle(view:ALL - view:TOP)
        view:Initialize(color:CustomColor(0.9, 0.9, 0.9, 1), color:Black())
        
        Control panel
        FlowLayout findLayout
        panel:SetLayout(findLayout)
        panel:SetPercentageWidth(1.0)
        panel:SetPixelHeight(140)
        panel:SetBorderColor(color:Black())
        panel:SetBorderThickness(1)
        panel:Add(CreateFindControl())
        panel:Add(CreateMatchesControl())
        panel:SetView2D(view)
        Add(panel)
    end

    private action CreateFindControl returns Control
        Color color
        Control createFindContainer
        FlowLayout createFindLayout
        createFindContainer:SetLayout(createFindLayout)
        createFindContainer:SetBorderThickness(1)
        createFindContainer:SetBorderColor(color:Black())
        createFindContainer:SetPercentageWidth(1.0)
        createFindContainer:SetVerticalLayoutMode(createFindContainer:FIT_CONTENTS)

        FlowLayout findLayout
        Control findContainer
        findContainer:SetLayout(findLayout)
        findContainer:SetPercentageWidth(1.0)
        findContainer:SetVerticalLayoutMode(findContainer:FIT_CONTENTS)
        findContainer:SetLeftPadding(20)
        findContainer:SetTopPadding(20)
        findContainer:SetRightPadding(30)

        Label findLabel
        findLabel:SetText("Find:")
        findLabel:SetRightPadding(10)
        findContainer:Add(findLabel)
        
        findField:SetHorizontalLayoutMode(findField:parent:Libraries.Interface.Controls.Control:FILL)
        findField:SetName("Find")
        findField:SetText("")
        findField:SetFocusable(true)
        findField:SetNextFocus(wholeWord)
        findField:SetPreviousFocus(next)
        findButton:SetBehavior(findBehavior)
        findContainer:Add(findField)

        createFindContainer:Add(findContainer)

        FlowLayout optionsLayout
        Control optionsContainer
        optionsContainer:SetLayout(optionsLayout)
        optionsContainer:SetPercentageWidth(1.0)
        optionsContainer:SetHorizontalLayoutMode(optionsContainer:STANDARD)
        optionsContainer:SetVerticalLayoutMode(optionsContainer:FIT_CONTENTS)
        optionsContainer:SetLeftPadding(10)
        optionsContainer:SetRightPadding(10)
        optionsContainer:SetTopPadding(30)
        
        wholeWord:SetName("Whole Word")
        wholeWord:SetFontSize(14)
        wholeWord:SetLeftPadding(6)
        wholeWord:SetRightPadding(6)
        wholeWord:SetPercentageWidth(0.5)
        wholeWord:SetFocusable(true)
        wholeWord:SetNextFocus(matchCase)
        wholeWord:SetPreviousFocus(findField)
        wholeWord:SetBehavior(wholeWordMatchCaseBehavior)
        optionsContainer:Add(wholeWord)

        Control buttonsPadding
        buttonsPadding:SetPercentageWidth(0.15)
        buttonsPadding:SetPixelHeight(1)
        optionsContainer:Add(buttonsPadding)

        previous:SetName("Previous")
        previous:SetFontSize(14)
        previous:SetRightPadding(6)
        previous:SetLeftPadding(6)
        previous:SetHorizontalLayoutMode(previous:parent:Libraries.Interface.Controls.Control:STANDARD)
        previous:SetPercentageWidth(0.22)
        previous:SetFocusable(true)
        previous:SetNextFocus(next)
        previous:SetPreviousFocus(matchCase)
        //previous:SetBehavior(previousBehavior)
        optionsContainer:Add(previous)
        
        next:SetName("Next")
        next:SetFontSize(14)
        next:SetRightPadding(6)
        next:SetLeftPadding(6)
        next:SetHorizontalLayoutMode(next:parent:Libraries.Interface.Controls.Control:STANDARD)
        next:SetPercentageWidth(0.22)
        next:SetFocusable(true)
        next:SetNextFocus(findField)
        next:SetPreviousFocus(previous)
        //next:SetBehavior(nextBehavior)
        optionsContainer:Add(next)

        matchCase:SetName("Match Case")
        matchCase:SetFontSize(14)
        matchCase:SetLeftPadding(6)
        matchCase:SetPercentageWidth(0.5)
        matchCase:SetFocusable(true)
        matchCase:SetNextFocus(previous)
        matchCase:SetPreviousFocus(wholeWord)
        matchCase:SetBehavior(wholeWordMatchCaseBehavior)
        optionsContainer:Add(matchCase)

        createFindContainer:Add(optionsContainer)

//        //Should be "ALT + N" (until ALT key works correctly using the same hotkey as the CodeTextBox)
//        KeyboardEvent keys
//        text inputGroup = GetInputGroup()
//        InputTable dialogInputs = studio:GetInputTable(inputGroup)
//        InputSet nextSet 
//        nextSet:SetKeyboardInput(keys:F3)
//        nextSet:AddModifier(nextSet:META)
//        dialogInputs:Add(nextSet, nextBehavior)
//        //Should be "ALT + P" (until ALT key works correctly using the same hotkey as the CodeTextBox)
//        InputSet previousSet
//        previousSet:SetKeyboardInput(keys:F3)
//        previousSet:AddModifier(previousSet:META)
//        previousSet:AddModifier(previousSet:SHIFT)
//        dialogInputs:Add(previousSet, previousBehavior)

        return createFindContainer
    end

    private action CreateMatchesControl returns Control
        FlowLayout matchesLayout
        Control matchesContainer
        matchesContainer:SetLayout(matchesLayout)
        matchesContainer:SetPercentageWidth(1.0)
        matchesContainer:SetVerticalLayoutMode(matchesContainer:FIT_CONTENTS)
        matchesContainer:SetTopPadding(50)
        matchesContainer:SetRightPadding(10)
        matchesContainer:SetLeftPadding(20)

        Label label
        label:SetText("")
        label:SetHorizontalLayoutMode(label:parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)
        label:SetPercentageWidth(0.2)
        label:SetPixelHeight(20)
        label:SetLeftPadding(6)
        label:SetRightPadding(30)
        matchesContainer:Add(label)
        SetMatchesLabel(label)
        return matchesContainer
        
    end

    action IsInitialized returns boolean
        return initialized
    end

    action Show
        if textBox not= undefined
            LayoutProperties properties = GetDefaultLayoutProperties()
            properties:SetPercentageX(0)
            properties:SetPercentageY(0)
            properties:SetPercentageOriginX(1)
            properties:SetPercentageOriginY(1)
            properties:SetPixelX(textBox:GetGlobalX() + textBox:GetWidth() - 20)
            properties:SetPixelY(textBox:GetGlobalY() + textBox:GetHeight() - 39)
        end
        parent:Dialog:Show()
    end


    action SetTextBox(CodeTextBox code)
        textBox = code
        textBox:AddTextChangeListener(me)
        //still need to set textChange listener to off/on when replacing
        findBehavior:SetTextBox(textBox)
        //textBox:SetPreviousBehavior(previousBehavior)
        //textBox:SetNextBehavior(nextBehavior)
        textBox:SetDialog(me)
        wholeWordMatchCaseBehavior:SetTextBox(textBox)
        previous:SetBehavior(textBox:GetPreviousBehavior())
        next:SetBehavior(textBox:GetNextBehavior())     
    end

    action GetTextBox returns CodeTextBox
        return textBox
    end

    action GetFindWord() returns text
        return findField:GetText()
    end

    action GetIsMatchCase returns boolean
        return matchCase:GetToggleState()
    end

    action GetIsWholeWord returns boolean
        return wholeWord:GetToggleState()
    end

    action SetTextChangeListenerOn(boolean state)
        textChangeListenerOn = state
    end

    action GetTextChangeListenerOn returns boolean
        return textChangeListenerOn
    end

    action SetMatchesLabel(Label label)
        matches = label
    end

    action GetMatchesLabel returns Label
        return matches
    end

    //Updates the matches label on the Dialog to reflect how many instances of 
    //"find" were found in the textBox. If there is a currentSelection it will also 
    //display the selection number in relation to the number of total matches found.
    action UpdateMatches(integer currentSelection, integer totalMatches)
        //if findField:GetText() not= ""
        //if textBox:GetFindWord() not= ""
            if totalMatches = 0
                matches:SetText("No matches")
            elseif totalMatches = 1
                matches:SetText(cast(text, totalMatches) + " match")
            else
                if currentSelection >= 0
                    matches:SetText(cast(text, (currentSelection + 1)) + " of " + cast(text, totalMatches) + " matches")
                else
                    matches:SetText(cast(text, totalMatches) + " matches")
                end
            end
        //else 
            //matches:SetText("") 
        //end
    end


    //repopulates the highlighting for any remaining instances that were not replaced by calling FindText (not currently working)
    action UpdateTextBox()
        //textValue = textBox:GetText()
        findButton:Activate()
    end
    //Listens for text change within the findField and text change events in the 
    //current textBox that is being searched. Calls to update the selections if
    //there is a text change event that occurs in either field.
    action TextChanged(TextChangeEvent event)
        text find = ""
        if event:GetControl():Equals(cast(Object, findField))
            find = findField:GetText()
            if event:GetEventType() = event:ADDED
                if find not= ""
                    //FindText(find)
                    findButton:Activate()
                end
            elseif event:GetEventType() = event:DELETED
                findButton:Activate()
            elseif event:GetEventType() = event:MODIFIED
                if find not= ""
                    findButton:Activate()
                end
            end
        end

        if textBox not= undefined
            if event:GetControl():Equals(cast(Object, textBox))                
                if textChangeListenerOn
                    if event:GetEventType() = event:ADDED
                        UpdateTextBox()
                    elseif event:GetEventType() = event:DELETED
                        UpdateTextBox()
                    elseif event:GetEventType() = event:MODIFIED   
                        UpdateTextBox()
                    end
                end
            end
        end
    end

    //Removes any highlights in the textBox, empties the arrays and textFields and resets the selection index.
    action OnHide
        //textBox:RemoveFindReplaceStyles()
        textBox:SetFindWord(findField:GetText())
        textBox:SetIsDialogOpen(false)
        //RemoveSelections()
        //findField:Empty()
        //selection = -1
        //UpdateMatches()        
    end

end