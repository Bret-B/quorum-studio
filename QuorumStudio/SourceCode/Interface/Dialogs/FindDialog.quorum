package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Controls.TextField
use Libraries.Interface.Controls.Checkbox
use Libraries.Interface.Controls.Button
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Game.Graphics.Label
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Events.TextChangeListener
use Libraries.Interface.Selections.TextBoxSelection
use Libraries.Interface.Events.TextChangeEvent
use Libraries.Containers.Array
use Libraries.Containers.MultipleLineText
use Libraries.Interface.Controls.TextStyles.TextStyle
use Libraries.Containers.Support.Pair
use Libraries.Interface.Controls.TextStyles.ColoredHighlight
use Libraries.Development.Environment.Studio.Behaviors.WholeWordMatchCaseBehavior

class FindDialog is Dialog, TextChangeListener
    boolean initialized = false

    // The TextBox that we're searching through.
    CodeTextBox textBox = undefined

    Array<Pair<integer>> indices
    Array<Pair<integer>> removeIndices

    integer matchesCounter = 0

    text textValue = "" 

    //FindDialog Controls
    TextField findField
    Label matches
    Checkbox wholeWord
    Checkbox matchCase
    Button previous
    Button next  

    //FindDialog Control Behaviors
    WholeWordMatchCaseBehavior wholeWordMatchCaseBehavior
    

    on create
        findField:Focus()
        findField:AddTextChangeListener(me)
        wholeWordMatchCaseBehavior:SetDialog(cast(Dialog, me))
        wholeWordMatchCaseBehavior:SetDialogType("findDialog")
        SetModal(false)
    end

    action Initialize
        if initialized
            output "WARNING: Re-initializing the FindDialog."
        end

        initialized = true

        SetName("Find")
        SetPixelWidth(300)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)

        LabelBoxView view
        Color color
        view:SetBorderThickness(1)
        view:SetBorderStyle(view:ALL - view:TOP)
        view:Initialize(color:CustomColor(0.9, 0.9, 0.9, 1), color:Black())
        
        Control panel
        FlowLayout findLayout
        panel:SetLayout(findLayout)
        panel:SetPercentageWidth(1.0)
        panel:SetPixelHeight(140)
        panel:SetBorderColor(color:Black())
        panel:SetBorderThickness(1)
        panel:Add(CreateFindControl())
        panel:SetView2D(view)
        Add(panel)
    end

    private action CreateFindControl returns Control
        Color color
        Control createFindContainer
        FlowLayout createFindLayout
        createFindContainer:SetLayout(createFindLayout)
        createFindContainer:SetBorderThickness(1)
        createFindContainer:SetBorderColor(color:Black())
        createFindContainer:SetPercentageWidth(1.0)
        createFindContainer:SetVerticalLayoutMode(createFindContainer:FIT_CONTENTS)

        FlowLayout findLayout
        Control findContainer
        findContainer:SetLayout(findLayout)
        findContainer:SetPercentageWidth(1.0)
        findContainer:SetVerticalLayoutMode(findContainer:FIT_CONTENTS)
        findContainer:SetLeftPadding(20)
        findContainer:SetTopPadding(20)
        findContainer:SetRightPadding(30)

        Label findLabel
        findLabel:SetText("Find:")
        findLabel:SetRightPadding(10)
        findContainer:Add(findLabel)
        
        findField:SetHorizontalLayoutMode(findField:parent:Libraries.Interface.Controls.Control:FILL)
        findField:SetText("")
        findField:SetFocusable(true)
        findField:SetNextFocus(wholeWord)
        findField:SetPreviousFocus(next)
        findContainer:Add(findField)

        createFindContainer:Add(findContainer)

        FlowLayout optionsLayout
        Control optionsContainer
        optionsContainer:SetLayout(optionsLayout)
        optionsContainer:SetPercentageWidth(1.0)
        optionsContainer:SetHorizontalLayoutMode(optionsContainer:STANDARD)
        optionsContainer:SetVerticalLayoutMode(optionsContainer:FIT_CONTENTS)
        optionsContainer:SetLeftPadding(10)
        optionsContainer:SetRightPadding(10)
        optionsContainer:SetTopPadding(30)
        
        wholeWord:SetName("Whole Word")
        wholeWord:SetFontSize(14)
        wholeWord:SetLeftPadding(6)
        wholeWord:SetRightPadding(6)
        wholeWord:SetPercentageWidth(0.5)
        wholeWord:SetFocusable(true)
        wholeWord:SetNextFocus(matchCase)
        wholeWord:SetPreviousFocus(findField)
        wholeWord:SetBehavior(wholeWordMatchCaseBehavior)
        optionsContainer:Add(wholeWord)

        Control buttonsPadding
        buttonsPadding:SetPercentageWidth(0.15)
        buttonsPadding:SetPixelHeight(1)
        optionsContainer:Add(buttonsPadding)

        previous:SetName("Previous")
        previous:SetFontSize(14)
        previous:SetRightPadding(6)
        previous:SetLeftPadding(6)
        previous:SetHorizontalLayoutMode(previous:parent:Libraries.Interface.Controls.Control:STANDARD)
        previous:SetPercentageWidth(0.22)
        previous:SetFocusable(true)
        previous:SetNextFocus(next)
        previous:SetPreviousFocus(matchCase)
        optionsContainer:Add(previous)
        
        next:SetName("Next")
        next:SetFontSize(14)
        next:SetRightPadding(6)
        next:SetLeftPadding(6)
        next:SetHorizontalLayoutMode(next:parent:Libraries.Interface.Controls.Control:STANDARD)
        next:SetPercentageWidth(0.22)
        next:SetFocusable(true)
        next:SetNextFocus(findField)
        next:SetPreviousFocus(previous)
        optionsContainer:Add(next)

        matchCase:SetName("Match Case")
        matchCase:SetFontSize(14)
        matchCase:SetLeftPadding(6)
        matchCase:SetPercentageWidth(0.5)
        matchCase:SetFocusable(true)
        matchCase:SetNextFocus(previous)
        matchCase:SetPreviousFocus(wholeWord)
        matchCase:SetBehavior(wholeWordMatchCaseBehavior)
        optionsContainer:Add(matchCase)

        createFindContainer:Add(optionsContainer)

        FlowLayout matchesLayout
        Control matchesContainer
        matchesContainer:SetLayout(matchesLayout)
        matchesContainer:SetPercentageWidth(1.0)
        matchesContainer:SetVerticalLayoutMode(matchesContainer:FIT_CONTENTS)
        matchesContainer:SetTopPadding(50)
        matchesContainer:SetRightPadding(10)
        matchesContainer:SetLeftPadding(20)

        matches:SetText(cast(text, matchesCounter))
        matches:SetHorizontalLayoutMode(matches:parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)
        matches:SetPercentageWidth(0.2)
        matches:SetPixelHeight(20)
        matches:SetLeftPadding(6)
        matches:SetRightPadding(30)
        matchesContainer:Add(matches)

        Label matchesFound
        matchesFound:SetText("Matches Found")
        matchesFound:SetPixelHeight(20)
        matchesFound:SetLeftPadding(6)
        matchesFound:SetRightPadding(6)
        matchesFound:SetPercentageWidth(0.3)
        matchesContainer:Add(matchesFound)

        createFindContainer:Add(matchesContainer)
        
        return createFindContainer
    end

    action IsInitialized returns boolean
        return initialized
    end

    action Show
        if textBox not= undefined
            LayoutProperties properties = GetDefaultLayoutProperties()
            properties:SetPercentageX(0)
            properties:SetPercentageY(0)
            properties:SetPercentageOriginX(1)
            properties:SetPercentageOriginY(1)
            properties:SetPixelX(textBox:GetGlobalX() + textBox:GetWidth() - 20)
            properties:SetPixelY(textBox:GetGlobalY() + textBox:GetHeight() - 39)
        end

        parent:Dialog:Show()
    end

    action SetTextBox(CodeTextBox code)
        textBox = code
        textValue = textBox:GetText()
    end

    action GetTextBox returns CodeTextBox
        return textBox
    end

    //finds all instances of "find" within the textBox and stores the start and 
    //end index for each instance in the Array indices
    //If MatchCase is selected, calls MatchCaseFindText() to eliminate any Pair of indices that does not meet the MatchCase criteria
    //If WholeWord is selected, calls WholeWordFindText() to eliminate any Pair of indices taht does not meet the WholeWord criteria
    //Calls UpdateMatches() to update the matches counter to reflect the number of instances in the dialog
    //Calls UpdateSelections() to update the highlighted instances in the textBox
    action FindText(text find)
        integer findIndex = 0
        integer findSize = find:GetSize()
        integer endIndex = textValue:GetSize() - 1
        if find not= ""
            removeIndices = indices:CopyToArray()
            indices:Empty()

            if removeIndices:GetSize() not= 0 
                RemoveSelections()
            end

            if textValue:GetSize() not= 0
                repeat while (findIndex >= 0) and (findIndex + findSize <= endIndex)
                    Pair<integer> index
                    if find:EqualsIgnoringCase(textValue:GetSubtext(findIndex, (findIndex + findSize)))
                        if findIndex >= 0
                            index:Set(findIndex, (findIndex + (findSize - 1)))
                            indices:Add(index)
                            findIndex = findIndex + findSize
                        end
                    else
                        findIndex = findIndex + 1
                    end
                end
                matchesCounter = indices:GetSize()
            end

            if matchCase:GetToggleState()
                MatchCaseFindText(find)
            end

            if wholeWord:GetToggleState()
                WholeWordFindText(find)
            end

            UpdateSelections()
            UpdateMatches()
        end
    end

    //If there are any instances of find that do not meet the MatchCase criteria then the Pair<startIndex, endIndex> are added
    //to the removeIndices array 
    private action MatchCaseFindText(text find)
        text subtext = ""
        integer startIndex = 0
        integer endIndex = 0
        
        integer i = 0
        repeat while i < indices:GetSize()
            startIndex = indices:Get(i):GetFirstValue()
            endIndex = indices:Get(i):GetSecondValue()
            subtext = textValue:GetSubtext(startIndex, (endIndex + 1))
            if not find:Equals(subtext)                
                removeIndices:Add(indices:Get(i))                
            end           
            i = i + 1
        end 
    end

    action GetCurrentWord() returns text
        return findField:GetText()
    end

    //If there are any instances of find that do not meet the WholeWord criteria then the Pair<startIndex, endIndex> are added
    //to the removeIndices array 
    private action WholeWordFindText(text find)
        text break = "
"
        integer startIndex = 0
        integer endIndex = 0
        integer previousIndex = 0
        integer nextIndex = 0
        text previousCharacter = ""
        text nextCharacter = ""
        
        integer i = 0
        repeat while i < indices:GetSize()
            startIndex = indices:Get(i):GetFirstValue()
            endIndex = indices:Get(i):GetSecondValue()
            previousIndex = startIndex - 1
            nextIndex = endIndex + 1
                previousCharacter = textValue:GetCharacter(previousIndex)
                nextCharacter = textValue:GetCharacter(nextIndex)
            
                if not((previousCharacter = " ") or (previousCharacter = ".") or (previousCharacter = "/")
                or (previousCharacter = "*") or (previousCharacter = "(") or (previousCharacter = ")") or (previousCharacter = "+") 
                or (previousCharacter = "-") or (previousCharacter = ">") or (previousCharacter = "<") or (previousCharacter = "=") 
                or (previousCharacter = break))
                    removeIndices:Add(indices:Get(i))
                elseif not ((nextCharacter = " ") or (nextCharacter = ".") or (nextCharacter = "/") 
                or (nextCharacter = "*") or (nextCharacter = "(") or (nextCharacter = ")") or (nextCharacter = "+") 
                or (nextCharacter = "-") or (nextCharacter = ">") or (nextCharacter = "<") or (nextCharacter = "=") 
                or (nextCharacter = break))
                    removeIndices:Add(indices:Get(i))               
                end
            i = i + 1
        end
    end

    //Updates the matches label on the Dialog to reflect how many instances of "find" were found in the textBox
    private action UpdateMatches()
        matches:SetText(cast(text, indices:GetSize()))
    end

    //Updates the highlighted instances of "find" in the textBox
    //Calls RemoveSelections() to remove the Pair<startIndex, endIndex> that no 
    //longer apply due to MatchCase criteria, WholeWord criteria, or TextChange events 
    private action UpdateSelections()
        ColoredHighlight highlight
        Color color
        highlight:SetColor(color:Orange())
        integer startIndex = 0
        integer endIndex = 0

        if indices:GetSize() not= 0
            integer i = 0
            repeat while i < indices:GetSize()
                TextStyle textStyle
                Pair<integer> index
                index = indices:Get(i)
                startIndex = index:GetFirstValue()
                endIndex = index:GetSecondValue()
                textStyle:SetIndex(startIndex)
                textStyle:SetSize((endIndex - startIndex) + 1)
                textStyle:SetHighlight(highlight)
                textBox:AddTextStyle("highlight" + startIndex, textStyle)
                i = i + 1
            end
        end

        if removeIndices:GetSize() not= 0
            RemoveSelections()
        end
        UpdateMatches()
    end

    //Removes the insances of "find" taht are no longer applicable due to MatchCase 
    //criteria, WholeWord criteria, or a TextChange event
    private action RemoveSelections()
        integer startIndex = 0
        integer i = 0
        repeat while i < removeIndices:GetSize()            
            startIndex = removeIndices:Get(i):GetFirstValue()                        
            indices:Remove(removeIndices:Get(i))
            textBox:RemoveTextStyle("highlight" + startIndex)
            i = i + 1
        end
        removeIndices:Empty()       
    end

    
    action TextChanged(TextChangeEvent event)
        text find = ""

        if event:GetEventType() = event:ADDED
            find = findField:GetText()
            if find not= ""
                FindText(find)
            end
        elseif event:GetEventType() = event:DELETED
            find = findField:GetText()
            
            if find = ""
                removeIndices = indices:CopyToArray()
                indices:Empty()
                RemoveSelections()
                UpdateMatches()
            elseif find not= ""
                FindText(find)
            end
        elseif event:GetEventType() = event:MODIFIED
            find = findField:GetText()
            if find not= ""
                FindText(find)
            end
        end        
    end

end