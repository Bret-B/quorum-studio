package Libraries.Development.Environment.Studio.Interface

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.Button
use Libraries.Development.Environment.Studio.Behaviors.SaveChangesBehavior
use Libraries.Development.Environment.Studio.Behaviors.DiscardChangesBehavior
use Libraries.Development.Environment.Studio.Behaviors.CancelExitBehavior
use Libraries.Game.GameStateManager
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Interface.Accessibility
use Libraries.Compute.Math
use Libraries.Interface.Controls.ProgressBar
use Libraries.Interface.Views.ControlShaderView

class CheckForUpdatesDialog is Dialog
    GameStateManager manager
    QuorumStudio studio = cast(QuorumStudio, manager:GetGame())
    Label warningLabel

    boolean initialized = false
    boolean updateChecked = false
    integer newMajorVersion = -10
    integer newMinorVersion = -10
    integer newBuildVersion = -10
    number percent = -1
    boolean shutdown = false
    ProgressBar progress

    on create
    end

    action OnShow()
        progress:Focus()
    end

    action Initialize
        initialized = true

        SetName("Checking for Updates")
        SetPixelWidth(450)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)    

        ControlShaderView view
        view:Initialize()
        
        Control panel
        FlowLayout newFileLayout
        panel:SetInterfaceOptionsKey("Dialog")
        panel:SetLayout(newFileLayout)
        panel:SetPercentageWidth(1.0)
        panel:SetPixelHeight(110)
        panel:SetBorderThickness(1)
        panel:Add(CreateControl())
        panel:SetView2D(view)
        panel:Add(progress)
        Add(panel)
        progress:SetFocusable(true)
    end

    private action CreateControl returns Control
        Color color
        Control control
        FlowLayout layout
        control:SetLayout(layout)
        control:SetBorderThickness(1)
        control:SetBorderColor(color:Black())
        control:SetPercentageWidth(1.0)
        control:SetVerticalLayoutMode(control:FIT_CONTENTS)

        text result = ""
        if not updateChecked
            result = "Could not connect to update server."
        elseif IsNewer()
            result = "Quorum Studio " + GetNewVersionNumber() + "
                Download in progress."
        else
            result = "You are up to date!"
        end

        Accessibility access = manager:GetAccessibility()
        if access not= undefined
            access:Notify(warningLabel, result + ". Download in progress. Please wait.")
        end

        warningLabel:SetText(result)

        warningLabel:SetTopPadding(20)
        warningLabel:SetLeftPadding(10)
        warningLabel:SetRightPadding(10)
        warningLabel:SetPercentageWidth(1.0)
        warningLabel:SetFocusable(true)
        control:Add(warningLabel)

        Control buttonContainer
        FlowLayout buttonLayout
        buttonContainer:SetLayout(buttonLayout)
        buttonContainer:SetPercentageWidth(1.0)
        buttonContainer:SetVerticalLayoutMode(buttonContainer:FIT_CONTENTS)
        buttonContainer:SetTopPadding(50)
        buttonContainer:SetBottomPadding(20)

        Control buttonPadding
        buttonPadding:SetPercentageWidth(0.2)
        buttonPadding:SetPixelHeight(1)
        buttonContainer:Add(buttonPadding)

        buttonContainer:Add(buttonPadding)
        control:Add(buttonContainer)
        
        return control
    end

    private action IsNewer returns boolean
        integer major = studio:GetMajorVersion()
        integer minor = studio:GetMinorVersion()
        integer build = studio:GetBuildVersion()

        if newMajorVersion > major
            return true
        elseif newMajorVersion = major and newMinorVersion > minor
            return true
        elseif newMajorVersion = major and newMinorVersion = minor and 
            newBuildVersion > build
            return true
        end
        
        return false
    end

    private action GetNewVersionNumber returns text
        return "" + newMajorVersion + "." + newMinorVersion + "." + newBuildVersion
    end

    action Update(number seconds)
        if percent not= -1
            text result = "Quorum Studio version " + GetNewVersionNumber() + "
                Download in progress "
            integer value = cast(integer, percent)
            result = result + value + "%"
            warningLabel:SetText(result)
            progress:SetValue(value)
        end

        if shutdown
            Hide()
        end
    end

    action OnHide()
        studio:ResetExitFlag()   
    end

    action GetPercent returns number
        return percent
    end

    action SetPercent(number percent)
        me:percent = percent
    end

    action GetShutdown returns boolean
        return shutdown
    end

    action SetShutdown(boolean shutdown)
        me:shutdown = shutdown
    end

    action GetNewMajorVersion returns integer
        return newMajorVersion
    end

    action SetNewMajorVersion(integer newMajorVersion)
        me:newMajorVersion = newMajorVersion
    end

    action GetNewMinorVersion returns integer
        return newMinorVersion
    end

    action SetNewMinorVersion(integer newMinorVersion)
        me:newMinorVersion = newMinorVersion
    end

    action GetNewBuildVersion returns integer
        return newBuildVersion
    end

    action SetNewBuildVersion(integer newBuildVersion)
        me:newBuildVersion = newBuildVersion
    end
    action GetUpdateChecked returns boolean
        return updateChecked
    end

    action SetUpdateChecked(boolean updateChecked)
        me:updateChecked = updateChecked
    end

end