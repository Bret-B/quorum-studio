package Libraries.Development.Environment.Studio.Interface.VisualEditor

use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Game.Graphics.Color
use Libraries.Compute.Vector3
use Libraries.Interface.Controls.Scenes.SceneConstants
use Libraries.Interface.Controls.Scenes.Items.EditorModel
use Libraries.Interface.Controls.Scenes.Items.Highlights.SelectionHighlight3D

class ModelSelectionHighlight is SelectionHighlight3D

    action GetEditorModel returns EditorModel
        return cast(EditorModel, GetItem())
    end

    action GetColor returns Color
        EditorModel item = GetEditorModel()
        if item not= undefined
            return item:GetColor()
        else
            return undefined
        end
    end

    action SetColor(Color color)
        EditorModel item = GetEditorModel()
        if item not= undefined
            item:SetColor(color)
        end
    end

    action Scale(Vector3 vector)
        EditorModel item = GetEditorModel()
        parent:Model:Scale(vector)
        if item not= undefined
            item:Scale(vector)
        end
    end

    action Scale(number x, number y, number z)
        EditorModel item = GetEditorModel()
        parent:Model:Scale(x, y, z)
        if item not= undefined
            item:Scale(x, y, z)
        end
    end

    action SetScaleX(number scale)
        EditorModel item = GetEditorModel()
        parent:EditorItem3D:SetScaleX(scale)
        if item not= undefined
            item:SetScaleX(scale)
        end
    end

    action SetScaleY(number scale)
        EditorModel item = GetEditorModel()
        parent:EditorItem3D:SetScaleY(scale)
        if item not= undefined
            item:SetScaleY(scale)
        end
    end

    action SetScaleZ(number scale)
        EditorModel item = GetEditorModel()
        parent:EditorItem3D:SetScaleZ(scale)
        if item not= undefined
            item:SetScaleZ(scale)
        end
    end


    action SetRotation(number newYaw, number newPitch, number newRoll)
        EditorModel item = GetEditorModel()
        number yaw = parent:EditorModel:yaw
        number pitch = parent:EditorModel:pitch
        number roll = parent:EditorModel:roll

        if item not= undefined
            if roll not= 0
                item:Rotate(0, 0, 1, -roll)
            end
            if pitch not= 0
                item:Rotate(1, 0, 0, -pitch)
            end
            if yaw not= 0
                item:Rotate(0, 1, 0, -yaw)
            end
    
            if newYaw not= 0
                item:Rotate(0, 1, 0, newYaw)
            end
            if newPitch not= 0
                item:Rotate(1, 0, 0, newPitch)
            end
            if newRoll not= 0
                item:Rotate(0, 0, 1, newRoll)
            end

            SceneConstants constants
            JavaScriptObjectNotation json = undefined
            if item:HasProperty(constants:EULER_ANGLES)
                json = item:GetProperty(constants:EULER_ANGLES)
            else
                JavaScriptObjectNotation newJson
                json = newJson
                json:SetArray()
                json:Add(0.0)
                json:Add(0.0)
                json:Add(0.0)
                item:SetProperty(constants:EULER_ANGLES, json)
            end
    
            JavaScriptObjectNotation temp = json:Get(0)
            temp:SetNumber(newYaw)
            temp = json:Get(1)
            temp:SetNumber(newPitch)
            temp = json:Get(2)
            temp:SetNumber(newRoll)
        end

        parent:EditorItem3D:SetRotation(newYaw, newPitch, newRoll)
    end

end