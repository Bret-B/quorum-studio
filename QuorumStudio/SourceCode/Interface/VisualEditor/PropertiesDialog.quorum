package Libraries.Development.Environment.Studio.Interface.VisualEditor

use Libraries.Interface.Controls.Dialog
use Libraries.Interface.Events.SelectionListener
use Libraries.Interface.Events.TextChangeListener
use Libraries.Interface.Controls.TextField
use Libraries.Game.Graphics.Label
use Libraries.Interface.Views.LabelBoxView
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Events.SelectionEvent
use Libraries.Interface.Events.TextChangeEvent

class PropertiesDialog is Dialog, SelectionListener, TextChangeListener
    
    boolean initialized = false

    VisualSceneController controller = undefined

    // Controls used on the dialog itself
    Label nameLabel = undefined
    TextField nameField = undefined
    TextField positionXField = undefined
    TextField positionYField = undefined
    TextField positionZField = undefined

    action Initialize(VisualSceneController controller)
        if initialized
            return now
        end

        SetInputGroup("PropertiesDialog")

        initialized = true

        me:controller = controller
        controller:SetPropertiesDialog(me)
        controller:AddSelectionListener(me)

        Label label
        nameLabel = label
        
        TextField field
        nameField = field

        SetName("Object Properties")

        SetPixelWidth(300)
        SetVerticalLayoutMode(parent:Libraries.Interface.Controls.Control:FIT_CONTENTS)

        LabelBoxView view
        Color color
        view:SetBorderThickness(1)
        view:SetBorderStyle(view:ALL - view:TOP)
        view:Initialize(color:CustomColor(0.9, 0.9, 0.9, 1), color:Black())
        
        Control panel
        FlowLayout propertiesLayout
        panel:SetLayout(propertiesLayout)
        panel:SetPercentageWidth(1.0)
        panel:SetVerticalLayoutMode(panel:FIT_CONTENTS)
        panel:SetBorderColor(color:Black())
        panel:SetBorderThickness(1)
        panel:SetView2D(view)

        FlowLayout nameLayout
        Control nameContainer
        nameContainer:SetLayout(nameLayout)
        nameContainer:SetPercentageWidth(1.0)
        nameContainer:SetVerticalLayoutMode(nameContainer:FIT_CONTENTS)
        nameContainer:SetLeftPadding(20)
        nameContainer:SetTopPadding(20)
        nameContainer:SetRightPadding(30)
        nameContainer:SetBottomPadding(20)

        nameLabel:SetText("Name:")
        nameLabel:SetRightPadding(10)
        nameContainer:Add(nameLabel)
        
        nameField:SetHorizontalLayoutMode(nameField:parent:Libraries.Interface.Controls.Control:FILL)
        nameField:SetName("Name")
        nameField:SetText("")
        nameField:SetFocusable(true)
        nameField:AddTextChangeListener(me)
        nameContainer:Add(nameField)
        panel:Add(nameContainer)

        Label positionLabel
        
        TextField positionXField
        me:positionXField = positionXField

        TextField positionYField
        me:positionYField = positionYField

        TextField positionZField
        me:positionZField = positionZField

        FlowLayout positionLayout
        Control positionContainer
        positionContainer:SetLayout(positionLayout)
        positionContainer:SetPercentageWidth(1.0)
        positionContainer:SetVerticalLayoutMode(positionContainer:FIT_CONTENTS)
        positionContainer:SetLeftPadding(20)
        positionContainer:SetTopPadding(20)
        positionContainer:SetRightPadding(30)
        positionContainer:SetBottomPadding(20)

        positionLabel:SetText("Position:")
        positionLabel:SetRightPadding(10)
        positionContainer:Add(positionLabel)
        
        FlowLayout positionFieldLayout
        Control positionFieldContainer
        positionFieldContainer:SetLayout(positionFieldLayout)

        positionFieldContainer:SetHorizontalLayoutMode(positionFieldContainer:FILL)
        positionFieldContainer:SetName("Position Fields")
        positionXField:SetName("X")
        positionXField:SetText("")
        positionXField:SetFocusable(true)
        positionXField:AddTextChangeListener(me)
        positionXField:SetRightPadding(8)
        positionXField:SetPercentageWidth(0.33)
        positionXField:SetPixelWidth(-8)
        positionFieldContainer:Add(positionXField)

        positionYField:SetName("Y")
        positionYField:SetText("")
        positionYField:SetFocusable(true)
        positionYField:AddTextChangeListener(me)
        positionYField:SetRightPadding(8)
        positionYField:SetPercentageWidth(0.33)
        positionYField:SetPixelWidth(-8)
        positionFieldContainer:Add(positionYField)

        positionZField:SetName("Z")
        positionZField:SetText("")
        positionZField:SetFocusable(true)
        positionZField:AddTextChangeListener(me)
        positionZField:SetRightPadding(8)
        positionZField:SetPercentageWidth(0.33)
        positionZField:SetPixelWidth(-8)
        positionFieldContainer:Add(positionZField)

        positionContainer:Add(positionFieldContainer)
        panel:Add(positionContainer)

        Add(panel)
    end

    action Show
        if controller not= undefined
            LayoutProperties properties = GetDefaultLayoutProperties()
            properties:SetPercentageX(0)
            properties:SetPercentageY(0)
            properties:SetPercentageOriginX(1)
            properties:SetPercentageOriginY(1)
            properties:SetPixelX(controller:GetGlobalX() + controller:GetWidth() - 20)
            properties:SetPixelY(controller:GetGlobalY() + controller:GetHeight() - 20)
        end
        parent:Dialog:Show()
    end

    action SelectionChanged(SelectionEvent event)
        if event:GetSelection() is VisualEditorSelection
            VisualEditorSelection selection = cast(VisualEditorSelection, event:GetSelection())
            if selection:IsEmpty()
                if IsShowing()
                    Hide()
                end
            else
                SetFields(selection:GetSelection())
                if not IsShowing()
                    Show()
                end
            end
        end
    end

    action SetFields(InteractableItem item)
        nameField:SetText(item:GetName())
        positionXField:SetText("" + item:GetX())
        positionYField:SetText("" + item:GetY())
        positionZField:SetText("" + item:GetZ())
    end

    action TextChanged(TextChangeEvent event)
        InteractableItem currentItem = controller:GetSelection()
        Control control = event:GetControl()

        if currentItem = undefined
            return now
        end

        if control:Equals(nameField)
            if nameField:GetText() not= currentItem:GetName()
                currentItem:SetName(nameField:GetText())
            end
        elseif control:Equals(positionXField)
            check
                number value = positionXField:GetText():ParseNumber()
                if value not= currentItem:GetX()
                    currentItem:SetX(value)
                end
            detect e is Error
                // Do nothing.
            end
        elseif control:Equals(positionYField)
            check
                number value = positionYField:GetText():ParseNumber()
                if value not= currentItem:GetY()
                    currentItem:SetY(value)
                end
            detect e is Error
                // Do nothing.
            end
        elseif control:Equals(positionZField)
            check
                number value = positionZField:GetText():ParseNumber()
                if value not= currentItem:GetZ()
                    currentItem:SetZ(value)
                end
            detect e is Error
                // Do nothing.
            end
        end
    end

    /*
    Moves the focus to one of the fields in the properties dialog. By default
    this is the name field (the first field in the panel), but it could also be
    changed to a different field, possibly context sensitive.
    */
    action FocusField
        nameField:Focus()
        nameField:Select(0, nameField:GetSize(), true)
    end

    action GetSceneController returns VisualSceneController
        return controller
    end

    action SetNameField(text name)
        nameField:RemoveTextChangeListener(me)
        nameField:SetText(name)
        nameField:AddTextChangeListener(me)
    end
end