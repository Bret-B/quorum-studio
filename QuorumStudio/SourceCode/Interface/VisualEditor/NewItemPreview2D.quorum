package Libraries.Development.Environment.Studio.Interface.VisualEditor
use Libraries.Game.Graphics.Color
use Libraries.Game.Scenes.SceneProperties
use Libraries.Data.Formats.JavaScriptObjectNotation

class NewItemPreview2D is NewItemPreview, InteractableItem2D

    on create
        SetInputGroup("NewItemPreview2D")
    end

    action Load(VisualSceneController controller, DrawableBlueprint schematic)
        SetController(controller)
        SetItemBlueprint(schematic)

        SetName(schematic:GetName() + controller:GetNextNamePostfix(schematic:GetName()))
        SetDescription(schematic:GetDescription())
        Load(schematic:GetTexture())
        SetSize(schematic:GetWidth(), schematic:GetHeight())
        SetScale(schematic:GetScaleX(), schematic:GetScaleY())
        SetRotation(schematic:GetRotation())
        SetColor(schematic:GetColor())

        if schematic:IsPhysicsEnabled()
            SetEditorPhysicsEnabled(true)
            if schematic:GetResponsiveness() >= 0
                SetEditorResponsiveness(schematic:GetResponsiveness())
            end
        end
    end

    action ConvertToDrawable returns Drawable
        Drawable drawable
        drawable:Load(me)
        drawable:SetName(GetName())
        drawable:SetSize(GetWidth(), GetHeight())
        drawable:SetScale(GetScaleX(), GetScaleY())
        drawable:SetRotation(GetRotation())
        drawable:SetColor(GetColor():Copy())
        drawable:SetPosition(GetX(), GetY())
        
        ItemBlueprint itemBlueprint = GetItemBlueprint()
        if itemBlueprint is DrawableBlueprint
            DrawableBlueprint schematic = cast(DrawableBlueprint, itemBlueprint)
            if schematic:GetDrawableType() >= 0
                drawable:SetDrawableType(schematic:GetDrawableType())
            end
        end

        if IsEditorPhysicsEnabled()
            SceneProperties properties
            JavaScriptObjectNotation physicsJson
            physicsJson:SetBoolean(true)
            drawable:SetProperty(properties:PHYSICS_ENABLED, physicsJson)

            integer responsiveness = GetEditorResponsiveness()
            if responsiveness >= 0
                JavaScriptObjectNotation responsiveJson
                responsiveJson:SetInteger(responsiveness)
                drawable:SetProperty(properties:RESPONSIVENESS, responsiveJson)
            end
        end

        return drawable
    end

    action CyclePresetColor
        // TO-DO
    end
end