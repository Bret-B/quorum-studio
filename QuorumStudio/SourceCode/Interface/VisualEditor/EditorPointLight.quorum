package Libraries.Development.Environment.Studio.Interface.VisualEditor

use Libraries.Game.Graphics.PointLight
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Material
use Libraries.Game.Graphics.ColorAttribute
use Libraries.Development.Environment.Resources
use Libraries.Compute.Vector3

class EditorPointLight is EditorModel, PointLight

    boolean modelLoaded = false

    action SetColor(Color color)
        parent:PointLight:SetColor(color)
        SetDiffuseColor(color)
    end

    action GetColor returns Color
        return parent:PointLight:GetColor()
    end

    action SetLight(Color color, Vector3 position, number intensity)
        if modelLoaded = false
            LoadPlaceholderBox(color)
        end        

        parent:PointLight:SetLight(color, position, intensity)
        SetPosition(GetPosition())
    end

    action LoadPlaceholderBox(Color color)
        modelLoaded = true
        Resources resources
        LoadBox(0.5, 0.5, 0.5, resources:GetLightTexture())
            
        // We need to add a diffuse color attribute to the model so that the textured box also supports color.
        Material material = GetMaterials():Get(0)
        ColorAttribute attribute
        attribute:SetAttribute(attribute:GetDiffuseValue(), color)
        material:Add(attribute)
    end

    action SetIntensity(number intensity)
        parent:PointLight:SetIntensity(intensity)
    end

    action GetIntensity returns number
        return parent:PointLight:GetIntensity()
    end

end